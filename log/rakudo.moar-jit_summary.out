/home/coke/perl5/perlbrew/perls/perl-5.20.1/bin/perl t/spec/fudgeall rakudo.moar t/spec/S01-perl-5-integration/array.t t/spec/S01-perl-5-integration/basic.t t/spec/S01-perl-5-integration/class.t t/spec/S01-perl-5-integration/exception_handling.t t/spec/S01-perl-5-integration/hash.t t/spec/S01-perl-5-integration/import.t t/spec/S01-perl-5-integration/method.t t/spec/S01-perl-5-integration/return.t t/spec/S01-perl-5-integration/roundtrip.t t/spec/S01-perl-5-integration/strings.t t/spec/S01-perl-5-integration/subs.t t/spec/S02-lexical-conventions/begin_end_pod.t t/spec/S02-lexical-conventions/bom.t t/spec/S02-lexical-conventions/comments.t t/spec/S02-lexical-conventions/end-pod.t t/spec/S02-lexical-conventions/minimal-whitespace.t t/spec/S02-lexical-conventions/one-pass-parsing.t t/spec/S02-lexical-conventions/pod-in-multi-line-exprs.t t/spec/S02-lexical-conventions/sub-block-parsing.t t/spec/S02-lexical-conventions/unicode.t t/spec/S02-lexical-conventions/unicode-whitespace.t t/spec/S02-lexical-conventions/unspace.t t/spec/S02-lists/indexing.t t/spec/S02-lists/tree.t t/spec/S02-literals/adverbs.t t/spec/S02-literals/allomorphic.t t/spec/S02-literals/array-interpolation.t t/spec/S02-literals/autoref.t t/spec/S02-literals/char-by-name.t t/spec/S02-literals/char-by-number.t t/spec/S02-literals/fmt-interpolation.t t/spec/S02-literals/hash-interpolation.t t/spec/S02-literals/heredocs.t t/spec/S02-literals/hex_chars.t t/spec/S02-literals/listquote.t t/spec/S02-literals/listquote-whitespace.t t/spec/S02-literals/misc-interpolation.t t/spec/S02-literals/numeric.t t/spec/S02-literals/pair-boolean.t t/spec/S02-literals/pairs.t t/spec/S02-literals/pod.t t/spec/S02-literals/quoting.t t/spec/S02-literals/quoting-unicode.t t/spec/S02-literals/radix.t t/spec/S02-literals/string-interpolation.t t/spec/S02-literals/sub-calls.t t/spec/S02-literals/subscript.t t/spec/S02-literals/types.t t/spec/S02-literals/underscores.t t/spec/S02-literals/version.t t/spec/S02-magicals/78258.t t/spec/S02-magicals/args.t t/spec/S02-magicals/block.t t/spec/S02-magicals/DISTRO.t t/spec/S02-magicals/dollar_bang.t t/spec/S02-magicals/dollar-underscore.t t/spec/S02-magicals/env.t t/spec/S02-magicals/file_line.t t/spec/S02-magicals/KERNEL.t t/spec/S02-magicals/PERL.t t/spec/S02-magicals/pid.t t/spec/S02-magicals/progname.t t/spec/S02-magicals/sub.t t/spec/S02-magicals/subname.t t/spec/S02-magicals/VM.t t/spec/S02-names/bare-sigil.t t/spec/S02-names/caller.t t/spec/S02-names/identifier.t t/spec/S02-names/indirect.t t/spec/S02-names/is_cached.t t/spec/S02-names/is_default.t t/spec/S02-names/is_dynamic.t t/spec/S02-names/name.t t/spec/S02-names/our.t t/spec/S02-names/pseudo.t t/spec/S02-names/strict.t t/spec/S02-names/symbolic-deref.t t/spec/S02-names-vars/contextual.t t/spec/S02-names-vars/fmt.t t/spec/S02-names-vars/list_array_perl.t t/spec/S02-names-vars/names.t t/spec/S02-names-vars/perl.t t/spec/S02-names-vars/signature.t t/spec/S02-names-vars/variables-and-packages.t t/spec/S02-names-vars/varnames.t t/spec/S02-one-pass-parsing/less-than.t t/spec/S02-packages/package-lookup.t t/spec/S02-types/anon_block.t t/spec/S02-types/array_extending.t t/spec/S02-types/array_ref.t t/spec/S02-types/array-shapes.t t/spec/S02-types/array.t t/spec/S02-types/assigning-refs.t t/spec/S02-types/autovivification.t t/spec/S02-types/bag.t t/spec/S02-types/baghash.t t/spec/S02-types/bool.t t/spec/S02-types/built-in.t t/spec/S02-types/capture.t t/spec/S02-types/catch_type_cast_mismatch.t t/spec/S02-types/compact.t t/spec/S02-types/declare.t t/spec/S02-types/fatrat.t t/spec/S02-types/flattening.t t/spec/S02-types/hash_ref.t t/spec/S02-types/hash.t t/spec/S02-types/infinity.t t/spec/S02-types/instants-and-durations.t t/spec/S02-types/int-uint.t t/spec/S02-types/is-type.t t/spec/S02-types/isDEPRECATED.t t/spec/S02-types/keyhash.t t/spec/S02-types/lazy-lists.t t/spec/S02-types/lists.t t/spec/S02-types/mix.t t/spec/S02-types/mixhash.t t/spec/S02-types/mixed_multi_dimensional.t t/spec/S02-types/multi_dimensional_array.t t/spec/S02-types/nan.t t/spec/S02-types/native.t t/spec/S02-types/nested_arrays.t t/spec/S02-types/nested_pairs.t t/spec/S02-types/nil.t t/spec/S02-types/num.t t/spec/S02-types/pair.t t/spec/S02-types/list.t t/spec/S02-types/parsing-bool.t t/spec/S02-types/range.t t/spec/S02-types/resolved-in-setting.t t/spec/S02-types/set.t t/spec/S02-types/sethash.t t/spec/S02-types/sigils-and-types.t t/spec/S02-types/stash.t t/spec/S02-types/subscripts_and_context.t t/spec/S02-types/subset.t t/spec/S02-types/type.t t/spec/S02-types/undefined-types.t t/spec/S02-types/unicode.t t/spec/S02-types/version.t t/spec/S02-types/whatever.t t/spec/S02-types/WHICH.t t/spec/S03-binding/arrays.t t/spec/S03-binding/attributes.t t/spec/S03-binding/closure.t t/spec/S03-binding/hashes.t t/spec/S03-binding/nested.t t/spec/S03-binding/ro.t t/spec/S03-binding/scalars.t t/spec/S03-feeds/basic.t t/spec/S03-junctions/associative.t t/spec/S03-junctions/autothreading.t t/spec/S03-junctions/boolean-context.t t/spec/S03-junctions/misc.t t/spec/S03-metaops/cross.t t/spec/S03-metaops/eager-hyper.t t/spec/S03-metaops/hyper.t t/spec/S03-metaops/not.t t/spec/S03-metaops/reduce.t t/spec/S03-metaops/reverse.t t/spec/S03-metaops/zip.t t/spec/S03-operators/adverbial-modifiers.t t/spec/S03-operators/also.t t/spec/S03-operators/andthen.t t/spec/S03-operators/orelse.t t/spec/S03-operators/arith.t t/spec/S03-operators/assign-is-not-binding.t t/spec/S03-operators/assign.t t/spec/S03-operators/autoincrement-range.t t/spec/S03-operators/autoincrement.t t/spec/S03-operators/autovivification.t t/spec/S03-operators/bag.t t/spec/S03-operators/basic-types.t t/spec/S03-operators/bit.t t/spec/S03-operators/boolean-bitwise.t t/spec/S03-operators/brainos.t t/spec/S03-operators/composition.t t/spec/S03-operators/custom.t t/spec/S03-operators/buf.t t/spec/S03-operators/chained-declarators.t t/spec/S03-operators/cmp.t t/spec/S03-operators/comparison-simple.t t/spec/S03-operators/comparison.t t/spec/S03-operators/context-forcers.t t/spec/S03-operators/context.t t/spec/S03-operators/equality.t t/spec/S03-operators/eqv.t t/spec/S03-operators/flip-flop.t t/spec/S03-operators/gcd.t t/spec/S03-operators/div.t t/spec/S03-operators/identity.t t/spec/S03-operators/increment.t t/spec/S03-operators/infixed-function.t t/spec/S03-operators/inplace.t t/spec/S03-operators/is-divisible-by.t t/spec/S03-operators/lcm.t t/spec/S03-operators/list-quote-junction.t t/spec/S03-operators/minmax.t t/spec/S03-operators/misc.t t/spec/S03-operators/mix.t t/spec/S03-operators/names.t t/spec/S03-operators/nesting.t t/spec/S03-operators/not.t t/spec/S03-operators/numeric-shift.t t/spec/S03-operators/overflow.t t/spec/S03-operators/precedence.t t/spec/S03-operators/range-basic.t t/spec/S03-operators/range-int.t t/spec/S03-operators/range.t t/spec/S03-operators/reduce-le1arg.t t/spec/S03-operators/relational.t t/spec/S03-operators/repeat.t t/spec/S03-operators/scalar-assign.t t/spec/S03-operators/set.t t/spec/S03-operators/short-circuit.t t/spec/S03-operators/so.t t/spec/S03-operators/spaceship-and-containers.t t/spec/S03-operators/spaceship.t t/spec/S03-operators/subscript-adverbs.t t/spec/S03-operators/subscript-vs-lt.t t/spec/S03-operators/ternary.t t/spec/S03-operators/value_equivalence.t t/spec/S03-sequence/arity0.t t/spec/S03-sequence/arity-2-or-more.t t/spec/S03-sequence/basic.t t/spec/S03-sequence/limit-arity-2-or-more.t t/spec/S03-sequence/misc.t t/spec/S03-sequence/nonnumeric.t t/spec/S03-smartmatch/any-any.t t/spec/S03-smartmatch/any-bool.t t/spec/S03-smartmatch/any-callable.t t/spec/S03-smartmatch/any-complex.t t/spec/S03-smartmatch/any-hash-pair.t t/spec/S03-smartmatch/any-method.t t/spec/S03-smartmatch/any-num.t t/spec/S03-smartmatch/any-pair.t t/spec/S03-smartmatch/any-str.t t/spec/S03-smartmatch/any-sub.t t/spec/S03-smartmatch/any-type.t t/spec/S03-smartmatch/array-array.t t/spec/S03-smartmatch/array-hash.t t/spec/S03-smartmatch/capture-signature.t t/spec/S03-smartmatch/disorganized.t t/spec/S03-smartmatch/hash-hash.t t/spec/S03-smartmatch/range-range.t t/spec/S03-smartmatch/regex-hash.t t/spec/S03-smartmatch/scalar-hash.t t/spec/S03-smartmatch/signature-signature.t t/spec/S04-blocks-and-statements/let.t t/spec/S04-blocks-and-statements/pointy-rw.t t/spec/S04-blocks-and-statements/pointy.t t/spec/S04-blocks-and-statements/temp.t t/spec/S04-declarations/constant.t t/spec/S04-declarations/implicit-parameter.t t/spec/S04-declarations/multiple.t t/spec/S04-declarations/my.t t/spec/S04-declarations/our.t t/spec/S04-declarations/smiley.t t/spec/S04-declarations/state.t t/spec/S04-declarations/will.t t/spec/S04-exception-handlers/catch.t t/spec/S04-exception-handlers/control.t t/spec/S04-exception-handlers/top-level.t t/spec/S04-exceptions/control_across_runloop.t t/spec/S04-exceptions/fail.t t/spec/S04-exceptions/pending.t t/spec/S04-phasers/ascending-order.t t/spec/S04-phasers/begin.t t/spec/S04-phasers/check.t t/spec/S04-phasers/descending-order.t t/spec/S04-phasers/end.t t/spec/S04-phasers/enter-leave.t t/spec/S04-phasers/eval-in-begin.t t/spec/S04-phasers/first.t t/spec/S04-phasers/init.t t/spec/S04-phasers/in-eval.t t/spec/S04-phasers/in-loop.t t/spec/S04-phasers/keep-undo.t t/spec/S04-phasers/multiple.t t/spec/S04-phasers/next.t t/spec/S04-phasers/pre-post.t t/spec/S04-phasers/rvalue.t t/spec/S04-statement-modifiers/for.t t/spec/S04-statement-modifiers/given.t t/spec/S04-statement-modifiers/if.t t/spec/S04-statement-modifiers/unless.t t/spec/S04-statement-modifiers/until.t t/spec/S04-statement-modifiers/values_in_bool_context.t t/spec/S04-statement-modifiers/while.t t/spec/S04-statement-modifiers/with.t t/spec/S04-statement-modifiers/without.t t/spec/S04-statement-parsing/hash.t t/spec/S04-statements/do.t t/spec/S04-statements/for-scope.t t/spec/S04-statements/for.t t/spec/S04-statements/for_with_only_one_item.t t/spec/S04-statements/gather.t t/spec/S04-statements/given.t t/spec/S04-statements/if.t t/spec/S04-statements/label.t t/spec/S04-statements/last.t t/spec/S04-statements/loop.t t/spec/S04-statements/map-and-sort-in-for.t t/spec/S04-statements/next.t t/spec/S04-statements/no-implicit-block.t t/spec/S04-statements/once.t t/spec/S04-statements/quietly.t t/spec/S04-statements/redo.t t/spec/S04-statements/repeat.t t/spec/S04-statements/return.t t/spec/S04-statements/sink.t t/spec/S04-statements/terminator.t t/spec/S04-statements/try.t t/spec/S04-statements/unless.t t/spec/S04-statements/until.t t/spec/S04-statements/when.t t/spec/S04-statements/while.t t/spec/S04-statements/with.t t/spec/S05-capture/alias.t t/spec/S05-capture/array-alias.t t/spec/S05-capture/caps.t t/spec/S05-capture/dot.t t/spec/S05-capture/match-object.t t/spec/S05-capture/named.t t/spec/S05-capture/subrule.t t/spec/S05-grammar/action-stubs.t t/spec/S05-grammar/example.t t/spec/S05-grammar/inheritance.t t/spec/S05-grammar/methods.t t/spec/S05-grammar/namespace.t t/spec/S05-grammar/parse_and_parsefile.t t/spec/S05-grammar/polymorphism.t t/spec/S05-grammar/protoregex.t t/spec/S05-grammar/protos.t t/spec/S05-grammar/signatures.t t/spec/S05-grammar/ws.t t/spec/S05-interpolation/lexicals.t t/spec/S05-interpolation/regex-in-variable.t t/spec/S05-mass/charsets.t t/spec/S05-mass/named-chars.t t/spec/S05-mass/properties-block.t t/spec/S05-mass/properties-derived.t t/spec/S05-mass/properties-general.t t/spec/S05-mass/properties-script.t t/spec/S05-mass/recursive.t t/spec/S05-mass/rx.t t/spec/S05-mass/stdrules.t t/spec/S05-match/arrayhash.t t/spec/S05-match/blocks.t t/spec/S05-match/capturing-contexts.t t/spec/S05-match/make.t t/spec/S05-match/non-capturing.t t/spec/S05-match/perl.t t/spec/S05-match/positions.t t/spec/S05-metachars/closure.t t/spec/S05-metachars/line-anchors.t t/spec/S05-metachars/newline.t t/spec/S05-metachars/tilde.t t/spec/S05-metasyntax/angle-brackets.t t/spec/S05-metasyntax/assertions.t t/spec/S05-metasyntax/changed.t t/spec/S05-metasyntax/charset.t t/spec/S05-metasyntax/delimiters.t t/spec/S05-metasyntax/interpolating-closure.t t/spec/S05-metasyntax/litvar.t t/spec/S05-metasyntax/longest-alternative.t t/spec/S05-metasyntax/lookaround.t t/spec/S05-metasyntax/null.t t/spec/S05-metasyntax/proto-token-ltm.t t/spec/S05-metasyntax/regex.t t/spec/S05-metasyntax/repeat.t t/spec/S05-metasyntax/sequential-alternation.t t/spec/S05-metasyntax/single-quotes.t t/spec/S05-metasyntax/unknown.t t/spec/S05-metasyntax/unicode-property-pair.t t/spec/S05-modifier/continue.t t/spec/S05-modifier/counted-match.t t/spec/S05-modifier/counted.t t/spec/S05-modifier/global.t t/spec/S05-modifier/ignorecase.t t/spec/S05-modifier/ignorecase-and-ignoremark.t t/spec/S05-modifier/ignoremark.t t/spec/S05-modifier/ii.t t/spec/S05-modifier/my.t t/spec/S05-modifier/overlapping.t t/spec/S05-modifier/perl5_0.t t/spec/S05-modifier/perl5_1.t t/spec/S05-modifier/perl5_2.t t/spec/S05-modifier/perl5_3.t t/spec/S05-modifier/perl5_4.t t/spec/S05-modifier/perl5_5.t t/spec/S05-modifier/perl5_6.t t/spec/S05-modifier/perl5_7.t t/spec/S05-modifier/perl5_8.t t/spec/S05-modifier/perl5_9.t t/spec/S05-modifier/pos.t t/spec/S05-modifier/repetition-exhaustive.t t/spec/S05-modifier/repetition.t t/spec/S05-modifier/sigspace.t t/spec/S05-substitution/67222.t t/spec/S05-substitution/match.t t/spec/S05-substitution/subst.t t/spec/S05-transliteration/79778.t t/spec/S05-transliteration/trans.t t/spec/S05-transliteration/with-closure.t t/spec/S06-advanced/callframe.t t/spec/S06-advanced/callsame.t t/spec/S06-advanced/lexical-subs.t t/spec/S06-advanced/recurse.t t/spec/S06-advanced/return.t t/spec/S06-advanced/stub.t t/spec/S06-advanced/wrap.t t/spec/S06-currying/assuming-and-mmd.t t/spec/S06-currying/misc.t t/spec/S06-currying/named.t t/spec/S06-currying/positional.t t/spec/S06-currying/slurpy.t t/spec/S06-macros/errors.t t/spec/S06-macros/quasi-blocks.t t/spec/S06-macros/unquoting.t t/spec/S06-macros/opaque-ast.t t/spec/S06-multi/by-trait.t t/spec/S06-multi/lexical-multis.t t/spec/S06-multi/positional-vs-named.t t/spec/S06-multi/proto.t t/spec/S06-multi/redispatch.t t/spec/S06-multi/subsignature.t t/spec/S06-multi/syntax.t t/spec/S06-multi/type-based.t t/spec/S06-multi/unpackability.t t/spec/S06-multi/value-based.t t/spec/S06-operator-overloading/imported-subs.t t/spec/S06-operator-overloading/methods.t t/spec/S06-operator-overloading/semicolon.t t/spec/S06-operator-overloading/sub.t t/spec/S06-operator-overloading/term.t t/spec/S06-operator-overloading/workout.t t/spec/S06-other/anon-hashes-vs-blocks.t t/spec/S06-other/introspection.t t/spec/S06-other/main-eval.t t/spec/S06-other/main.t t/spec/S06-other/main-usage.t t/spec/S06-other/main-semicolon.t t/spec/S06-other/misc.t t/spec/S06-other/pairs-as-lvalues.t t/spec/S06-parameters/smiley.t t/spec/S06-routine-modifiers/lvalue-subroutines.t t/spec/S06-routine-modifiers/native-lvalue-subroutines.t t/spec/S06-routine-modifiers/proxy.t t/spec/S06-routine-modifiers/scoped-named-subs.t t/spec/S06-signature/arity.t t/spec/S06-signature/caller-param.t t/spec/S06-signature/closure-over-parameters.t t/spec/S06-signature/closure-parameters.t t/spec/S06-signature/code.t t/spec/S06-signature/defaults.t t/spec/S06-signature/definite-return.t t/spec/S06-signature/errors.t t/spec/S06-signature/introspection.t t/spec/S06-signature/mixed-placeholders.t t/spec/S06-signature/multidimensional.t t/spec/S06-signature/multi-invocant.t t/spec/S06-signature/named-parameters.t t/spec/S06-signature/named-placeholders.t t/spec/S06-signature/named-renaming.t t/spec/S06-signature/optional.t t/spec/S06-signature/outside-subroutine.t t/spec/S06-signature/passing-arrays.t t/spec/S06-signature/passing-hashes.t t/spec/S06-signature/positional-placeholders.t t/spec/S06-signature/positional.t t/spec/S06-signature/scalar-type.t t/spec/S06-signature/shape.t t/spec/S06-signature/sigilless.t t/spec/S06-signature/slurpy-and-interpolation.t t/spec/S06-signature/slurpy-params.t t/spec/S06-signature/slurpy-placeholders.t t/spec/S06-signature/sub-ref.t t/spec/S06-signature/tree-node-parameters.t t/spec/S06-signature/type-capture.t t/spec/S06-signature/types.t t/spec/S06-signature/unpack-array.t t/spec/S06-signature/unpack-object.t t/spec/S06-signature/unspecified.t t/spec/S06-traits/as.t t/spec/S06-traits/is-assoc.t t/spec/S06-traits/is-copy.t t/spec/S06-traits/is-readonly.t t/spec/S06-traits/is-rw.t t/spec/S06-traits/misc.t t/spec/S06-traits/native-is-copy.t t/spec/S06-traits/native-is-rw.t t/spec/S06-traits/precedence.t t/spec/S07-slip/slip.t t/spec/S07-hyperrace/hyper.t t/spec/S07-hyperrace/race.t t/spec/S06-traits/slurpy-is-rw.t t/spec/S09-autovivification/autoincrement.t t/spec/S09-autovivification/autovivification.t t/spec/S09-hashes/objecthash.t t/spec/S09-subscript/slice.t t/spec/S09-subscript/multidim-assignment.t t/spec/S09-multidim/XX-POS-on-dimensioned.t t/spec/S09-multidim/XX-POS-on-undimensioned.t t/spec/S09-multidim/assign.t t/spec/S09-multidim/decl.t t/spec/S09-multidim/indexing.t t/spec/S09-multidim/methods.t t/spec/S09-multidim/subs.t t/spec/S09-typed-arrays/arrays.t t/spec/S09-typed-arrays/hashes.t t/spec/S09-typed-arrays/native.t t/spec/S09-typed-arrays/native-decl.t t/spec/S09-typed-arrays/native-int.t t/spec/S09-typed-arrays/native-num.t t/spec/S10-packages/basic.t t/spec/S10-packages/joined-namespaces.t t/spec/S10-packages/precompilation.t t/spec/S10-packages/use-with-class.t t/spec/S11-compunit/compunit-dependencyspecification.t t/spec/S11-compunit/compunit-repository.t t/spec/S11-compunit/rt126904.t t/spec/S11-modules/export.t t/spec/S11-modules/importing.t t/spec/S11-modules/import-multi.t t/spec/S11-modules/import-tag.t t/spec/S11-modules/import.t t/spec/S11-modules/lexical.t t/spec/S11-modules/need.t t/spec/S11-modules/nested.t t/spec/S11-modules/require.t t/spec/S11-repository/curli-install.t t/spec/S12-attributes/class.t t/spec/S12-attributes/clone.t t/spec/S12-attributes/defaults.t t/spec/S12-attributes/delegation.t t/spec/S12-attributes/inheritance.t t/spec/S12-attributes/instance.t t/spec/S12-attributes/mutators.t t/spec/S12-attributes/native.t t/spec/S12-attributes/recursive.t t/spec/S12-attributes/smiley.t t/spec/S12-attributes/undeclared.t t/spec/S12-class/anonymous.t t/spec/S12-class/attributes.t t/spec/S12-class/attributes-required.t t/spec/S12-class/augment-supersede.t t/spec/S12-class/basic.t t/spec/S12-class/declaration-order.t t/spec/S12-class/extending-arrays.t t/spec/S12-class/inheritance-class-methods.t t/spec/S12-class/inheritance.t t/spec/S12-class/instantiate.t t/spec/S12-class/interface-consistency.t t/spec/S12-class/lexical.t t/spec/S12-class/literal.t t/spec/S12-class/magical-vars.t t/spec/S12-class/mro.t t/spec/S12-class/namespaced.t t/spec/S12-class/open.t t/spec/S12-class/parent_attributes.t t/spec/S12-class/rw.t t/spec/S12-class/self-inheritance.t t/spec/S12-class/stubs.t t/spec/S12-class/type-object.t t/spec/S12-coercion/coercion-types.t t/spec/S12-construction/autopairs.t t/spec/S12-construction/BUILD.t t/spec/S12-construction/construction.t t/spec/S12-construction/named-params-in-BUILD.t t/spec/S12-construction/new.t t/spec/S12-enums/anonymous.t t/spec/S12-enums/as-role.t t/spec/S12-enums/basic.t t/spec/S12-enums/misc.t t/spec/S12-enums/non-int.t t/spec/S12-enums/pseudo-functional.t t/spec/S12-enums/thorough.t t/spec/S12-introspection/attributes.t t/spec/S12-introspection/can.t t/spec/S12-introspection/definite.t t/spec/S12-introspection/meta-class.t t/spec/S12-introspection/methods.t t/spec/S12-introspection/parents.t t/spec/S12-introspection/roles.t t/spec/S12-introspection/walk.t t/spec/S12-introspection/WHAT.t t/spec/S12-meta/exporthow.t t/spec/S12-meta/grammarhow.t t/spec/S12-meta/primitives.t t/spec/S12-methods/accessors.t t/spec/S12-methods/attribute-params.t t/spec/S12-methods/calling_sets.t t/spec/S12-methods/calling_syntax.t t/spec/S12-methods/chaining.t t/spec/S12-methods/class-and-instance.t t/spec/S12-methods/delegation.t t/spec/S12-methods/default-trait.t t/spec/S12-methods/defer-call.t t/spec/S12-methods/defer-next.t t/spec/S12-methods/fallback.t t/spec/S12-methods/how.t t/spec/S12-methods/indirect_notation.t t/spec/S12-methods/instance.t t/spec/S12-methods/lastcall.t t/spec/S12-methods/lvalue.t t/spec/S12-methods/method-vs-sub.t t/spec/S12-methods/multi.t t/spec/S12-methods/parallel-dispatch.t t/spec/S12-methods/private.t t/spec/S12-methods/qualified.t t/spec/S12-methods/submethods.t t/spec/S12-methods/syntax.t t/spec/S12-methods/topic.t t/spec/S12-methods/trusts.t t/spec/S12-methods/typed-attributes.t t/spec/S12-methods/what.t t/spec/S12-subset/multi-dispatch.t t/spec/S12-subset/subtypes.t t/spec/S13-overloading/metaoperators.t t/spec/S13-overloading/operators.t t/spec/S13-overloading/typecasting-long.t t/spec/S13-type-casting/methods.t t/spec/S14-roles/anonymous.t t/spec/S14-roles/attributes.t t/spec/S14-roles/basic.t t/spec/S14-roles/bool.t t/spec/S14-roles/composition.t t/spec/S14-roles/conflicts.t t/spec/S14-roles/crony.t t/spec/S14-roles/instantiation.t t/spec/S14-roles/lexical.t t/spec/S14-roles/mixin.t t/spec/S14-roles/namespaced.t t/spec/S14-roles/parameterized-basic.t t/spec/S14-roles/parameterized-mixin.t t/spec/S14-roles/parameterized-type.t t/spec/S14-roles/parameter-subtyping.t t/spec/S14-roles/stubs.t t/spec/S14-roles/submethods.t t/spec/S14-traits/attributes.t t/spec/S14-traits/routines.t t/spec/S15-literals/identifiers.t t/spec/S15-literals/numbers.t t/spec/S15-nfg/case-change.t t/spec/S15-nfg/cgj.t t/spec/S15-nfg/concatenation.t t/spec/S15-nfg/crlf-encoding.t t/spec/S15-nfg/from-buf.t t/spec/S15-nfg/from-file.t t/spec/S15-nfg/grapheme-break.t t/spec/S15-nfg/long-uni.t t/spec/S15-nfg/mass-chars.t t/spec/S15-nfg/many-combiners.t t/spec/S15-nfg/many-threads.t t/spec/S15-nfg/mass-equality.t t/spec/S15-nfg/mass-roundtrip-nfc.t t/spec/S15-nfg/mass-roundtrip-nfd.t t/spec/S15-nfg/mass-roundtrip-nfkc.t t/spec/S15-nfg/mass-roundtrip-nfkd.t t/spec/S15-nfg/regex.t t/spec/S15-normalization/nfc-0.t t/spec/S15-normalization/nfc-1.t t/spec/S15-normalization/nfc-2.t t/spec/S15-normalization/nfc-3.t t/spec/S15-normalization/nfc-4.t t/spec/S15-normalization/nfc-5.t t/spec/S15-normalization/nfc-6.t t/spec/S15-normalization/nfc-7.t t/spec/S15-normalization/nfc-8.t t/spec/S15-normalization/nfc-9.t t/spec/S15-normalization/nfc-sanity.t t/spec/S15-normalization/nfd-0.t t/spec/S15-normalization/nfd-1.t t/spec/S15-normalization/nfd-2.t t/spec/S15-normalization/nfd-3.t t/spec/S15-normalization/nfd-4.t t/spec/S15-normalization/nfd-5.t t/spec/S15-normalization/nfd-6.t t/spec/S15-normalization/nfd-7.t t/spec/S15-normalization/nfd-8.t t/spec/S15-normalization/nfd-9.t t/spec/S15-normalization/nfd-sanity.t t/spec/S15-normalization/nfkc-0.t t/spec/S15-normalization/nfkc-1.t t/spec/S15-normalization/nfkc-2.t t/spec/S15-normalization/nfkc-3.t t/spec/S15-normalization/nfkc-4.t t/spec/S15-normalization/nfkc-5.t t/spec/S15-normalization/nfkc-6.t t/spec/S15-normalization/nfkc-7.t t/spec/S15-normalization/nfkc-8.t t/spec/S15-normalization/nfkc-9.t t/spec/S15-normalization/nfkc-sanity.t t/spec/S15-normalization/nfkd-0.t t/spec/S15-normalization/nfkd-1.t t/spec/S15-normalization/nfkd-2.t t/spec/S15-normalization/nfkd-3.t t/spec/S15-normalization/nfkd-4.t t/spec/S15-normalization/nfkd-5.t t/spec/S15-normalization/nfkd-6.t t/spec/S15-normalization/nfkd-7.t t/spec/S15-normalization/nfkd-8.t t/spec/S15-normalization/nfkd-9.t t/spec/S15-normalization/nfkd-sanity.t t/spec/S15-string-types/Uni.t t/spec/S15-string-types/Str.t t/spec/S15-unicode-information/uniname.t t/spec/S15-unicode-information/unimatch-general.t t/spec/S15-unicode-information/uniprop.t t/spec/S15-unicode-information/unival.t t/spec/S16-filehandles/argfiles.t t/spec/S16-filehandles/chmod.t t/spec/S16-filehandles/filestat.t t/spec/S16-filehandles/filetest.t t/spec/S16-filehandles/io_in_for_loops.t t/spec/S16-filehandles/io_in_while_loops.t t/spec/S16-filehandles/io.t t/spec/S16-filehandles/mkdir_rmdir.t t/spec/S16-filehandles/open.t t/spec/S16-filehandles/unlink.t t/spec/S16-io/bare-say.t t/spec/S16-io/basic-open.t t/spec/S16-io/bom.t t/spec/S16-io/comb.t t/spec/S16-io/cwd.t t/spec/S16-io/getc.t t/spec/S16-io/lines.t t/spec/S16-io/newline.t t/spec/S16-io/note.t t/spec/S16-io/print.t t/spec/S16-io/say-and-ref.t t/spec/S16-io/say.t t/spec/S16-io/split.t t/spec/S16-io/supply.t t/spec/S16-io/tmpdir.t t/spec/S16-io/words.t t/spec/S16-unfiled/rebindstdhandles.t t/spec/S17-channel/basic.t t/spec/S17-lowlevel/lock.t t/spec/S17-lowlevel/thread.t t/spec/S17-lowlevel/thread-start-join-stress.t t/spec/S17-procasync/basic.t t/spec/S17-procasync/print.t t/spec/S17-procasync/kill.t t/spec/S17-procasync/no-runaway-file-limit.t t/spec/S17-procasync/many-processes-no-close-stdin.t t/spec/S17-promise/allof.t t/spec/S17-promise/at.t t/spec/S17-promise/anyof.t t/spec/S17-promise/basic.t t/spec/S17-promise/in.t t/spec/S17-promise/start.t t/spec/S17-promise/stress.t t/spec/S17-promise/then.t t/spec/S17-scheduler/at.t t/spec/S17-scheduler/basic.t t/spec/S17-scheduler/every.t t/spec/S17-scheduler/in.t t/spec/S17-scheduler/times.t t/spec/S17-supply/act.t t/spec/S17-supply/basic.t t/spec/S17-supply/batch.t t/spec/S17-supply/categorize.t t/spec/S17-supply/Channel.t t/spec/S17-supply/classify.t t/spec/S17-supply/delayed.t t/spec/S17-supply/do.t t/spec/S17-supply/elems.t t/spec/S17-supply/flat.t t/spec/S17-supply/from-list.t t/spec/S17-supply/grab.t t/spec/S17-supply/grep.t t/spec/S17-supply/head.t t/spec/S17-supply/interval.t t/spec/S17-supply/lines.t t/spec/S17-supply/list.t t/spec/S17-supply/map.t t/spec/S17-supply/max.t t/spec/S17-supply/merge.t t/spec/S17-supply/migrate.t t/spec/S17-supply/min.t t/spec/S17-supply/minmax.t t/spec/S17-supply/on-demand.t t/spec/S17-supply/Promise.t t/spec/S17-supply/produce.t t/spec/S17-supply/reduce.t t/spec/S17-supply/reverse.t t/spec/S17-supply/rotor.t t/spec/S17-supply/schedule-on.t t/spec/S17-supply/sort.t t/spec/S17-supply/squish.t t/spec/S17-supply/stable.t t/spec/S17-supply/start.t t/spec/S17-supply/syntax.t t/spec/S17-supply/tail.t t/spec/S17-supply/throttle.t t/spec/S17-supply/unique.t t/spec/S17-supply/wait.t t/spec/S17-supply/watch-path.t t/spec/S17-supply/words.t t/spec/S17-supply/zip.t t/spec/S17-supply/zip-latest.t t/spec/S19-command-line/arguments.t t/spec/S19-command-line/dash-e.t t/spec/S19-command-line/help.t t/spec/S19-command-line/repl.t t/spec/S19-command-line-options/02-dash-n.t t/spec/S19-command-line-options/03-dash-p.t t/spec/S22-package-format/local.t t/spec/S24-testing/0-compile.t t/spec/S24-testing/3-output.t t/spec/S24-testing/line-numbers.t t/spec/S26-documentation/01-delimited.t t/spec/S26-documentation/02-paragraph.t t/spec/S26-documentation/03-abbreviated.t t/spec/S26-documentation/04-code.t t/spec/S26-documentation/05-comment.t t/spec/S26-documentation/06-lists.t t/spec/S26-documentation/07-tables.t t/spec/S26-documentation/08-formattingcodes.t t/spec/S26-documentation/09-configuration.t t/spec/S26-documentation/10-doc-cli.t t/spec/S26-documentation/block-leading.t t/spec/S26-documentation/block-trailing.t t/spec/S26-documentation/module-comment.t t/spec/S26-documentation/multiline-leading.t t/spec/S26-documentation/multiline-trailing.t t/spec/S26-documentation/wacky.t t/spec/S26-documentation/why-both.t t/spec/S26-documentation/why-trailing.t t/spec/S26-documentation/why-leading.t t/spec/S28-named-variables/cwd.t t/spec/S28-named-variables/slangs.t t/spec/S29-any/cmp.t t/spec/S29-any/isa.t t/spec/S29-context/die.t t/spec/S29-context/eval.t t/spec/S29-context/evalfile.t t/spec/S29-context/exit-in-if.t t/spec/S29-context/exit.t t/spec/S29-context/sleep.t t/spec/S29-conversions/hash.t t/spec/S29-conversions/ord_and_chr.t t/spec/S29-os/system.t t/spec/S32-array/adverbs.t t/spec/S32-array/bool.t t/spec/S32-array/create.t t/spec/S32-array/delete.t t/spec/S32-array/delete-adverb.t t/spec/S32-array/delete-adverb-native.t t/spec/S32-array/elems.t t/spec/S32-array/end.t t/spec/S32-array/exists-adverb.t t/spec/S32-array/keys_values.t t/spec/S32-array/kv.t t/spec/S32-array/pairs.t t/spec/S32-array/perl.t t/spec/S32-array/pop.t t/spec/S32-array/push.t t/spec/S32-array/rotate.t t/spec/S32-array/shift.t t/spec/S32-array/splice.t t/spec/S32-array/unshift.t t/spec/S32-basics/warn.t t/spec/S32-basics/xxKEY.t t/spec/S32-basics/xxPOS.t t/spec/S32-basics/xxPOS-native.t t/spec/S32-container/cat.t t/spec/S32-container/roundrobin.t t/spec/S32-container/stringify.t t/spec/S32-container/zip.t t/spec/S32-exceptions/misc.t t/spec/S32-hash/adverbs.t t/spec/S32-hash/antipairs.t t/spec/S32-hash/delete.t t/spec/S32-hash/delete-adverb.t t/spec/S32-hash/exists.t t/spec/S32-hash/exists-adverb.t t/spec/S32-hash/invert.t t/spec/S32-hash/keys_values.t t/spec/S32-hash/kv.t t/spec/S32-hash/pairs.t t/spec/S32-hash/perl.t t/spec/S32-hash/push.t t/spec/S32-hash/slice.t t/spec/S32-io/IO-Socket-Async.t t/spec/S32-io/IO-Socket-Async-UDP.t t/spec/S32-io/chdir.t t/spec/S32-io/copy.t t/spec/S32-io/dir.t t/spec/S32-io/file-tests.t t/spec/S32-io/io-handle.t t/spec/S32-io/io-spec-unix.t t/spec/S32-io/io-spec-win.t t/spec/S32-io/io-spec-cygwin.t t/spec/S32-io/io-path-unix.t t/spec/S32-io/io-path-win.t t/spec/S32-io/io-path-cygwin.t t/spec/S32-io/io-path.t t/spec/S32-io/IO-Socket-INET.t t/spec/S32-io/move.t t/spec/S32-io/native-descriptor.t t/spec/S32-io/note.t t/spec/S32-io/other.t t/spec/S32-io/pipe.t t/spec/S32-io/rename.t t/spec/S32-io/socket-recv-vs-read.t t/spec/S32-io/slurp.t t/spec/S32-io/spurt.t t/spec/S32-list/categorize.t t/spec/S32-list/classify.t t/spec/S32-list/create.t t/spec/S32-list/combinations.t t/spec/S32-list/end.t t/spec/S32-list/first.t t/spec/S32-list/first-end.t t/spec/S32-list/first-end-k.t t/spec/S32-list/first-end-p.t t/spec/S32-list/first-end-v.t t/spec/S32-list/first-k.t t/spec/S32-list/first-p.t t/spec/S32-list/first-v.t t/spec/S32-list/grep.t t/spec/S32-list/grep-k.t t/spec/S32-list/grep-kv.t t/spec/S32-list/grep-p.t t/spec/S32-list/grep-v.t t/spec/S32-list/head.t t/spec/S32-list/join.t t/spec/S32-list/map_function_return_values.t t/spec/S32-list/map.t t/spec/S32-list/minmax.t t/spec/S32-list/permutations.t t/spec/S32-list/pick.t t/spec/S32-list/produce.t t/spec/S32-list/reduce.t t/spec/S32-list/repeated.t t/spec/S32-list/reverse.t t/spec/S32-list/roll.t t/spec/S32-list/rotor.t t/spec/S32-list/seq.t t/spec/S32-list/sort.t t/spec/S32-list/tail.t t/spec/S32-list/unique.t t/spec/S32-list/squish.t t/spec/S32-num/abs.t t/spec/S32-num/base.t t/spec/S32-num/complex.t t/spec/S32-num/cool-num.t t/spec/S32-num/exp.t t/spec/S32-num/expmod.t t/spec/S32-num/fatrat.t t/spec/S32-num/int.t t/spec/S32-num/is-prime.t t/spec/S32-num/log.t t/spec/S32-num/narrow.t t/spec/S32-num/pi.t t/spec/S32-num/polar.t t/spec/S32-num/polymod.t t/spec/S32-num/power.t t/spec/S32-num/rand.t t/spec/S32-num/rat.t t/spec/S32-num/real-bridge.t t/spec/S32-num/roots.t t/spec/S32-num/rounders.t t/spec/S32-num/rshift_pos_amount.t t/spec/S32-num/sign.t t/spec/S32-num/sqrt.t t/spec/S32-num/stringify.t t/spec/S32-num/unpolar.t t/spec/S32-scalar/defined.t t/spec/S32-scalar/perl.t t/spec/S32-scalar/undef.t t/spec/S32-str/append.t t/spec/S32-str/bool.t t/spec/S32-str/capitalize.t t/spec/S32-str/chomp.t t/spec/S32-str/chop.t t/spec/S32-str/comb.t t/spec/S32-str/contains.t t/spec/S32-str/encode.t t/spec/S32-str/ends-with.t t/spec/S32-str/fc.t t/spec/S32-str/flip.t t/spec/S32-str/indent.t t/spec/S32-str/index.t t/spec/S32-str/indices.t t/spec/S32-str/lc.t t/spec/S32-str/length.t t/spec/S32-str/lines.t t/spec/S32-str/numeric.t t/spec/S32-str/ords.t t/spec/S32-str/pack.t t/spec/S32-str/pos.t t/spec/S32-str/rindex.t t/spec/S32-str/samemark.t t/spec/S32-str/samecase.t t/spec/S32-str/split-simple.t t/spec/S32-str/split.t t/spec/S32-str/sprintf.t t/spec/S32-str/sprintf-b.t t/spec/S32-str/starts-with.t t/spec/S32-str/substr.t t/spec/S32-str/substr-eq.t t/spec/S32-str/substr-rw.t t/spec/S32-str/tc.t t/spec/S32-str/tclc.t t/spec/S32-str/trim.t t/spec/S32-str/uc.t t/spec/S32-str/unpack.t t/spec/S32-str/utf8-c8.t t/spec/S32-str/words.t t/spec/S32-temporal/calendar.t t/spec/S32-temporal/Date.t t/spec/S32-temporal/DateTime-Instant-Duration.t t/spec/S32-temporal/DateTime.t t/spec/S32-temporal/local.t t/spec/S32-trig/atan2.t t/spec/S32-trig/cosech.t t/spec/S32-trig/cosec.t t/spec/S32-trig/cosh.t t/spec/S32-trig/cos.t t/spec/S32-trig/cotanh.t t/spec/S32-trig/cotan.t t/spec/S32-trig/e.t t/spec/S32-trig/pi.t t/spec/S32-trig/sech.t t/spec/S32-trig/sec.t t/spec/S32-trig/simple.t t/spec/S32-trig/sinh.t t/spec/S32-trig/sin.t t/spec/S32-trig/tanh.t t/spec/S32-trig/tan.t t/spec/integration/99problems-01-to-10.t t/spec/integration/99problems-11-to-20.t t/spec/integration/99problems-21-to-30.t t/spec/integration/99problems-31-to-40.t t/spec/integration/99problems-41-to-50.t t/spec/integration/99problems-51-to-60.t t/spec/integration/99problems-61-to-70.t t/spec/integration/advent2009-day01.t t/spec/integration/advent2009-day02.t t/spec/integration/advent2009-day03.t t/spec/integration/advent2009-day04.t t/spec/integration/advent2009-day05.t t/spec/integration/advent2009-day06.t t/spec/integration/advent2009-day07.t t/spec/integration/advent2009-day08.t t/spec/integration/advent2009-day09.t t/spec/integration/advent2009-day10.t t/spec/integration/advent2009-day11.t t/spec/integration/advent2009-day12.t t/spec/integration/advent2009-day13.t t/spec/integration/advent2009-day14.t t/spec/integration/advent2009-day15.t t/spec/integration/advent2009-day16.t t/spec/integration/advent2009-day17.t t/spec/integration/advent2009-day18.t t/spec/integration/advent2009-day19.t t/spec/integration/advent2009-day20.t t/spec/integration/advent2009-day21.t t/spec/integration/advent2009-day22.t t/spec/integration/advent2009-day23.t t/spec/integration/advent2009-day24.t t/spec/integration/advent2010-day03.t t/spec/integration/advent2010-day04.t t/spec/integration/advent2010-day06.t t/spec/integration/advent2010-day07.t t/spec/integration/advent2010-day08.t t/spec/integration/advent2010-day10.t t/spec/integration/advent2010-day11.t t/spec/integration/advent2010-day12.t t/spec/integration/advent2010-day14.t t/spec/integration/advent2010-day16.t t/spec/integration/advent2010-day19.t t/spec/integration/advent2010-day21.t t/spec/integration/advent2010-day22.t t/spec/integration/advent2010-day23.t t/spec/integration/advent2011-day03.t t/spec/integration/advent2011-day04.t t/spec/integration/advent2011-day05.t t/spec/integration/advent2011-day07.t t/spec/integration/advent2011-day10.t t/spec/integration/advent2011-day11.t t/spec/integration/advent2011-day14.t t/spec/integration/advent2011-day15.t t/spec/integration/advent2011-day16.t t/spec/integration/advent2011-day20.t t/spec/integration/advent2011-day22.t t/spec/integration/advent2011-day23.t t/spec/integration/advent2011-day24.t t/spec/integration/advent2012-day02.t t/spec/integration/advent2012-day03.t t/spec/integration/advent2012-day04.t t/spec/integration/advent2012-day06.t t/spec/integration/advent2012-day09.t t/spec/integration/advent2012-day10.t t/spec/integration/advent2012-day12.t t/spec/integration/advent2012-day13.t t/spec/integration/advent2012-day14.t t/spec/integration/advent2012-day15.t t/spec/integration/advent2012-day16.t t/spec/integration/advent2012-day19.t t/spec/integration/advent2012-day20.t t/spec/integration/advent2012-day21.t t/spec/integration/advent2012-day22.t t/spec/integration/advent2012-day23.t t/spec/integration/advent2012-day24.t t/spec/integration/advent2013-day02.t t/spec/integration/advent2013-day04.t t/spec/integration/advent2013-day06.t t/spec/integration/advent2013-day07.t t/spec/integration/advent2013-day08.t t/spec/integration/advent2013-day09.t t/spec/integration/advent2013-day10.t t/spec/integration/advent2013-day12.t t/spec/integration/advent2013-day14.t t/spec/integration/advent2013-day15.t t/spec/integration/advent2013-day18.t t/spec/integration/advent2013-day19.t t/spec/integration/advent2013-day20.t t/spec/integration/advent2013-day21.t t/spec/integration/advent2013-day22.t t/spec/integration/advent2013-day23.t t/spec/integration/advent2014-day05.t t/spec/integration/advent2014-day13.t t/spec/integration/advent2014-day16.t t/spec/integration/code-blocks-as-sub-args.t t/spec/integration/error-reporting.t t/spec/integration/lazy-bentley-generator.t t/spec/integration/lexical-array-in-inner-block.t t/spec/integration/lexicals-and-attributes.t t/spec/integration/man-or-boy.t t/spec/integration/method-calls-and-instantiation.t t/spec/integration/no-indirect-new.t t/spec/integration/packages.t t/spec/integration/pair-in-array.t t/spec/integration/passing-pair-class-to-sub.t t/spec/integration/precompiled.t t/spec/integration/real-strings.t t/spec/integration/role-composition-vs-attribute.t t/spec/integration/rule-in-class-Str.t t/spec/integration/say-crash.t t/spec/integration/substr-after-match-in-gather-in-for.t t/spec/integration/topic_in_double_loop.t t/spec/integration/variables-in-do.t t/spec/integration/weird-errors.t t/spec/rosettacode/greatest_element_of_a_list.t t/spec/rosettacode/sierpinski_triangle.t
                                                   pass fail todo skip plan
S01-perl-5-integration/array.rakudo.moar...........Could not find Inline::Perl5 in:
    /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib
    /home/coke/.perl6/2015.12-202-ga192ec5
    /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/install/share/perl6/site
    /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/install/share/perl6/vendor
    /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/install/share/perl6
    CompUnit::Repository::AbsolutePath<77467216>
    CompUnit::Repository::NQP<79903128>
    CompUnit::Repository::Perl5<79903168>
  in block <unit> at t/spec/S01-perl-5-integration/array.rakudo.moar line 7

   0    0    0   17   17
    17 skipped: <unknown>
S01-perl-5-integration/basic.rakudo.moar...........Could not find Inline::Perl5 in:
    /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib
    /home/coke/.perl6/2015.12-202-ga192ec5
    /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/install/share/perl6/site
    /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/install/share/perl6/vendor
    /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/install/share/perl6
    CompUnit::Repository::AbsolutePath<79732272>
    CompUnit::Repository::NQP<82168184>
    CompUnit::Repository::Perl5<82168224>
  in block <unit> at t/spec/S01-perl-5-integration/basic.rakudo.moar line 5

   0    0    0   15   15
    15 skipped: <unknown>
S01-perl-5-integration/class.rakudo.moar...........Could not find Inline::Perl5 in:
    /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib
    /home/coke/.perl6/2015.12-202-ga192ec5
    /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/install/share/perl6/site
    /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/install/share/perl6/vendor
    /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/install/share/perl6
    CompUnit::Repository::AbsolutePath<63754592>
    CompUnit::Repository::NQP<66190504>
    CompUnit::Repository::Perl5<66190544>
  in block <unit> at t/spec/S01-perl-5-integration/class.rakudo.moar line 7

   0    0    0    3    3
     3 skipped: <unknown>
S01-perl-5-integration/exception_handling.t........Could not find Inline::Perl5 in:
    /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib
    /home/coke/.perl6/2015.12-202-ga192ec5
    /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/install/share/perl6/site
    /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/install/share/perl6/vendor
    /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/install/share/perl6
    CompUnit::Repository::AbsolutePath<68998240>
    CompUnit::Repository::NQP<71434136>
    CompUnit::Repository::Perl5<71434176>
  in block  at t/spec/S01-perl-5-integration/exception_handling.t line 8

   0    0    0    3    3
     3 skipped: no perl 5 support
S01-perl-5-integration/hash.rakudo.moar............Could not find Inline::Perl5 in:
    /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib
    /home/coke/.perl6/2015.12-202-ga192ec5
    /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/install/share/perl6/site
    /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/install/share/perl6/vendor
    /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/install/share/perl6
    CompUnit::Repository::AbsolutePath<60460800>
    CompUnit::Repository::NQP<62896712>
    CompUnit::Repository::Perl5<62896752>
  in block <unit> at t/spec/S01-perl-5-integration/hash.rakudo.moar line 7

   0    0    0    6    6
     6 skipped: <unknown>
S01-perl-5-integration/import.rakudo.moar..........Could not find Inline::Perl5 in:
    /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib
    /home/coke/.perl6/2015.12-202-ga192ec5
    /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/install/share/perl6/site
    /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/install/share/perl6/vendor
    /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/install/share/perl6
    CompUnit::Repository::AbsolutePath<66424976>
    CompUnit::Repository::NQP<68860888>
    CompUnit::Repository::Perl5<68860928>
  in block <unit> at t/spec/S01-perl-5-integration/import.rakudo.moar line 12

   0    0    0    3    3
     3 skipped: <unknown>
S01-perl-5-integration/method.rakudo.moar..........Could not find Inline::Perl5 in:
    /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib
    /home/coke/.perl6/2015.12-202-ga192ec5
    /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/install/share/perl6/site
    /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/install/share/perl6/vendor
    /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/install/share/perl6
    CompUnit::Repository::AbsolutePath<67745840>
    CompUnit::Repository::NQP<70181752>
    CompUnit::Repository::Perl5<70181792>
  in block <unit> at t/spec/S01-perl-5-integration/method.rakudo.moar line 7

   0    0    0   13   13
    13 skipped: <unknown>
S01-perl-5-integration/return.rakudo.moar..........Could not find Inline::Perl5 in:
    /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib
    /home/coke/.perl6/2015.12-202-ga192ec5
    /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/install/share/perl6/site
    /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/install/share/perl6/vendor
    /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/install/share/perl6
    CompUnit::Repository::AbsolutePath<73810640>
    CompUnit::Repository::NQP<76246552>
    CompUnit::Repository::Perl5<76246592>
  in block <unit> at t/spec/S01-perl-5-integration/return.rakudo.moar line 7

   0    0    0    2    2
     2 skipped: <unknown>
S01-perl-5-integration/roundtrip.t.................Could not find Inline::Perl5 in:
    /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib
    /home/coke/.perl6/2015.12-202-ga192ec5
    /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/install/share/perl6/site
    /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/install/share/perl6/vendor
    /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/install/share/perl6
    CompUnit::Repository::AbsolutePath<66777568>
    CompUnit::Repository::NQP<69213480>
    CompUnit::Repository::Perl5<69213520>
  in block <unit> at t/spec/S01-perl-5-integration/roundtrip.t line 7

   0    0    0    5    5
     5 skipped: <unknown>
S01-perl-5-integration/strings.rakudo.moar.........Could not find Inline::Perl5 in:
    /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib
    /home/coke/.perl6/2015.12-202-ga192ec5
    /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/install/share/perl6/site
    /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/install/share/perl6/vendor
    /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/install/share/perl6
    CompUnit::Repository::AbsolutePath<72495136>
    CompUnit::Repository::NQP<67613912>
    CompUnit::Repository::Perl5<67613952>
  in block <unit> at t/spec/S01-perl-5-integration/strings.rakudo.moar line 5

   0    0    0    6    6
     6 skipped: <unknown>
S01-perl-5-integration/subs.t......................Could not find Inline::Perl5 in:
    /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib
    /home/coke/.perl6/2015.12-202-ga192ec5
    /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/install/share/perl6/site
    /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/install/share/perl6/vendor
    /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/install/share/perl6
    CompUnit::Repository::AbsolutePath<47810416>
    CompUnit::Repository::NQP<50246328>
    CompUnit::Repository::Perl5<50246368>
  in block <unit> at t/spec/S01-perl-5-integration/subs.t line 5

   0    0    0    2    2
     2 skipped: <unknown>
                                                   pass fail todo skip plan
S02-lexical-conventions/begin_end_pod.t............   2    0    0    0    2
S02-lexical-conventions/bom.t......................   1    0    0    0    1
S02-lexical-conventions/comments.t.................# no space allowed between '#`' and '('
# no tab allowed between '#`' and '['
# no spaces allowed between '#`' and '{'
# no spaces allowed between '#`' and '<'
# single line comment in multiline does not hide delims
# comments can't contain unspace
# misuse of # as quote delimiters
  51    0    0    0   51
S02-lexical-conventions/end-pod.t..................   1    0    0    0    1
S02-lexical-conventions/minimal-whitespace.t.......Potential difficulties:
    Redeclaration of symbol $o
    at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S02-lexical-conventions/minimal-whitespace.t:41
    ------> [32mmy $o[33m⏏[31m = 42;[0m
# hash with space before opening brackets does not work (1)
# hash with space before opening braces does not work (2)
# whitespace is not allowed before i postfix
# whitespace is not allowed between . and i postfix
# whitespace is not allowed before ++ postfix
# whitespace is not allowed between . and postfix
# a [+] without whitespace dies
# comma is not allowed after dot after digit
# equal sign is not allowed after dot after digit
# colon is not allowed after dot after digit
# colonpair is not allowed after dot after digit
# colonpair is not allowed after dot after digit in arglist
  18    0    0    0   18
S02-lexical-conventions/one-pass-parsing.t.........   5    0    0    0    5
S02-lexical-conventions/pod-in-multi-line-exprs.t..   3    0    0    0    3
S02-lexical-conventions/sub-block-parsing.t........# block parsing works with newline
# block parsing works with semicolon
# RT #85844
  11    0    0    0   11
S02-lexical-conventions/unicode-whitespace.t.......  50    0    0    0   50
S02-lexical-conventions/unicode.rakudo.moar........WARNINGS for /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/EVAL_0:
Useless use of constant integer 1 in sink context (line 1)
WARNINGS for /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/EVAL_1:
Useless use of constant integer 1 in sink context (line 1)
WARNINGS for /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/EVAL_2:
Useless use of constant integer 1 in sink context (line 1)
WARNINGS for /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/EVAL_3:
Useless use of constant integer 1 in sink context (line 1)
WARNINGS for /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/EVAL_4:
Useless use of constant integer 1 in sink context (line 1)
WARNINGS for /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/EVAL_5:
Useless use of constant integer 1 in sink context (line 1)
WARNINGS for /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/EVAL_6:
Useless use of constant integer 1 in sink context (line 1)
# Unicode open-301d does not map to close-301f
  42    0    0    2   44
     2 skipped: VOWEL SIGNs in identifiers; RT #122340
S02-lexical-conventions/unspace.rakudo.moar........# unspace not allowed in identifier
    
# Failed test 'code dies'
# at t/spec/S02-lexical-conventions/unspace.rakudo.moar line 79
    # Looks like you failed 1 test of 2
# semicolon or newline required between blocks
# infix requires space when ambiguous with postfix
# postfix dot w/ infix ambiguity
# postfix unspace w/ infix ambiguity
# postfix unspace w/ infix ambiguity
# postfix requires no space
# unspace with U+301D/U+301F is invalid
  79    0    1    7   87
     4 skipped: =for pod NYI (in STD.pm): RT #122343
     3 skipped: pod and unspace: RT #122343
     1 todo   : NYI RT \#125072
S02-lists/indexing.t...............................   2    0    0    0    2
S02-lists/tree.t...................................  10    0    0    0   10
S02-literals/adverbs.rakudo.moar...................# Numeric adverb can't have an extra value
Use of Nil in string context  in block  at t/spec/S02-literals/adverbs.rakudo.moar line 28
  30    0    2    0   32
     2 todo   : :@<...> and :%<...> broken needs RT
S02-literals/allomorphic.t.........................  99    0    0    0   99
S02-literals/array-interpolation.t.................  12    0    0    0   12
S02-literals/autoref.t.............................Use of uninitialized value of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at t/spec/S02-literals/autoref.t line 45
  38    0    0    0   38
S02-literals/char-by-name.rakudo.moar..............   9    0    0    1   10
     1 skipped: \c[LINE FEED] not valid: RT #117683
S02-literals/char-by-number.t......................# broken "\x[6211"
# broken "\x [6211]"
# broken "\o[6211"
# broken "\o [6211]"
# broken "\c[6211"
# broken "\c [6211]"
# "\123" form is no longer valid Perl 6
# "\10" form is no longer valid Perl 6
  38    0    0    0   38
S02-literals/fmt-interpolation.t...................  11    0    0    0   11
S02-literals/hash-interpolation.t..................  12    0    0    0   12
S02-literals/heredocs.t............................  22    0    0    0   22
S02-literals/hex_chars.t...........................   4    0    0    0    4
S02-literals/listquote-whitespace.t................  12    0    0    0   12
S02-literals/listquote.rakudo.moar.................# {...} <...> parsefail
# ()<3 parsefail
# :foo <1 2 3> parsefail
# <3 is comparison, but dies at run time
# bare <> is disallowed
# <STDIN> is disallowed
# ... which is immutable
  23    0    1    0   24
     1 todo   : meta operators RT \#124558
S02-literals/misc-interpolation.t..................# ... but whitespace is not allowed
  50    0    0    0   50
S02-literals/numeric.rakudo.moar...................  55    0    4    0   59
     2 todo   : Adverbial numbers in Rat literals not supported
     2 todo   : Unsure of what's acceptable for val()
S02-literals/pair-boolean.t........................   6    0    0    0    6
S02-literals/pairs.t...............................# '"a" => 42' is a pair
# '("a") => 42' is a pair
# '(a => 42)' is a pair
# '("a" => 42)' is a pair
# '(:a(42))' is a pair
# '(:a)' is a pair
# in '&f2.((:a))', '(:a)' is a pair
# in '$f2((:a))', '(:a)' is a pair
# in '$f2.((:a))', '(:a)' is a pair
# in '$f2(((:a)))', '(:a)' is a pair
# in '$f2.(((:a)))', '(:a)' is a pair
# variables cannot be keys of syntactical pairs (1)
# variables cannot be keys of syntactical pairs (2)
# variables cannot be keys of syntactical pairs (3)
  76    0    0    0   76
S02-literals/pod.rakudo.moar.......................   0    0    0    5    5
     3 skipped: isn't the iterator exhausted already, since it's been used previously?
     2 skipped: postcircumfix:<{ }> not defined for type Array RT #125130
S02-literals/quoting-unicode.t.....................# Can't quote a string with a snowman and comet (U+2603 and U+2604)
# Can't quote a regex with a snowman and comet (U+2603 and U+2604)
# Can't mix smart quote with ASCII quote
# Can't mix smart quote with ASCII quote
# Can't mix smart quote with ASCII quote
# Can't mix smart quote with ASCII quote
# Can't mix smart quote with ASCII quote
# Can't mix smart quote with ASCII quote
  89    0    0    0   89
S02-literals/quoting.t.............................# rx:unknown dies
# g does not make sense on rx//
# unclosed quote after array variable is an error
# Unmatched openers and closers fails to parse
 184    0    0    0  184
S02-literals/radix.rakudo.moar.....................# :10() really wants a string, not an integer
# :10() really wants a string, not a rational
# :10() really wants a string, not a num
# :10() really wants a string, not an array
# Ambiguous, illegal syntax doesn't work
# 2.foo  parses as method call
# :2<2> is illegal
# :10<3a> is illegal
# :0<...> is illegal
# :2() is Confused
# :2 is Malformed
 151    0    1    2  154
     1 skipped: RT #123862 - negative radix
     1 skipped: Really?!
     1 todo   : This needs an RT
S02-literals/string-interpolation.t................Potential difficulties:
    To refer to a positional match capture, just use $0 (numbering starts at 0).
    Parenthesize as \(...) if you intended a capture of a single numeric value.
    at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S02-literals/string-interpolation.t:12
    ------> [32m    is "{\[33m⏏[31m01;42}", "42", '{\\01 parses correctly ([0m
    Leading 0 does not indicate octal in Perl 6.
    Please use 0o1 if you mean that.
    at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S02-literals/string-interpolation.t:12
    ------> [32m    is "{\01[33m⏏[31m;42}", "42", '{\\01 parses correctly (1)[0m
    To refer to a positional match capture, just use $0 (numbering starts at 0).
    Parenthesize as \(...) if you intended a capture of a single numeric value.
    at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S02-literals/string-interpolation.t:13
    ------> [32m    is "{;\[33m⏏[31m01;42}", "42", '{\\01 parses correctly ([0m
    Leading 0 does not indicate octal in Perl 6.
    Please use 0o1 if you mean that.
    at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S02-literals/string-interpolation.t:13
    ------> [32m    is "{;\01[33m⏏[31m;42}", "42", '{\\01 parses correctly (2)[0m
    To refer to a positional match capture, just use $0 (numbering starts at 0).
    Parenthesize as \(...) if you intended a capture of a single numeric value.
    at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S02-literals/string-interpolation.t:14
    ------> [32m    is "{;;;;;;\[33m⏏[31m01;42}", "42", '{\\01 parses correctly ([0m
    Leading 0 does not indicate octal in Perl 6.
    Please use 0o1 if you mean that.
    at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S02-literals/string-interpolation.t:14
    ------> [32m    is "{;;;;;;\01[33m⏏[31m;42}", "42", '{\\01 parses correctly (3)[0m
    To refer to a positional match capture, just use $0 (numbering starts at 0).
    Parenthesize as \(...) if you intended a capture of a single numeric value.
    at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S02-literals/string-interpolation.t:18
    ------> [32m    is "{\[33m⏏[31m1;42}", "42", '{\\1 parses correctly (1)[0m
    To refer to a positional match capture, just use $0 (numbering starts at 0).
    Parenthesize as \(...) if you intended a capture of a single numeric value.
    at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S02-literals/string-interpolation.t:19
    ------> [32m    is "{;\[33m⏏[31m1;42}", "42", '{\\1 parses correctly (2)[0m
    To refer to a positional match capture, just use $0 (numbering starts at 0).
    Parenthesize as \(...) if you intended a capture of a single numeric value.
    at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S02-literals/string-interpolation.t:20
    ------> [32m    is "{;;;;;;\[33m⏏[31m1;42}", "42", '{\\1 parses correctly (3)[0m
Use of Nil in string context  in block  at t/spec/S02-literals/string-interpolation.t line 31
  16    0    0    0   16
S02-literals/sub-calls.t...........................# call with one arg, has no space and no parens
# call with adverb after no space
  20    0    0    0   20
S02-literals/subscript.t...........................WARNINGS for /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S02-literals/subscript.t:
Useless use of "<" in expression "all(@newval2) < any(@oldval)" in sink context (line 11)
# %hash \s+ <subscript> doesnt parse
   2    0    0    0    2
S02-literals/types.t...............................# Can't inherit from a non-existing class
# Can't do a non-existing role
# Unknown types in type constraints are an error
# Post declaration necessary
   7    0    0    0    7
S02-literals/underscores.t.........................# Multiple embedded underscores fail
# Leading underscore fails
# Trailing underscore fails
# Underscore before . fails
# Underscore after . fails
# Underscore before e fails
# Underscore after e fails
# Underscore before E fails
# Underscore after E fails
# 2._foo parses as method call
# 2._123 parses as method call
# 2._23  parses as method call
  19    0    0    0   19
S02-literals/version.rakudo.moar...................  28    0    3    0   31
     3 todo   : trailing zeroes fail RT \#124562
S02-magicals/78258.t...............................   1    0    0    0    1
S02-magicals/DISTRO.rakudo.moar....................Use of uninitialized value of type Blob in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block <unit> at t/spec/S02-magicals/DISTRO.rakudo.moar line 45
  12    0    2   14   28
    14 skipped: unimpl $?DISTRO RT #124616
     1 todo   : no Distro.signature yet RT \#124617
     1 todo   : no Distro.signature yet RT \#124621
S02-magicals/KERNEL.rakudo.moar....................Use of uninitialized value of type Blob in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block <unit> at t/spec/S02-magicals/KERNEL.rakudo.moar line 37
Use of uninitialized value of type Str in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block <unit> at t/spec/S02-magicals/KERNEL.rakudo.moar line 39
  21    0    3   16   40
    16 skipped: unimpl $?KERNEL RT #124624
     1 todo   : no Kernel.desc yet RT \#124626
     1 todo   : no Kernel.signature yet RT \#124625
     1 todo   : no Kernel.signature yet RT \#124627
S02-magicals/PERL.rakudo.moar......................Use of uninitialized value of type Blob in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block <unit> at t/spec/S02-magicals/PERL.rakudo.moar line 47
Use of uninitialized value of type Str in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block <unit> at t/spec/S02-magicals/PERL.rakudo.moar line 49
Use of uninitialized value of type Blob in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block <unit> at t/spec/S02-magicals/PERL.rakudo.moar line 66
Use of uninitialized value of type Str in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block <unit> at t/spec/S02-magicals/PERL.rakudo.moar line 68
  17    0    8   25   50
    25 skipped: unimpl $?PERL RT #124581
     1 todo   : no Perl.compiler.codename yet RT \#124600
     1 todo   : no Perl.compiler.desc yet RT \#124594
     1 todo   : no Perl.compiler.release yet RT \#124597
     1 todo   : no Perl.compiler.signature yet RT \#124591
     1 todo   : no Perl.compiler.signature yet RT \#124603
     1 todo   : no Perl.desc yet RT \#124585
     1 todo   : no Perl.signature yet RT \#124582
     1 todo   : no Perl.signature yet RT \#124588
S02-magicals/VM.rakudo.moar........................Use of uninitialized value of type Blob in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block <unit> at t/spec/S02-magicals/VM.rakudo.moar line 45
  13    0    2   17   32
     2 skipped: VM.properties does not exist RT #124606
    15 skipped: unimpl $?VM RT #124608
     1 todo   : no VM.signature yet RT \#124609
     1 todo   : no VM.signature yet RT \#124613
S02-magicals/args.t................................   6    0    0    0    6
S02-magicals/block.t...............................   3    0    0    0    3
S02-magicals/dollar-underscore.t...................# $_ does not get set implicitly if a pointy is given
  11    0    0    0   11
S02-magicals/dollar_bang.t.........................  15    0    0    0   15
S02-magicals/env.rakudo.moar.......................WARNINGS for /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S02-magicals/env.rakudo.moar:
Useless use of constant integer 1 in sink context (line 76)
# %*ENV<PUGS_ROCKS>=
# %*ENV<PUGS_ROCKS>=
# %ENV not visible by default
  17    0    0    1   18
     1 skipped: import fails, ENV not available: RT #122339
S02-magicals/file_line.t...........................   2    0    0    0    2
S02-magicals/pid.t.................................# did we throws-like X::Assignment::RO?
   2    0    0    0    2
S02-magicals/progname.t............................   4    0    0    0    4
S02-magicals/sub.t.................................Regex object coerced to string (please use .gist or .perl to do that)  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Regex object coerced to string (please use .gist or .perl to do that)  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Regex object coerced to string (please use .gist or .perl to do that)  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Regex object coerced to string (please use .gist or .perl to do that)  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Regex object coerced to string (please use .gist or .perl to do that)  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Regex object coerced to string (please use .gist or .perl to do that)  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
  10    0    0    0   10
S02-magicals/subname.t.............................# &?ROUTINE not available outside of a routine
   4    0    0    0    4
S02-names-vars/contextual.t........................# did we throws-like X::Dynamic::Postdeclaration?
# did we throws-like X::Dynamic::Package?
# did we throws-like X::Dynamic::Package?
  26    0    0    0   26
S02-names-vars/fmt.t...............................  21    0    0    0   21
S02-names-vars/list_array_perl.t...................  25    0    0    0   25
S02-names-vars/names.rakudo.moar...................# dies when calling non-existent sub in non-existent package
# dies when calling non-existent sub in existing package
# calling non-existing function in foreign class dies
# error message mentions name not recognized, no maximum recursion depth exceeded
# can *not* redefine a class in EVAL -- classes are package scoped
# no Null PMC access when printing a variable typed as ::foo 
 141    0    0    8  149
     4 skipped: ::{ } package lookup NYI RT #124638
     2 skipped: package variable autovivification RT #124637
     2 skipped: this kind of lookup NYI RT #125659
S02-names-vars/perl.rakudo.moar....................Regex object coerced to string (please use .gist or .perl to do that)  in block  at t/spec/S02-names-vars/perl.rakudo.moar line 56
Regex object coerced to string (please use .gist or .perl to do that)  in block  at t/spec/S02-names-vars/perl.rakudo.moar line 56
Regex object coerced to string (please use .gist or .perl to do that)  in block  at t/spec/S02-names-vars/perl.rakudo.moar line 56
Use of uninitialized value of type Mu in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at t/spec/S02-names-vars/perl.rakudo.moar line 56
 115    0    0    1  116
     1 skipped: RT #67790
S02-names-vars/signature.t.........................Potential difficulties:
    To refer to a positional match capture, just use $0 (numbering starts at 0).
    Parenthesize as \(...) if you intended a capture of a single numeric value.
    at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S02-names-vars/signature.t:14
    ------> [32m    my ($a) := \[33m⏏[31m3;[0m
# cannot increment an Int
  13    0    0    0   13
S02-names-vars/variables-and-packages.rakudo.moar..# OUR is an out of scope name
# GLOBAL is an out of scope name
# PROCESS is an out of scope name
# OUTER is an out of scope name
# CALLER is an out of scope name
# DYNAMIC is an out of scope name
# COMPILING is an out of scope name
# can't redeclare something with an implicit outer binding
  35    0    3    0   38
     3 todo   : nom regression: RT \#122346
S02-names-vars/varnames.rakudo.moar................# normal varnames can't have ! in their name
# var names can't have double colons in their adverb
# did we throws-like X::Syntax::Malformed?
# did we throws-like X::Syntax::Malformed?
# did we throws-like X::Syntax::Malformed?
# did we throws-like X::Syntax::Malformed?
  27    0    2    0   29
     2 todo   : cannot easily override [] at the moment
S02-names/bare-sigil.t.............................  11    0    0    0   11
S02-names/caller.rakudo.moar.......................Use of Nil in string context  in block  at t/spec/S02-names/caller.rakudo.moar line 88
  14    0    0    1   15
     1 skipped: ::= NYI
S02-names/identifier.t.............................# foo- (trailing hyphen) is not an identifier
# foo' (trailing apostrophe) is not an identifier
# foob'4 is not a valid identifier (not alphabetic after apostrophe)
# foob-4 is not a valid identifier (not alphabetic after hyphen)
  22    0    0    0   22
S02-names/indirect.t...............................  10    0    0    0   10
S02-names/is_cached.t..............................  38    0    0    0   38
S02-names/is_default.rakudo.moar...................# did we throws-like X::Parameter::Default::TypeCheck?
# did we throws-like X::Parameter::Default::TypeCheck?
# did we throws-like X::Parameter::Default::TypeCheck?
# did we throws-like X::Parameter::Default::TypeCheck?
# did we throws-like X::Parameter::Default::TypeCheck?
# did we throws-like X::Parameter::Default::TypeCheck?
# did we throws-like X::Comp::Trait::NotOnNative?
# did we throws-like X::Comp::Trait::NotOnNative?
    
# Failed test 'right exception type (X::Comp::Trait::NotOnNative)'
# at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/.precomp/BAAC3570AFB43B4001B683E1031B47492AF5735C.1452689425.64801/BB/BB756629C697A5B17B1A4761B25C96B447D4D80B line 1
    # Expected: X::Comp::Trait::NotOnNative
    # Got:      X::Comp::NYI
    # Exception message: native value types for hashes not yet implemented. Sorry. 
    # Looks like you failed 1 test of 4
 106    0    2    2  110
     2 skipped: is default on attributes
     1 todo   : fails first on native int hashes being NYI
     1 todo   : native int default(*) is NYI
S02-names/is_dynamic.t.............................  22    0    0    0   22
S02-names/name.t...................................  24    0    0    0   24
S02-names/our.rakudo.moar..........................# call to eval-born sub outside eval dies
   9    0    0    1   10
     1 skipped: OUR::subname() does not work
S02-names/pseudo.rakudo.moar.......................  71    0    6   67  144
     4 skipped: Cannot bind to &::("CORE")::foo RT #126113
     4 skipped: the binding in here is NYI RT #124914
    23 skipped: various issues to resolve RT #124917
    36 skipped: various issues, skipping all for now RT #124915
     2 todo   : RT \#126523
     2 todo   : binding and interpolation together NYI
     1 todo   : interpolation and auto-viv NYI
     1 todo   : not entirely sure these make sense...
S02-names/strict.rakudo.moar.......................# did we throws-like X::Undeclared?
   5    0    0    1    6
     1 skipped: lax mode does not propagate into EVAL yet RT #124912
S02-names/symbolic-deref.rakudo.moar...............WARNINGS for /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S02-names/symbolic-deref.rakudo.moar:
Useless use of constant string "b" in sink context (lines 19, 19)
Useless use of constant string "c" in sink context (lines 19, 19)
# $::($foo)bar is illegal
# Cannot look up empty name
# name with trailing :: not same as sans
  32    0    2    2   36
     2 skipped: NYI RT #124913
     1 todo   : NYI
     1 todo   : no such symbol
S02-one-pass-parsing/less-than.t...................   9    0    0    0    9
S02-packages/package-lookup.t......................   7    0    0    0    7
S02-types/WHICH.t..................................1616    0    0    0 1616
S02-types/anon_block.rakudo.moar...................# implicit params become errors
Block object coerced to string (please use .gist or .perl to do that)  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 180
  39    0    1    2   42
     2 skipped: tests don't work if previous test fails
     1 todo   : Parrot support for zero-arg subs?
S02-types/array-shapes.rakudo.moar.................# adding past num items in my @arr[num] dies
# accessing past num items in my @arr[num] dies
    
# Failed test ''my @arr.[8]' died'
# at t/spec/S02-types/array-shapes.rakudo.moar line 30
    # Looks like you failed 1 test of 2
    
# Failed test ''my @arr\    .[8]' died'
# at t/spec/S02-types/array-shapes.rakudo.moar line 33
    # Looks like you failed 1 test of 2
# type constraints on my @arr of Type works (1)
# type constraints on my @arr of Type works (2)
# type constraints on my Type @arr works (1)
# type constraints on my Type @arr works (2)
# boundary constraints on my @arr[Int] of Type works
# type constraints on my type @arr works (1)
# type constraints on my type @arr works (2)
# did we throws-like X::IllegalOnFixedDimensionArray?
# did we throws-like X::IllegalOnFixedDimensionArray?
# did we throws-like X::IllegalOnFixedDimensionArray?
# did we throws-like X::IllegalOnFixedDimensionArray?
  21    0    2    1   24
     1 skipped: array shapes NYI RT #124502
     2 todo   : code does not die, array shapes RT \#124502
S02-types/array.rakudo.moar........................# stuffing IO in an Int array does not work
# readonly accessing [*-1] of an empty array throws X::OutOfRange
# assigning to [*-1] of an empty array throws X::OutOfRange
# binding [*-1] of an empty array throws X::Bind::Slice
# readonly accessing [*-2] of an one-elem array throws X::OutOfRange
# assigning to [*-2] of an one-elem array throws X::OutOfRange
# binding [*-2] of an one-elem array throws X::Bind::Slice
# readonly accessing [-2] of normal array throws X::Obsolete and is fatal
# indirectly accessing [-1] through a variable throws X::OutOfRange
# assigning to [-1] of a normal array throws X::OutOfRange
    
# Failed test 'code dies'
# at t/spec/S02-types/array.rakudo.moar line 270
    # Looks like you failed 1 test of 2
# but Mu has no .[]
    
# Failed test 'right exception type (X::Item)'
# at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/.precomp/BAAC3570AFB43B4001B683E1031B47492AF5735C.1452689425.64801/BB/BB756629C697A5B17B1A4761B25C96B447D4D80B line 1
    # Expected: X::Item
    # Got:      X::AdHoc
    # Exception message: Cannot coerce Inf or NaN to an Int
    # Looks like you failed 1 test of 4
    
# Failed test 'right exception type (X::Item)'
# at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/.precomp/BAAC3570AFB43B4001B683E1031B47492AF5735C.1452689425.64801/BB/BB756629C697A5B17B1A4761B25C96B447D4D80B line 1
    # Expected: X::Item
    # Got:      X::AdHoc
    # Exception message: Cannot coerce Inf or NaN to an Int
    # Looks like you failed 1 test of 4
Use of uninitialized value @bar of type Str in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at t/spec/S02-types/array.rakudo.moar line 367
  95    0    3    2  100
     2 skipped: multi-dim arrays NYI RT #124508
     1 todo   : bind_pos NYI
     2 todo   : regression to AdHoc exception RT \#124509
S02-types/array_extending.t........................Use of uninitialized value of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at t/spec/S02-types/array_extending.t line 100
Use of uninitialized value of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at t/spec/S02-types/array_extending.t line 100
Use of uninitialized value of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at t/spec/S02-types/array_extending.t line 102
Use of uninitialized value of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at t/spec/S02-types/array_extending.t line 102
  21    0    0    0   21
S02-types/array_ref.t..............................  45    0    0    0   45
S02-types/assigning-refs.t.........................  18    0    0    0   18
S02-types/autovivification.t.......................  25    0    0    0   25
S02-types/bag.rakudo.moar..........................# Can't assign to an element (Bags are immutable)
# Can't increment an element (Bags are immutable)
# Can't assign to .keys
# Can't assign to .values
# Can't :delete from Bag
# :delete does not work on bag
# Can't assign to an element (Bags are immutable)
# Can't assign to a %var implemented by Bag
# Can't :delete from a Bag
# cannot call .grab on a Bag
# cannot call .grabpairs on a Bag
# Make sure we cannot assign on a key
# Make sure we cannot assign on a .values alias
# Make sure we cannot assign on a .pairs alias
# Make sure we cannot assign on a .kv alias
 204    0    1    0  205
     1 todo   : we have not secured .WHICH creation yet RT \#124454
S02-types/baghash.rakudo.moar......................# Can't assign to .keys
# Can't assign to .values
# Make sure we cannot assign Str on a key
# Make sure we cannot assign Str on a .values alias
# Make sure we cannot assign Str on a .pairs alias
# Make sure we cannot assign Str on a .kv alias
 237    0    2   21  260
    21 skipped: 'is TypeObject' NYI RT #124490
     2 todo   : in flux
S02-types/bool.t...................................  53    0    0    0   53
S02-types/built-in.t...............................   1    0    0    0    1
S02-types/capture.t................................# simply capture creation with \( works (2)
# capture creation with \$ works (2)
# capture creation with \$ works (3)
# mixing ordinary args with captures (1)
# did we throws-like X::Cannot::Lazy?
# did we throws-like X::Cannot::Lazy?
  32    0    0    0   32
S02-types/catch_type_cast_mismatch.t...............# Accessing array as hash fails
  11    0    0    0   11
S02-types/compact.rakudo.moar......................   2    0    3    5   10
     5 skipped: cat NYI RT #124456
     3 todo   : substr issues on compact array - RT \#124455
S02-types/declare.rakudo.moar......................# Assign big bigint to native won't overflow silently
  58    0    0   12   70
     1 skipped: Bit NYI RT #124458
     1 skipped: Comparator NYI RT #124479
     1 skipped: Integral NYI RT #124460
     1 skipped: KeyExtractor NYI RT #124478
     1 skipped: Matcher isa NYI RT #124470
     1 skipped: Ordering NYI RT #124477
     1 skipped: OrderingPair NYI RT #124480
     1 skipped: bit NYI RT #124465
     1 skipped: buf NYI RT #124466
     1 skipped: complex NYI RT #124463
     1 skipped: num16  NYI RT #124481
     1 skipped: rat NYI RT #124464
S02-types/fatrat.t.................................   1    0    0    0    1
S02-types/flattening.t.............................Potential difficulties:
    Redeclaration of symbol %foo
    at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S02-types/flattening.t:67
    ------> [32m    my %foo[33m⏏[31m;[0m
  46    0    0    0   46
S02-types/hash.rakudo.moar.........................Use of Nil in string context  in block  at t/spec/S02-types/hash.rakudo.moar line 190
# doesn't really make sense, but shouldn't segfault, either ()
# no .{ } in Mu
# adequate Failure error message when hash-indexing a non-hash using .<> (1)
# adequate Failure error message when hash-indexing a non-hash using .<> (2)
# adequate Failure error message when hash-indexing a non-hash using .{}
  94    0    1    0   95
     1 todo   : auto-vivified binding does not work yet: RT \#118947
S02-types/hash_ref.t...............................  31    0    0    0   31
S02-types/infinity.rakudo.moar.....................   6    0    3    4   13
     2 skipped: integer Inf RT #124451
     2 skipped: integer Inf RT #124452
     3 todo   : Int conversion of NaN and Inf RT \#124453
S02-types/instants-and-durations.t.................# Instant.new is illegal
# Instant + Instant is illegal
  15    0    0    0   15
S02-types/int-uint.rakudo.moar.....................# int8 cannot be a string
# int8 cannot be non-integer
# int8 cannot be NaN
# uint8 cannot be a string
# uint8 cannot be non-integer
# uint8 cannot be NaN
# int16 cannot be a string
# int16 cannot be non-integer
# int16 cannot be NaN
# uint16 cannot be a string
# uint16 cannot be non-integer
# uint16 cannot be NaN
# int32 cannot be a string
# int32 cannot be non-integer
# int32 cannot be NaN
# uint32 cannot be a string
# uint32 cannot be non-integer
# uint32 cannot be NaN
# int64 cannot be a string
# int64 cannot be non-integer
# int64 cannot be NaN
# uint64 cannot be a string
# uint64 cannot be non-integer
# uint64 cannot be NaN
  70    0    3    2   75
     2 skipped: Cannot unbox 65 bit wide bigint into native integer
     1 todo   : getting -1 instead of 18446744073709551615
     2 todo   : uint behaves like signed int in CUnion
S02-types/is-type.rakudo.moar......................  10    0    0    2   12
     2 skipped: state variables with `is BagHash`
S02-types/isDEPRECATED.rakudo.moar.................  13    0    8    0   21
     8 todo   : NYI
S02-types/keyhash.rakudo.moar......................   0    0    0   59   59
    59 skipped: 'is ObjectType' NYI RT #124490
S02-types/lazy-lists.t.............................  23    0    0    0   23
S02-types/list.t...................................# did we throws-like X::Immutable?
# did we throws-like X::Immutable?
# did we throws-like X::Immutable?
# did we throws-like X::Immutable?
# did we throws-like X::Immutable?
# did we throws-like X::Immutable?
# fail if they are non-numeric strings
  65    0    0    0   65
S02-types/lists.rakudo.moar........................# indexing lists by explicit negative index is parsefail (compact)
# indexing lists by explicit negative index is parsefail (spaced)
# indexing lists by range ending with negative index is parsefail (compact)
# indexing lists by range ending with negative index is parsefail (spaced)
# indexing lists by an effective negative index with * dies
# using list slices as lvalues works (2)
# call to user-declared sub in List:: class dies
# literal List element is immutable
  29    0    0    3   32
     3 skipped: list binding RT #124494
S02-types/mix.rakudo.moar..........................Potential difficulties:
    Redeclaration of symbol $inner-list
    at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S02-types/mix.rakudo.moar:360
    ------> [32m    my $inner-list[33m⏏[31m = $m1.keys.first(List);[0m
# Can't assign to an element (Mixs are immutable)
# Can't increment an element (Mixs are immutable)
# Can't assign to .keys
# Can't assign to .values
# Can't :delete from Mix
# :delete does not work on mix
# Can't assign to an element (Mixs are immutable)
# Can't assign to a %var implemented by Mix
# Can't :delete from a Mix
# .pick does not work on Mix
# cannot call .grab on a Mix
# cannot call .grabpairs on a Mix
# Make sure we cannot assign on a .values alias
# Make sure we cannot assign on a .pairs alias
# Make sure we cannot assign on a .kv alias
# cannot call kxxv
 191    0    1    0  192
     1 todo   : we have not secured .WHICH creation yet RT \#124496
S02-types/mixed_multi_dimensional.rakudo.moar......  77    0    3    0   80
     1 todo   : isa hash
     2 todo   : unknown
S02-types/mixhash.rakudo.moar......................# Can't assign to .keys
# Can't assign to .values
# .pick does not work on MixHash
# cannot call .grab on a MixHash
# Make sure we cannot assign Str on a key
# Make sure we cannot assign Str on a .values alias
# Make sure we cannot assign Str on a .pairs alias
# Make sure we cannot assign Str on a .kv alias
# cannot call kxxv
 206    0    2   21  229
    21 skipped: 'is TypeObject' NYI RT #124490
     2 todo   : in flux
S02-types/multi_dimensional_array.rakudo.moar......  48    0    0   10   58
     6 skipped: multi-dim sized arrays NYI RT #124482
     4 skipped: multi-dim sized arrays NYI RT #124483
S02-types/nan.rakudo.moar..........................  20    0    0    1   21
     1 skipped: RT #83446
S02-types/native.rakudo.moar.......................  80    0    4    3   87
     3 skipped: cannot unbox to a native number
     1 todo   : RT \#102416 - though maybe wrong test? Not sure .WHAT is *that* magic
     1 todo   : uint16 increment in sink context doesn't work
     1 todo   : uint32 increment in sink context doesn't work
     1 todo   : uint8 increment in sink context doesn't work
S02-types/nested_arrays.t..........................# Failure object contains X::OutOfRange exception
  10    0    0    0   10
S02-types/nested_pairs.t...........................  14    0    0    0   14
S02-types/nil.rakudo.moar..........................Potential difficulties:
    Smartmatch against True always matches; if you mean to test the topic for truthiness, use :so or *.so or ?* instead
    at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S02-types/nil.rakudo.moar:63
    ------> [32m    subset MyInt of Int where [33m⏏[31mTrue;[0m
Use of Nil in numeric context  in block <unit> at t/spec/S02-types/nil.rakudo.moar line 28
Use of Nil in numeric context  in block <unit> at t/spec/S02-types/nil.rakudo.moar line 29
Use of Nil in numeric context  in block <unit> at t/spec/S02-types/nil.rakudo.moar line 29
    
# Failed test 'code dies'
# at t/spec/S02-types/nil.rakudo.moar line 78
    # Looks like you failed 1 test of 2
  46    0    5    1   52
     1 skipped: triage
     5 todo   : triage
S02-types/num.t....................................# single underscores are not ok directly after the dot
  66    0    0    0   66
S02-types/pair.rakudo.moar.........................# checking Pair.new(:key,:value)
# checking Pair.new(key,value)
# checking pair()
# setting .key dies
# cannot assign a Str to an Int
# cannot assign an Int to a frozen
 175    0    2    0  177
     1 todo   : RT \#126369
     1 todo   : should it really have \n on the end?
S02-types/parsing-bool.t...........................   4    0    0    0    4
S02-types/range.t..................................Use of uninitialized value of type Range in numeric context  in block <unit> at t/spec/S02-types/range.t line 87
# range is immutable (push)
# range is immutable (pop)
# range is immutable (shift)
# range is immutable (unshift)
# range is immutable (append)
# range is immutable (prepend)
# is Range.bounds[0] ro
# is Range.bounds[1] ro
# Testing min, max, int-bounds on ^10
# Testing min, max, int-bounds on -1..10
# Testing min, max, int-bounds on -1^..10
# Testing min, max, int-bounds on -1..^10
# Testing min, max, int-bounds on -1^..^10
# cannot rand on string range
Use of uninitialized value $desc of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in sub proclaim at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 513
 179    0    0    0  179
S02-types/resolved-in-setting.t....................   4    0    0    0    4
S02-types/set.rakudo.moar..........................Potential difficulties:
    Redeclaration of symbol $inner-list
    at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S02-types/set.rakudo.moar:315
    ------> [32m    my $inner-list[33m⏏[31m = $s1.keys.first(List);[0m
# trying to assign throws X::Assignment::RO
 166    0    1    9  176
     9 skipped: Hypers not yet Set compatible RT #124487
     1 todo   : we have not secured .WHICH creation yet RT \#124489
S02-types/sethash.rakudo.moar...................... 194    0    0   10  204
    10 skipped: 'is TypeObject' NYI RT #124490
S02-types/sigils-and-types.rakudo.moar.............  25    0    2    0   27
     1 todo   : Capture does Associative RT \#124485
     1 todo   : Capture does Positional RT \#124484
S02-types/stash.t..................................   1    0    0    0    1
S02-types/subscripts_and_context.t.................   8    0    0    0    8
S02-types/subset.t.................................# Can't assign value that violates type constraint via subset
# Cannot instantiate a subtype
# type constraints prevents assignment 1
# type constraints prevents assignment 2
# original type prevents assignment
# subset of hash with where enforces where clause
# subset of array with where enforces where clause
# subset of pair with where enforces where clause
# my subset of Str where pattern enforces pattern
# subset of Str where pattern enforces pattern
# where-constraint picks up the right lexical (-)
  44    0    0    0   44
S02-types/type.rakudo.moar.........................# Int restricts to integers
# Int does not accept Mu
# Str restricts to strings
# Str does not accept Mu
# of Int restricts to integers
# native int type cannot be undefined
# sub parameters with non-matching type dies
# Num does not accept Int
# Num does not accept Int
# Complex does not accept Int
# Complex does not accept Int
# Rat does not accept Int
# Rat does not accept Int
# Int does not accept Num
# Int does not accept Num
# Complex does not accept Num
# Complex does not accept Num
# Rat does not accept Num
# Rat does not accept Num
# Int does not accept Rat
# Int does not accept Rat
# Complex does not accept Rat
# Complex does not accept Rat
# Num does not accept Rat
# Num does not accept Rat
# Int does not accept Complex
# Int does not accept Complex
# Rat does not accept Complex
# Rat does not accept Complex
# Num does not accept Complex
# Num does not accept Complex
# bad return value dies (returns)
# bad return value dies (of)
# bad return value dies (my Type sub)
# bad return value dies (-->)
# bad implicit return value dies (returns)
# bad implicit return value dies (of)
# bad implicit return value dies (my Type sub)
# bad implicit return value dies (-->)
# multiple prefix constraints not allowed
# multiple prefix constraints not allowed
# multiple prefix constraints not allowed
# multiple prefix constraints not allowed
  73    0    1    0   74
     1 todo   : nigh
S02-types/undefined-types.rakudo.moar..............Use of uninitialized value $obj of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at t/spec/S02-types/undefined-types.rakudo.moar line 87
Use of uninitialized value $int of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at t/spec/S02-types/undefined-types.rakudo.moar line 88
Use of uninitialized value $obj of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at t/spec/S02-types/undefined-types.rakudo.moar line 89
Use of uninitialized value $int of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at t/spec/S02-types/undefined-types.rakudo.moar line 90
Use of uninitialized value $obj of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at t/spec/S02-types/undefined-types.rakudo.moar line 92
Use of uninitialized value $int of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at t/spec/S02-types/undefined-types.rakudo.moar line 93
Use of uninitialized value $obj of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at t/spec/S02-types/undefined-types.rakudo.moar line 95
Use of uninitialized value $int of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at t/spec/S02-types/undefined-types.rakudo.moar line 96
Use of uninitialized value $obj of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at t/spec/S02-types/undefined-types.rakudo.moar line 101
Use of uninitialized value $int of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at t/spec/S02-types/undefined-types.rakudo.moar line 102
  45    0    4    0   49
     4 todo   : .clone doesn't copy typedness
S02-types/unicode.t................................   5    0    0    0    5
S02-types/version.t................................  36    0    0    0   36
S02-types/whatever.rakudo.moar.....................# {*.{}}() dies
 107    0    1    1  109
     1 skipped: currying plus R meta op RT #124486
     1 todo   : * as dummy
                                                   pass fail todo skip plan
S03-binding/arrays.t...............................Use of uninitialized value of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at t/spec/S03-binding/arrays.t line 44
# can only bind Positional stuff to @a
  47    0    0    0   47
S03-binding/attributes.rakudo.moar.................   9    0    0    3   12
     3 skipped: class attributes RT #124631
S03-binding/closure.rakudo.moar....................   4    0    0    4    8
     4 skipped: ::= NYI
S03-binding/hashes.t...............................# Cannot bind to hash slices
  39    0    0    0   39
S03-binding/nested.t...............................  43    0    0    0   43
S03-binding/ro.rakudo.moar.........................# variable trait "is readonly" is no longer valid (1)
# variable trait "is readonly" is no longer valid (2)
   2    0    0    9   11
     9 skipped: ::= NYI
S03-binding/scalars.rakudo.moar....................# cannot bind to a literal
  24    0    0    9   33
     9 skipped: list binding: RT #122369
S03-feeds/basic.rakudo.moar........................   9    0    6    8   23
     4 skipped: * feeds RT #124636
     2 skipped: double-ended feeds RT #124634
     2 skipped: double-ended feeds RT #124635
     3 todo   : feeds + eager
     2 todo   : feeds + signatures
     1 todo   : isn't lazy
S03-junctions/associative.t........................  10    0    0    0   10
S03-junctions/autothreading.t...................... 104    0    0    0  104
S03-junctions/boolean-context.t....................  74    0    0    0   74
S03-junctions/misc.t...............................# Do not try to auto-thread Junction type object (multi case)
# Do not try to auto-thread Junction type object (only case)
 142    0    0    0  142
S03-metaops/cross.rakudo.moar......................    
# Failed test ''<1 2> Xcmp <1 2> Xcmp <1 2>' died'
# at t/spec/S03-metaops/cross.rakudo.moar line 79
    # Looks like you failed 1 test of 2
# X. is too fiddly
# X. can't do P5 concat
  74    0    1    0   75
     1 todo   : code does not die
S03-metaops/eager-hyper.rakudo.moar................   7    0    1    0    8
     1 todo   : hyper NYI entirely, I guess RT \#124517
S03-metaops/hyper.rakudo.moar......................# both non-dwim dies correctly on ASCII notation
# lazy list on left side with both dwim dies correctly
# lazy list on left side with right dwim dies correctly
# lazy list on left side with both non-dwim dies correctly
# lazy list on right side with both dwim dies correctly
# lazy list on right side with left dwim dies correctly
# lazy list on right side with both non-dwim dies correctly
# lazy list on both sides with both non-dwim dies correctly
# lazy list on both sides with both dwim dies correctly
# lazy list on both sides with left dwim dies correctly
# lazy list on both sides with right dwim dies correctly
# wordy postfix operator: dotted form not allowed
# wordy postfix operator, ASCII: dotted form not allowed
# dotted form of postfix:<i> fails
Use of uninitialized value of type Any in numeric context  in block  at t/spec/S03-metaops/hyper.rakudo.moar line 590
Use of uninitialized value of type Any in numeric context  in block  at t/spec/S03-metaops/hyper.rakudo.moar line 596
Use of uninitialized value of type Any in numeric context  in block  at t/spec/S03-metaops/hyper.rakudo.moar line 618
Use of uninitialized value of type Any in numeric context  in block  at t/spec/S03-metaops/hyper.rakudo.moar line 629
    
# Failed test ''my @a >>[=]>> (1,2,3)' died'
# at t/spec/S03-metaops/hyper.rakudo.moar line 961
    # Looks like you failed 1 test of 2
# non-dwim hyper against empty RHS dies
# non-dwim hyper against empty RHS dies
# non-dwim hyper against empty RHS dies
# non-dwim hyper against empty RHS dies
# «.» can't be hypered
 399    0    1    2  402
     1 skipped: EVAL(Buf) RT #122256
     1 skipped: doesn't seem to see the nodal
     1 todo   : can_meta check for meta operators NYI
S03-metaops/not.t..................................# Doubled prefix:<!> is illegal
# !. is too fiddly
# !. can't do P5 concat
  46    0    0    0   46
S03-metaops/reduce.rakudo.moar.....................Use of uninitialized value <element> of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at t/spec/S03-metaops/reduce.rakudo.moar line 334
Use of uninitialized value <element> of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at t/spec/S03-metaops/reduce.rakudo.moar line 334
Use of uninitialized value <element> of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at t/spec/S03-metaops/reduce.rakudo.moar line 338
Use of uninitialized value <element> of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at t/spec/S03-metaops/reduce.rakudo.moar line 338
# non-associative operator "[leg]" can not be used as reduction operator
 541    0    1    0  542
     1 todo   : item context
S03-metaops/reverse.t..............................# Cannot assign to return value of R~
# adequate error message on trying to metaop-reverse binding (:=)
# R. is too fiddly
# R. can't do P5 concat
  67    0    0    0   67
S03-metaops/zip.t..................................# Z. is too fiddly
# Z. can't do P5 concat
  75    0    0    0   75
S03-operators/adverbial-modifiers.rakudo.moar......Block object coerced to string (please use .gist or .perl to do that)  in block  at t/spec/S03-operators/adverbial-modifiers.rakudo.moar line 48
Block object coerced to string (please use .gist or .perl to do that)  in block  at t/spec/S03-operators/adverbial-modifiers.rakudo.moar line 48
Use of uninitialized value $x of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in sub f1 at t/spec/S03-operators/adverbial-modifiers.rakudo.moar line 173
  41    0    1    0   42
     1 todo   : Multi colonpair syntax not yet understood RT \#124553
S03-operators/also.rakudo.moar.....................   4    0    4    0    8
     1 todo   : nom regression RT \#124544
     1 todo   : nom regression RT \#124545
     1 todo   : nom regression RT \#124546
     1 todo   : nom regression RT \#124547
S03-operators/andthen.t............................   8    0    0    0    8
S03-operators/arith.t..............................# Modulo zero with infix:<mod> dies and is catchable
# Modulo zero with infix:<mod> dies and is catchable with VInt variables
# Modulo zero with infix:<mod> dies and is catchable with VRef variables
# Modulo zero with infix:<%> dies and is catchable
# Modulo zero with infix:<%> dies and is catchable with VInt variables
# Modulo zero with infix:<%> dies and is catchable with VRef variables
# Division by zero with infix:<div> dies and is catchable
# Division by zero with infix:<div> dies and is catchable with VInt variables
# Division by zero with infix:<div> dies and is catchable with VRef variables
# Division by zero with infix:</> dies and is catchable (1)
# Division by zero with infix:</> dies and is catchable (2)
# Division by zero with infix:</> dies and is catchable with VInt/VRat variables
# Division by zero with infix:</> dies and is catchable with VRef variables
# .gist on '1/0' blows up with X::Numeric::DivideByZero
# infix<!+> is not iffy enough; RT #73386
Use of uninitialized value of type Int in numeric context  in block  at t/spec/S03-operators/arith.t line 379
 157    0    0    0  157
S03-operators/assign-is-not-binding.t..............   9    0    0    0    9
S03-operators/assign.rakudo.moar...................WARNINGS for /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S03-operators/assign.rakudo.moar:
Useless use of constant integer 2 in sink context (lines 914, 914)
Useless use of constant integer 4 in sink context (lines 565, 565)
Useless use of constant integer 3 in sink context (lines 565, 565, 914, 914)
# use of R~= operator on a non-container dies
# correct precedence between sub call and assignment (1)
# Can't use diffy >= with the = metaop 
# Can't use fiddly ~~ with the = metaop 
 266    0   16   14  296
     3 skipped: ,= needs to be special cased after GLR to compile to push(@a, 3, 4)
     2 skipped: RT #76734
     3 skipped: cannot modify an immutable value RT #124533
     6 skipped: ~< and ~> NYI RT #124531
     2 todo   : ,= needs to be special cased after GLR to compile to push(@a, 3, 4)
     2 todo   : item assignment
     1 todo   : item/list assignment
     2 todo   : list assignment
     5 todo   : list assignment to scalar
     1 todo   : list assignment with ($var, *)
     3 todo   : list assignment, autovivification (?)
S03-operators/autoincrement-range.t................# Tests for 'a' .. 'z'
# Tests for 'Α' .. 'Ω' (Greek uppercase)
# Tests for 'α' .. 'ω' (Greek lowercase)
# Tests for 'א' .. 'ת' (Hebrew)
# Tests for '0' .. '9'
# Tests for '٠' .. '٩' (Arabic-Indic)
# Tests for '०' .. '९' (Devangari)
# Tests for '০' .. '৯' (Bengali)
# Tests for '੦' .. '੯' (Gurmukhi)
# Tests for '૦' .. '૯' (Gujarati)
# Tests for '୦' .. '୯' (Oriya)
  96    0    0    0   96
S03-operators/autoincrement.t......................# parse error for "$a++ ++"
  79    0    0    0   79
S03-operators/autovivification.t...................Use of uninitialized value of type Any in numeric context  in block  at t/spec/S03-operators/autovivification.t line 84
Use of uninitialized value of type Any in numeric context  in block  at t/spec/S03-operators/autovivification.t line 95
Use of uninitialized value of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at t/spec/S03-operators/autovivification.t line 140
  23    0    0    0   23
S03-operators/bag.rakudo.moar...................... 110    0   18    0  128
     2 todo   : Crashing
     4 todo   : NYI
     8 todo   : Rakudo update in progress, but not done yet RT \#124529
     4 todo   : Wrong answer at the moment
S03-operators/basic-types.t........................  19    0    0    0   19
S03-operators/bit.t................................  38    0    0    0   38
S03-operators/boolean-bitwise.t....................  45    0    0    0   45
S03-operators/brainos.t............................   9    0    0    0    9
S03-operators/buf.t................................# throw on negative range
# throw on out of range (positive)
# throw on out of bounds, counted from the end
# throw on negative len
# did we throws-like X::Buf::AsStr?
# did we throws-like X::Buf::AsStr?
Use of uninitialized value of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at t/spec/S03-operators/buf.t line 95
  55    0    0    0   55
S03-operators/chained-declarators.t................# scoping our, my ('our' doesn't leak)
   5    0    0    0    5
S03-operators/cmp.t................................  53    0    0    0   53
S03-operators/comparison-simple.t..................  24    0    0    0   24
S03-operators/comparison.t.........................# (unless they exceed the signficance)
# (still fails scaled up)
# (still fails scaled down)
  53    0    0    0   53
S03-operators/composition.t........................  10    0    0    0   10
S03-operators/context-forcers.rakudo.moar.......... 104    0    0    2  106
     2 skipped: failure modes of Str.Numeric RT #124540
S03-operators/context.t............................# building a hash of one item fails
# Perl 5 form of ${$scalar} dies
# Perl 5 form of "${$scalar}" dies
# Perl 5 form of @{$array} dies
# Perl 5 form of "@{$array}" dies
# Let rare Perl 5 form of %{$hash} fail for other reasons
  39    0    0    0   39
S03-operators/custom.t.............................   1    0    0    0    1
S03-operators/div.t................................   7    0    0    0    7
S03-operators/equality.t...........................Use of uninitialized value $foo of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block <unit> at t/spec/S03-operators/equality.t line 29
Use of uninitialized value $foo of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block <unit> at t/spec/S03-operators/equality.t line 30
Use of uninitialized value @foo of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block <unit> at t/spec/S03-operators/equality.t line 33
Use of uninitialized value @foo of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block <unit> at t/spec/S03-operators/equality.t line 34
Use of uninitialized value $foo of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block <unit> at t/spec/S03-operators/equality.t line 69
Use of uninitialized value $foo of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block <unit> at t/spec/S03-operators/equality.t line 71
Use of uninitialized value $foo of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block <unit> at t/spec/S03-operators/equality.t line 72
Use of uninitialized value $foo of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block <unit> at t/spec/S03-operators/equality.t line 72
Use of uninitialized value of type Any in numeric context  in block <unit> at t/spec/S03-operators/equality.t line 77
Use of uninitialized value of type Any in numeric context  in block <unit> at t/spec/S03-operators/equality.t line 78
  46    0    0    0   46
S03-operators/eqv.rakudo.moar......................Potential difficulties:
    To pass an array, hash or sub to a function in Perl 6, just pass it as is.
    For other uses of Perl 5's ref operator consider binding with ::= instead.
    Parenthesize as \(...) if you intended a capture of a single variable.
    at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S03-operators/eqv.rakudo.moar:41
    ------> [32m  ok  (\[33m⏏[31m@a eqv \@a), "eqv on array references (1[0m
    To pass an array, hash or sub to a function in Perl 6, just pass it as is.
    For other uses of Perl 5's ref operator consider binding with ::= instead.
    Parenthesize as \(...) if you intended a capture of a single variable.
    at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S03-operators/eqv.rakudo.moar:41
    ------> [32m  ok  (\@a eqv \[33m⏏[31m@a), "eqv on array references (1)";[0m
    To pass an array, hash or sub to a function in Perl 6, just pass it as is.
    For other uses of Perl 5's ref operator consider binding with ::= instead.
    Parenthesize as \(...) if you intended a capture of a single variable.
    at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S03-operators/eqv.rakudo.moar:42
    ------> [32m  ok  (\[33m⏏[31m@b eqv \@b), "eqv on array references (2[0m
    To pass an array, hash or sub to a function in Perl 6, just pass it as is.
    For other uses of Perl 5's ref operator consider binding with ::= instead.
    Parenthesize as \(...) if you intended a capture of a single variable.
    at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S03-operators/eqv.rakudo.moar:42
    ------> [32m  ok  (\@b eqv \[33m⏏[31m@b), "eqv on array references (2)";[0m
    To pass an array, hash or sub to a function in Perl 6, just pass it as is.
    For other uses of Perl 5's ref operator consider binding with ::= instead.
    Parenthesize as \(...) if you intended a capture of a single variable.
    at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S03-operators/eqv.rakudo.moar:44
    ------> [32m  todo('huh?'); ok !(\[33m⏏[31m@a eqv \@b), "eqv on array references (3[0m
    To pass an array, hash or sub to a function in Perl 6, just pass it as is.
    For other uses of Perl 5's ref operator consider binding with ::= instead.
    Parenthesize as \(...) if you intended a capture of a single variable.
    at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S03-operators/eqv.rakudo.moar:44
    ------> [32m  todo('huh?'); ok !(\@a eqv \[33m⏏[31m@b), "eqv on array references (3)";[0m
    To pass an array, hash or sub to a function in Perl 6, just pass it as is.
    For other uses of Perl 5's ref operator consider binding with ::= instead.
    Parenthesize as \(...) if you intended a capture of a single variable.
    at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S03-operators/eqv.rakudo.moar:46
    ------> [32m  ok \[33m⏏[31m@a eqv \@b, '\@array of two bound arrays[0m
    To pass an array, hash or sub to a function in Perl 6, just pass it as is.
    For other uses of Perl 5's ref operator consider binding with ::= instead.
    Parenthesize as \(...) if you intended a capture of a single variable.
    at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S03-operators/eqv.rakudo.moar:46
    ------> [32m  ok \@a eqv \[33m⏏[31m@b, '\@array of two bound arrays are eqv[0m
    To refer to a positional match capture, just use $0 (numbering starts at 0).
    Parenthesize as \(...) if you intended a capture of a single numeric value.
    at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S03-operators/eqv.rakudo.moar:51
    ------> [32m  my $a = \[33m⏏[31m3;[0m
    To refer to a positional match capture, just use $0 (numbering starts at 0).
    Parenthesize as \(...) if you intended a capture of a single numeric value.
    at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S03-operators/eqv.rakudo.moar:52
    ------> [32m  my $b = \[33m⏏[31m3;[0m
    To pass an array, hash or sub to a function in Perl 6, just pass it as is.
    For other uses of Perl 5's ref operator consider binding with ::= instead.
    Parenthesize as \(...) if you intended a capture of a single variable.
    at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S03-operators/eqv.rakudo.moar:58
    ------> [32m  todo('huh?'); ok (\[33m⏏[31m$a !eqv \$b), "eqv on scalar references [0m
    To pass an array, hash or sub to a function in Perl 6, just pass it as is.
    For other uses of Perl 5's ref operator consider binding with ::= instead.
    Parenthesize as \(...) if you intended a capture of a single variable.
    at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S03-operators/eqv.rakudo.moar:58
    ------> [32m  todo('huh?'); ok (\$a !eqv \[33m⏏[31m$b), "eqv on scalar references (1-4)";[0m
    To pass an array, hash or sub to a function in Perl 6, just pass it as is.
    For other uses of Perl 5's ref operator consider binding with ::= instead.
    Parenthesize as \(...) if you intended a capture of a single variable.
    at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S03-operators/eqv.rakudo.moar:84
    ------> [32m  my $num = 3; my $a   = \[33m⏏[31m$num;[0m
    To pass an array, hash or sub to a function in Perl 6, just pass it as is.
    For other uses of Perl 5's ref operator consider binding with ::= instead.
    Parenthesize as \(...) if you intended a capture of a single variable.
    at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S03-operators/eqv.rakudo.moar:85
    ------> [32m  my $b   = \[33m⏏[31m$num;[0m
    To refer to a positional match capture, just use $0 (numbering starts at 0).
    Parenthesize as \(...) if you intended a capture of a single numeric value.
    at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S03-operators/eqv.rakudo.moar:107
    ------> [32m  ok !(\[33m⏏[31m3 eqv \4),         "eqv on anonymous sca[0m
    To refer to a positional match capture, just use $0 (numbering starts at 0).
    Parenthesize as \(...) if you intended a capture of a single numeric value.
    at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S03-operators/eqv.rakudo.moar:107
    ------> [32m  ok !(\3 eqv \[33m⏏[31m4),         "eqv on anonymous scalar ref[0m
    To refer to a positional match capture, just use $0 (numbering starts at 0).
    Parenthesize as \(...) if you intended a capture of a single numeric value.
    at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S03-operators/eqv.rakudo.moar:110
    ------> [32m  todo('huh?'); ok !(\[33m⏏[31m3 eqv \3),         "eqv on anonymous sca[0m
    To refer to a positional match capture, just use $0 (numbering starts at 0).
    Parenthesize as \(...) if you intended a capture of a single numeric value.
    at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S03-operators/eqv.rakudo.moar:110
    ------> [32m  todo('huh?'); ok !(\3 eqv \[33m⏏[31m3),         "eqv on anonymous scalar ref[0m
  50    0    3    1   54
     1 skipped: huh?
     3 todo   : huh?
S03-operators/flip-flop.rakudo.moar................Use of uninitialized value $i of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at t/spec/S03-operators/flip-flop.rakudo.moar line 60
Use of uninitialized value $i of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at t/spec/S03-operators/flip-flop.rakudo.moar line 60
Use of uninitialized value $i of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at t/spec/S03-operators/flip-flop.rakudo.moar line 60
Use of uninitialized value $i of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at t/spec/S03-operators/flip-flop.rakudo.moar line 60
Use of uninitialized value $i of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at t/spec/S03-operators/flip-flop.rakudo.moar line 60
Use of uninitialized value $i of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at t/spec/S03-operators/flip-flop.rakudo.moar line 60
Use of uninitialized value $i of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at t/spec/S03-operators/flip-flop.rakudo.moar line 60
Use of uninitialized value $i of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at t/spec/S03-operators/flip-flop.rakudo.moar line 60
Use of uninitialized value $i of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at t/spec/S03-operators/flip-flop.rakudo.moar line 60
Use of uninitialized value $i of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at t/spec/S03-operators/flip-flop.rakudo.moar line 60
Use of uninitialized value $i of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at t/spec/S03-operators/flip-flop.rakudo.moar line 60
Use of uninitialized value $i of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at t/spec/S03-operators/flip-flop.rakudo.moar line 60
Use of uninitialized value $i of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at t/spec/S03-operators/flip-flop.rakudo.moar line 60
Use of uninitialized value $i of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at t/spec/S03-operators/flip-flop.rakudo.moar line 60
Use of uninitialized value $i of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at t/spec/S03-operators/flip-flop.rakudo.moar line 60
Use of uninitialized value $i of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at t/spec/S03-operators/flip-flop.rakudo.moar line 60
Use of uninitialized value $i of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at t/spec/S03-operators/flip-flop.rakudo.moar line 60
Use of uninitialized value $i of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at t/spec/S03-operators/flip-flop.rakudo.moar line 60
Use of uninitialized value $i of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at t/spec/S03-operators/flip-flop.rakudo.moar line 60
Use of uninitialized value $i of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at t/spec/S03-operators/flip-flop.rakudo.moar line 60
Use of uninitialized value $i of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at t/spec/S03-operators/flip-flop.rakudo.moar line 60
Use of uninitialized value $i of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at t/spec/S03-operators/flip-flop.rakudo.moar line 60
Use of uninitialized value $i of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at t/spec/S03-operators/flip-flop.rakudo.moar line 60
Use of uninitialized value $i of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at t/spec/S03-operators/flip-flop.rakudo.moar line 60
Use of uninitialized value $i of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at t/spec/S03-operators/flip-flop.rakudo.moar line 60
Use of uninitialized value $i of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at t/spec/S03-operators/flip-flop.rakudo.moar line 60
Use of uninitialized value $i of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at t/spec/S03-operators/flip-flop.rakudo.moar line 60
Use of uninitialized value $i of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at t/spec/S03-operators/flip-flop.rakudo.moar line 60
Use of uninitialized value $i of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at t/spec/S03-operators/flip-flop.rakudo.moar line 60
Use of uninitialized value $i of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at t/spec/S03-operators/flip-flop.rakudo.moar line 60
Use of uninitialized value $i of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at t/spec/S03-operators/flip-flop.rakudo.moar line 60
Use of uninitialized value $i of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at t/spec/S03-operators/flip-flop.rakudo.moar line 60
Use of uninitialized value $i of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at t/spec/S03-operators/flip-flop.rakudo.moar line 60
Use of uninitialized value $i of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at t/spec/S03-operators/flip-flop.rakudo.moar line 60
Use of uninitialized value $i of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at t/spec/S03-operators/flip-flop.rakudo.moar line 60
Use of uninitialized value $i of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at t/spec/S03-operators/flip-flop.rakudo.moar line 60
Use of uninitialized value $i of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at t/spec/S03-operators/flip-flop.rakudo.moar line 60
Use of uninitialized value $i of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at t/spec/S03-operators/flip-flop.rakudo.moar line 60
Use of uninitialized value $i of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at t/spec/S03-operators/flip-flop.rakudo.moar line 60
Use of uninitialized value $i of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at t/spec/S03-operators/flip-flop.rakudo.moar line 60
Use of uninitialized value $i of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at t/spec/S03-operators/flip-flop.rakudo.moar line 60
Use of uninitialized value $i of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at t/spec/S03-operators/flip-flop.rakudo.moar line 60
Use of uninitialized value $i of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at t/spec/S03-operators/flip-flop.rakudo.moar line 60
Use of uninitialized value $i of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at t/spec/S03-operators/flip-flop.rakudo.moar line 60
Use of uninitialized value $i of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at t/spec/S03-operators/flip-flop.rakudo.moar line 60
Use of uninitialized value $i of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at t/spec/S03-operators/flip-flop.rakudo.moar line 60
Use of uninitialized value $i of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at t/spec/S03-operators/flip-flop.rakudo.moar line 60
Use of uninitialized value $i of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at t/spec/S03-operators/flip-flop.rakudo.moar line 60
Use of uninitialized value $i of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at t/spec/S03-operators/flip-flop.rakudo.moar line 60
Use of uninitialized value $i of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at t/spec/S03-operators/flip-flop.rakudo.moar line 60
Use of uninitialized value $i of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at t/spec/S03-operators/flip-flop.rakudo.moar line 60
Use of uninitialized value $i of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at t/spec/S03-operators/flip-flop.rakudo.moar line 60
Use of uninitialized value $i of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at t/spec/S03-operators/flip-flop.rakudo.moar line 60
Use of uninitialized value $i of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at t/spec/S03-operators/flip-flop.rakudo.moar line 60
  37    0    0    3   40
     1 skipped: NYM flip-flop with "True but $seqnum" RT #124549
     2 skipped: dubious scoping? RT #124548
S03-operators/gcd.t................................  16    0    0    0   16
S03-operators/identity.rakudo.moar.................  37    0    8    0   45
     4 todo   : misuse of =:= RT \#124537
     4 todo   : unspecced
S03-operators/increment.t..........................# can't postincrement a literal number
# can't preincrement a literal number
# can't postdecrement a literal number
# can't predecrement a literal number
# can't postincrement a literal string
# can't preincrement a literal string
# can't postdecrement a literal string
# can't predecrement a literal string
# can not double-increment, because the return value is not a container
  37    0    0    0   37
S03-operators/infixed-function.t...................   5    0    0    0    5
S03-operators/inplace.rakudo.moar..................  27    0    0    4   31
     4 skipped: Method '' not found for invocant of class 'Str' RT #124528
S03-operators/is-divisible-by.rakudo.moar..........# infix<!%> is not iffy enough; RT #76170
# cannot divide by zero using infix:<%%>
    
# Failed test 'code dies'
# at t/spec/S03-operators/is-divisible-by.rakudo.moar line 41
    # Looks like you failed 1 test of 4
  14    0    1    0   15
     1 todo   : not sure why this doesn't fire
S03-operators/lcm.t................................  15    0    0    0   15
S03-operators/list-quote-junction.t................  16    0    0    0   16
S03-operators/minmax.rakudo.moar...................# No! No left-associativeness!
# This is also not OK
  28    0    0    2   30
     2 skipped: Annoying test that we haven't done the obvious yet unspecced, fails because we have indeed done the obvious RT #124539
S03-operators/misc.rakudo.moar.....................# Guillemet form of subscript does not parse as infix hyperop
# %^^ fails to parse (RT #73198)
# ~~!~~ fails to parse (RT #76436)
# did we throws-like Exception?
Use of uninitialized value of type Str in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at t/spec/S03-operators/misc.rakudo.moar line 132
    
# Failed test 'code dies'
# at t/spec/S03-operators/misc.rakudo.moar line 132
    # Looks like you failed 1 test of 2
  43    0    1    0   44
     1 todo   : RT \#93978
S03-operators/mix.rakudo.moar...................... 102    0   26    0  128
     2 todo   : Crashing
     4 todo   : NYI
     8 todo   : Rakudo update in progress, but not done yet RT \#124541
     4 todo   : Wrong answer at the moment
     8 todo   : submix behavior still under discussion
S03-operators/names.t..............................Sub+{<anon|41688432>}+{Precedence} object coerced to string (please use .gist or .perl to do that)  in block <unit> at t/spec/S03-operators/names.t line 14
Sub+{<anon|41688432>}+{Precedence} object coerced to string (please use .gist or .perl to do that)  in block <unit> at t/spec/S03-operators/names.t line 16
   7    0    0    0    7
S03-operators/nesting.t............................  26    0    0    0   26
S03-operators/not.t................................  22    0    0    0   22
S03-operators/numeric-shift.t......................  38    0    0    0   38
S03-operators/orelse.t.............................  10    0    0    0   10
S03-operators/overflow.t...........................  98    0    0    0   98
S03-operators/precedence.rakudo.moar...............WARNINGS for /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S03-operators/precedence.rakudo.moar:
Useless use of "X" in expression "my $a = (1, 3) X (2, 4)" in sink context (line 137)
Useless use of constant integer 2 in sink context (lines 135, 135)
Useless use of constant integer 3 in sink context (lines 135, 135)
# | and ^ may not associate
# ^ and | may not associate
# Can't use assignop inside ??!!
# Can't use meta-assignop inside ??!!
# X+> must not associate with ...
# Z* and X** are non associative
# there is no more prefix:<int>
# list associativity only works between identical operators
# prefix/postfix ++ are not associative
  62    0    2    0   64
     2 todo   : Inequality (!=) misparsed as assignment RT \#121108
S03-operators/range-basic.t........................# Testing -1^..7
# Testing 3..^-1
# Testing 666..42
# Testing "a".."g"
# Testing "a"..^"g"
# Testing "a"^.."g"
# Testing "a"^..^"g"
# Testing "g".."a"
# Testing ^5
# Testing 0..^5.5
# Testing 0..^5.5e0
# Testing 1..Inf
# Testing 1^..Inf
# Testing 1..^Inf
# Testing 1^..^Inf
# Testing -Inf..1
# Testing -Inf^..1
# Testing -Inf..^1
# Testing -Inf^..^1
# Testing -Inf..Inf
# Testing -Inf^..Inf
# Testing -Inf..^Inf
# Testing -Inf^..^Inf
# did we throws-like X::Range::InvalidArg?
# did we throws-like X::Range::InvalidArg?
# did we throws-like X::Range::InvalidArg?
# did we throws-like X::Range::InvalidArg?
# did we throws-like X::Range::InvalidArg?
# did we throws-like X::Range::InvalidArg?
# did we throws-like X::Range::InvalidArg?
# did we throws-like X::Range::InvalidArg?
 110    0    0    0  110
S03-operators/range-int.t.......................... 507    0    0    0  507
S03-operators/range.t..............................Use of uninitialized value of type Any in numeric context  in block  at t/spec/S03-operators/range.t line 218
Use of uninitialized value of type Any in numeric context  in block  at t/spec/S03-operators/range.t line 218
Use of uninitialized value of type Any in numeric context  in block  at t/spec/S03-operators/range.t line 219
Use of uninitialized value of type Any in numeric context  in block  at t/spec/S03-operators/range.t line 219
# .. is not associative
 125    0    0    0  125
S03-operators/reduce-le1arg.rakudo.moar............  51    0    0    3   54
     1 skipped: expected Any but got Mu instead RT #124552
     1 skipped: ~< NYI RT #124531
     1 skipped: ~> NYI RT #124531
S03-operators/relational.rakudo.moar............... 157    0    2    0  159
     2 todo   : RT \#121987
S03-operators/repeat.t.............................  38    0    0    0   38
S03-operators/scalar-assign.t......................   4    0    0    0    4
S03-operators/set.t................................# set listop called without arguments dies (1)
# set listop called without arguments dies (2)
 292    0    0    0  292
S03-operators/short-circuit.t......................Use of Nil in numeric context  in block  at t/spec/S03-operators/short-circuit.t line 205
  83    0    0    0   83
S03-operators/so.t.................................  15    0    0    0   15
S03-operators/spaceship-and-containers.t...........   6    0    0    0    6
S03-operators/spaceship.t..........................   5    0    0    0    5
S03-operators/subscript-adverbs.t.................. 110    0    0    0  110
S03-operators/subscript-vs-lt.t....................# infix less-than (<) requires whitespace before, so this is a parse error.
# infix less-than (<) requires whitespace before, so this is a parse error.
   4    0    0    0    4
S03-operators/ternary.t............................# Ternary error (RT #66840)
# Ternary error (RT #71704)
# conditional operator written as ?? :: throws typed exception
# adverbed literal in second part of ternary
# precedence of adverb in second part of ternary is too loose
# parenthesized adverbed literal in second part of ternary
# conditional operator written as ?? : throws typed exception
# bogus code before !! of conditional operator is compile time error
# missing !! of conditional operator is compile time error
# typed exception when listop gobbles the !! of conditional operator
Non ast passed to WANTED: NQPMu
  27    0    0    0   27
S03-operators/value_equivalence.rakudo.moar........Potential difficulties:
    To pass an array, hash or sub to a function in Perl 6, just pass it as is.
    For other uses of Perl 5's ref operator consider binding with ::= instead.
    Parenthesize as \(...) if you intended a capture of a single variable.
    at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S03-operators/value_equivalence.rakudo.moar:78
    ------> [32m  ok  (\[33m⏏[31m@a === \@a), "=== on array references (1[0m
    To pass an array, hash or sub to a function in Perl 6, just pass it as is.
    For other uses of Perl 5's ref operator consider binding with ::= instead.
    Parenthesize as \(...) if you intended a capture of a single variable.
    at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S03-operators/value_equivalence.rakudo.moar:78
    ------> [32m  ok  (\@a === \[33m⏏[31m@a), "=== on array references (1)";[0m
    To pass an array, hash or sub to a function in Perl 6, just pass it as is.
    For other uses of Perl 5's ref operator consider binding with ::= instead.
    Parenthesize as \(...) if you intended a capture of a single variable.
    at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S03-operators/value_equivalence.rakudo.moar:80
    ------> [32m  ok  (\[33m⏏[31m@b === \@b), "=== on array references (2[0m
    To pass an array, hash or sub to a function in Perl 6, just pass it as is.
    For other uses of Perl 5's ref operator consider binding with ::= instead.
    Parenthesize as \(...) if you intended a capture of a single variable.
    at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S03-operators/value_equivalence.rakudo.moar:80
    ------> [32m  ok  (\@b === \[33m⏏[31m@b), "=== on array references (2)";[0m
    To pass an array, hash or sub to a function in Perl 6, just pass it as is.
    For other uses of Perl 5's ref operator consider binding with ::= instead.
    Parenthesize as \(...) if you intended a capture of a single variable.
    at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S03-operators/value_equivalence.rakudo.moar:81
    ------> [32m  ok !(\[33m⏏[31m@a === \@b), "=== on array references (3[0m
    To pass an array, hash or sub to a function in Perl 6, just pass it as is.
    For other uses of Perl 5's ref operator consider binding with ::= instead.
    Parenthesize as \(...) if you intended a capture of a single variable.
    at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S03-operators/value_equivalence.rakudo.moar:81
    ------> [32m  ok !(\@a === \[33m⏏[31m@b), "=== on array references (3)";[0m
    To pass an array, hash or sub to a function in Perl 6, just pass it as is.
    For other uses of Perl 5's ref operator consider binding with ::= instead.
    Parenthesize as \(...) if you intended a capture of a single variable.
    at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S03-operators/value_equivalence.rakudo.moar:82
    ------> [32m  isa-ok (\[33m⏏[31m@a === \@a), Bool, "=== on array referen[0m
    To pass an array, hash or sub to a function in Perl 6, just pass it as is.
    For other uses of Perl 5's ref operator consider binding with ::= instead.
    Parenthesize as \(...) if you intended a capture of a single variable.
    at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S03-operators/value_equivalence.rakudo.moar:82
    ------> [32m  isa-ok (\@a === \[33m⏏[31m@a), Bool, "=== on array references (4)"[0m
    To refer to a positional match capture, just use $0 (numbering starts at 0).
    Parenthesize as \(...) if you intended a capture of a single numeric value.
    at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S03-operators/value_equivalence.rakudo.moar:86
    ------> [32m  my $a = \[33m⏏[31m3;[0m
    To refer to a positional match capture, just use $0 (numbering starts at 0).
    Parenthesize as \(...) if you intended a capture of a single numeric value.
    at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S03-operators/value_equivalence.rakudo.moar:87
    ------> [32m  my $b = \[33m⏏[31m3;[0m
    To pass an array, hash or sub to a function in Perl 6, just pass it as is.
    For other uses of Perl 5's ref operator consider binding with ::= instead.
    Parenthesize as \(...) if you intended a capture of a single variable.
    at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S03-operators/value_equivalence.rakudo.moar:114
    ------> [32m  my $a   = \[33m⏏[31m$num;[0m
    To pass an array, hash or sub to a function in Perl 6, just pass it as is.
    For other uses of Perl 5's ref operator consider binding with ::= instead.
    Parenthesize as \(...) if you intended a capture of a single variable.
    at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S03-operators/value_equivalence.rakudo.moar:115
    ------> [32m  my $b   = \[33m⏏[31m$num;[0m
    To refer to a positional match capture, just use $0 (numbering starts at 0).
    Parenthesize as \(...) if you intended a capture of a single numeric value.
    at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S03-operators/value_equivalence.rakudo.moar:138
    ------> [32m  ok !(\[33m⏏[31m3 === \4),          "=== on anonymous sc[0m
    To refer to a positional match capture, just use $0 (numbering starts at 0).
    Parenthesize as \(...) if you intended a capture of a single numeric value.
    at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S03-operators/value_equivalence.rakudo.moar:138
    ------> [32m  ok !(\3 === \[33m⏏[31m4),          "=== on anonymous scalar re[0m
    To refer to a positional match capture, just use $0 (numbering starts at 0).
    Parenthesize as \(...) if you intended a capture of a single numeric value.
    at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S03-operators/value_equivalence.rakudo.moar:139
    ------> [32m  ok \[33m⏏[31m3 === \3,          "=== on anonymous sca[0m
    To refer to a positional match capture, just use $0 (numbering starts at 0).
    Parenthesize as \(...) if you intended a capture of a single numeric value.
    at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S03-operators/value_equivalence.rakudo.moar:139
    ------> [32m  ok \3 === \[33m⏏[31m3,          "=== on anonymous scalar ref[0m
    To refer to a positional match capture, just use $0 (numbering starts at 0).
    Parenthesize as \(...) if you intended a capture of a single numeric value.
    at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S03-operators/value_equivalence.rakudo.moar:140
    ------> [32m  isa-ok (\[33m⏏[31m3 === \4), Bool, "=== on anonymous scala[0m
    To refer to a positional match capture, just use $0 (numbering starts at 0).
    Parenthesize as \(...) if you intended a capture of a single numeric value.
    at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S03-operators/value_equivalence.rakudo.moar:140
    ------> [32m  isa-ok (\3 === \[33m⏏[31m4), Bool, "=== on anonymous scalar refer[0m
  84    0    1    0   85
     1 todo   : .WHICH based on type names
S03-sequence/arity-2-or-more.t.....................WARNINGS for /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S03-sequence/arity-2-or-more.t:
Useless use of constant integer 1 in sink context (use Nil instead to suppress this warning) (line 42)
# no internals leaking out with series operator used wrongly (arity 2)
  20    0    0    0   20
S03-sequence/arity0.t..............................  13    0    0    0   13
S03-sequence/basic.t...............................# RT #75698 - empty list on right side of sequence operator does not cause infinite loop (but throws exception)
# comma before sequence operator is caught
 143    0    0    0  143
S03-sequence/limit-arity-2-or-more.t...............   8    0    0    0    8
S03-sequence/misc.t................................# sequence terminated by signature mismatch
# Nil sequence
# yada operator not confused for sequence operator
# did we throws-like X::Sequence::Deduction?
# non-deducible sequence ending in * throws X::Sequence::Deduction (1)
# non-deducible sequence ending in * throws X::Sequence::Deduction (2)
  30    0    0    0   30
S03-sequence/nonnumeric.rakudo.moar................# Str decrement fails after 'AA': leftmost characters are never removed
  27    0    0   17   44
    11 skipped: hangs RT #125049
     6 skipped: lifting comparison ops RT #125050
S03-smartmatch/any-any.t...........................   8    0    0    0    8
S03-smartmatch/any-bool.t..........................   8    0    0    0    8
S03-smartmatch/any-callable.t......................   6    0    0    0    6
S03-smartmatch/any-complex.t.......................  12    0    0    0   12
S03-smartmatch/any-hash-pair.t.....................   7    0    0    0    7
S03-smartmatch/any-method.t........................   4    0    0    0    4
S03-smartmatch/any-num.t...........................  19    0    0    0   19
S03-smartmatch/any-pair.t..........................  10    0    0    0   10
S03-smartmatch/any-str.t...........................   5    0    0    0    5
S03-smartmatch/any-sub.t...........................   8    0    0    0    8
S03-smartmatch/any-type.t..........................  15    0    0    0   15
S03-smartmatch/array-array.t.......................  68    0    0    0   68
S03-smartmatch/array-hash.rakudo.moar..............   0    0    0    6    6
     6 skipped: RT #124444
S03-smartmatch/capture-signature.t.................   6    0    0    0    6
S03-smartmatch/disorganized.t......................  42    0    0    0   42
S03-smartmatch/hash-hash.rakudo.moar...............   8    0    8    0   16
     8 todo   : NYI
S03-smartmatch/range-range.t.......................  14    0    0    0   14
S03-smartmatch/regex-hash.t........................   4    0    0    0    4
S03-smartmatch/scalar-hash.t.......................   3    0    0    0    3
S03-smartmatch/signature-signature.rakudo.moar.....  19    0    0    1   20
     1 skipped: Parametric types
                                                   pass fail todo skip plan
S04-blocks-and-statements/let.t....................WARNINGS for /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S04-blocks-and-statements/let.t:
Useless use of constant integer 1 in sink context (lines 15, 39)
Useless use of constant value Mu in sink context (lines 26, 60)
  12    0    0    0   12
S04-blocks-and-statements/pointy-rw.t..............  10    0    0    0   10
S04-blocks-and-statements/pointy.rakudo.moar.......# -> { $^a, $^b } is illegal
# {YOU_ARE_HERE} disallowed outside of a setting
# did we throws-like X::TypeCheck::Return?
  19    0    1    0   20
     1 todo   : pointy blocks and last/redo RT \#124973
S04-blocks-and-statements/temp.rakudo.moar.........Use of Nil in string context  in block  at t/spec/S04-blocks-and-statements/temp.rakudo.moar line 128
Use of Nil in string context  in block  at t/spec/S04-blocks-and-statements/temp.rakudo.moar line 129
Use of Nil in string context  in block  at t/spec/S04-blocks-and-statements/temp.rakudo.moar line 130
Use of Nil in string context  in block  at t/spec/S04-blocks-and-statements/temp.rakudo.moar line 131
Use of Nil in string context  in block  at t/spec/S04-blocks-and-statements/temp.rakudo.moar line 134
Use of Nil in string context  in block  at t/spec/S04-blocks-and-statements/temp.rakudo.moar line 135
Use of Nil in string context  in block  at t/spec/S04-blocks-and-statements/temp.rakudo.moar line 136
Use of Nil in string context  in block  at t/spec/S04-blocks-and-statements/temp.rakudo.moar line 137
Use of Nil in string context  in block  at t/spec/S04-blocks-and-statements/temp.rakudo.moar line 151
Use of Nil in string context  in block  at t/spec/S04-blocks-and-statements/temp.rakudo.moar line 152
Use of Nil in string context  in block  at t/spec/S04-blocks-and-statements/temp.rakudo.moar line 153
  30    0    6    4   40
     4 skipped: RT #126447
     6 todo   : TEMP phasers NYI
S04-declarations/constant.rakudo.moar..............# constant no longer takes list
# constant hash requires Associative
Use of uninitialized value of type Any in numeric context  in block  at t/spec/S04-declarations/constant.rakudo.moar line 97
Use of uninitialized value of type Any in numeric context  in block  at t/spec/S04-declarations/constant.rakudo.moar line 119
Use of uninitialized value of type Any in numeric context  in block  at t/spec/S04-declarations/constant.rakudo.moar line 141
# did we throws-like X::Redeclaration?
  66    0    4    0   70
     3 todo   : COMPILING RT \#125054
     1 todo   : constants as type constraints
S04-declarations/implicit-parameter.t..............# Placeholders not allowed in ->
# Placeholders not allowed in sub()
  20    0    0    0   20
S04-declarations/multiple.rakudo.moar..............Potential difficulties:
    Redeclaration of symbol $x
    at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S04-declarations/multiple.rakudo.moar:18
    ------> [32m    my $x[33m⏏[31m = 3;[0m
Potential difficulties:
    Redeclaration of symbol $x
    at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/EVAL_0:1
    ------> [32mmy $x; my $x[33m⏏[31m<EOL>[0m
Potential difficulties:
    Redeclaration of symbol $x
    at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/EVAL_1:1
    ------> [32mstate $x; state $x[33m⏏[31m<EOL>[0m
# multiple declarations need multi or proto
# multiple declarations need multi or proto
   5    0    1    0    6
     1 todo   : nom regression RT \#125053
S04-declarations/my.t..............................Potential difficulties:
    Redeclaration of symbol %p
    at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S04-declarations/my.t:54
    ------> [32m        my %p[33m⏏[31m; #OK[0m
    Redeclaration of symbol $f
    at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S04-declarations/my.t:158
    ------> [32m    my $f[33m⏏[31m; #OK[0m
WARNINGS for /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S04-declarations/my.t:
Useless use of constant integer 1 in sink context (line 45)
# my() variable not yet visible (1)
Use of uninitialized value $x of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at t/spec/S04-declarations/my.t line 23
Use of uninitialized value $x of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at t/spec/S04-declarations/my.t line 23
# my &foo is lexically scoped
# $b is not available in this scope
# $e is not available in this scope
# did we throws-like X::Syntax::Variable::Initializer?
# did we throws-like X::Syntax::Variable::Initializer?
# did we throws-like X::Syntax::Variable::Initializer?
WARNINGS for /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/EVAL_25:
Useless use of constant integer 1 in sink context (line 1)
# &x() dies when empty
# Type in declarator sig 1/1 constrains
# Types in declarator sig 1/2 constrain
# Types in declarator sig 2/2 constrain
# Type outside declarator sig 1/1 constrains
# Type outside declarator sig 1/2 constrains
# Type outside declarator sig 2/2 constrains
# another Type in declarator sig
# did we throws-like X::Syntax::Term::MissingInitializer?
# did we throws-like X::Syntax::Term::MissingInitializer?
 105    0    0    0  105
S04-declarations/our.t.............................# variables aren't seen within other lexical child blocks
#  ... and not from within child packages
# variables do not leak from lexical blocks
# our() variable not yet visible outside its package
# our() variable not yet visible outside its package
# our() variable not yet visible outside its package
  31    0    0    0   31
S04-declarations/smiley.t..........................# can Int:U take an Int:D
# can Int:D be on its own
# can Int:D take an Int:U
# with :_, can Int:U take an Int:D
# with :_, can Int:D be on its own
# with :_, can Int:D take an Int:U
# with :U, can Int   take an Int:D
# with :U, can Int:U take an Int:D
# with :U, can Int:D be on its own
# with :U, can Int:D take an Int:U
# with :D, can Int   be on its own
# with :D, can Int   take an Int:U
# with :D, can Int:U take an Int:D
# with :D, can Int:D be on its own
# with :D, can Int:D take an Int:U
# does Int:foo fail
# does use variables fail
# does no variables fail
# does use variables "bar" fail
# does use variables :U, :D fail
# does use variables :foo fail
# type check happens for Int:D array
  60    0    0    0   60
S04-declarations/state.rakudo.moar.................  40    0    1    0   41
     1 todo   : initialization happens only on first call(?) RT \#102994
S04-declarations/will.rakudo.moar..................WARNINGS for /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S04-declarations/will.rakudo.moar:
Useless use of constant integer 1 in sink context (line 51)
  13    0    4    3   20
     1 skipped: declared variable not visible in block yet RT #125061
     1 skipped: declared variable not visible in block yet RT #125063
     1 skipped: declared variable not visible in block yet RT #125066
     1 todo   : declared variable not visible in block yet RT \#125064
     1 todo   : declared variable not visible in block yet RT \#125067
     1 todo   : will init NYI
     1 todo   : will post NYI RT \#125062
S04-exception-handlers/catch.t.....................Use of Nil in string context  in block <unit> at EVAL_0 line 1
# only one CATCH per block allowed
# doesn't segfault
Use of Nil in string context  in block  at EVAL_2 line 1
  30    0    0    0   30
S04-exception-handlers/control.t...................  10    0    0    0   10
S04-exception-handlers/top-level.t.................   1    0    0    0    1
S04-exceptions/control_across_runloop.t............   1    0    0    0    1
S04-exceptions/fail.t..............................WARNINGS for /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S04-exceptions/fail.t:
Useless use of constant integer 1 in sink context (line 83)
  31    0    0    0   31
S04-exceptions/pending.rakudo.moar.................Use of Nil in numeric context  in block  at t/spec/S04-exceptions/pending.rakudo.moar line 77
   6    0    1   14   21
    13 skipped: $!.pending
     1 skipped: $object.handled
     1 todo   : $object.handled
S04-phasers/ascending-order.t......................   7    0    0    0    7
S04-phasers/begin.rakudo.moar......................WARNINGS for /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S04-phasers/begin.rakudo.moar:
Useless use of constant integer 42 in sink context (line 68)
  12    0    1    0   13
     1 todo   : RT\#123776
S04-phasers/check.t................................   5    0    0    0    5
S04-phasers/descending-order.t.....................   7    0    0    0    7
S04-phasers/end.t..................................WARNINGS for /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/EVAL_1:
Useless use of "*" in expression "$x * $x" in sink context (line 1)
   8    0    0    0    8
S04-phasers/enter-leave.rakudo.moar................WARNINGS for /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S04-phasers/enter-leave.rakudo.moar:
Useless use of constant integer 1 in sink context (line 261)
Useless use of constant string "SANDMAN" in sink context (line 253)
# did we throws-like X::PhaserExceptions?
  28    0    1    1   30
     1 skipped: leave NYI RT #124960
     1 todo   : is this spec? why would LEAVE not see outer $!? fossil?
S04-phasers/eval-in-begin.t........................   3    0    0    0    3
S04-phasers/first.t................................   7    0    0    0    7
S04-phasers/in-eval.rakudo.moar....................  34    0    1    0   35
     1 todo   : not sure
S04-phasers/in-loop.rakudo.moar....................   4    0    2    0    6
     2 todo   : NEXT/LEAVE ordering RT \#124952
S04-phasers/init.t.................................  13    0    0    0   13
S04-phasers/keep-undo.t............................WARNINGS for /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S04-phasers/keep-undo.t:
Useless use of constant integer 1 in sink context (line 59)
  16    0    0    0   16
S04-phasers/multiple.t.............................   2    0    0    0    2
S04-phasers/next.rakudo.moar.......................  14    0    2    0   16
     2 todo   : NEXT/LEAVE ordering RT \#124952
S04-phasers/pre-post.rakudo.moar...................# Violated PRE  throws (catchable) exception
# Violated POST throws (catchable) exception
# sub with two PREs fails when first is violated
# sub with two PREs fails when second is violated
# sub with two POSTs fails if first POST is violated
# sub with two POSTs fails if second POST is violated
# POST receives return value as $_ (failure)
  20    0    2    0   22
     2 todo   : POST and exceptions RT \#124961
S04-phasers/rvalue.t...............................WARNINGS for /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/EVAL_0:
Useless use of constant integer 3 in sink context (line 1)
Use of Nil in string context  in block  at t/spec/S04-phasers/rvalue.t line 80
  16    0    0    0   16
S04-statement-modifiers/for.t......................WARNINGS for /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S04-statement-modifiers/for.t:
Useless use of constant integer 1 in sink context (use Nil instead to suppress this warning) (line 144)
# double statement-modifying for is not allowed
  30    0    0    0   30
S04-statement-modifiers/given.t....................WARNINGS for /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S04-statement-modifiers/given.t:
Useless use of constant integer 1 in sink context (use Nil instead to suppress this warning) (line 74)
  12    0    0    0   12
S04-statement-modifiers/if.t.......................  14    0    0    0   14
S04-statement-modifiers/unless.t...................   9    0    0    0    9
S04-statement-modifiers/until.t....................WARNINGS for /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/EVAL_0:
Useless use of constant integer 1 in sink context (use Nil instead to suppress this warning) (lines 1, 1)
Useless use of constant integer 2 in sink context (lines 1, 1)
   5    0    0    0    5
S04-statement-modifiers/values_in_bool_context.t...  24    0    0    0   24
S04-statement-modifiers/while.t....................Use of uninitialized value of type Any in numeric context  in block  at t/spec/S04-statement-modifiers/while.t line 19
WARNINGS for /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/EVAL_0:
Useless use of constant integer 1 in sink context (use Nil instead to suppress this warning) (lines 1, 1)
Useless use of constant integer 2 in sink context (lines 1, 1)
   6    0    0    0    6
S04-statement-modifiers/with.rakudo.moar...........  34    0    1    0   35
     1 todo   : parenless with/for doesn't work yet
S04-statement-modifiers/without.t..................   9    0    0    0    9
S04-statement-parsing/hash.t.......................   8    0    0    0    8
S04-statements/do.rakudo.moar......................# 'do' can't take the 'until' modifier
# 'do' can't take the 'for' modifier
# 'do' can't take the 'given' modifier
# bare block can't take 'next'
# bare block can't take 'last'
# bare block can't take 'last'
  21    0    1    7   29
     3 skipped: Undeclared name A RT #124574
     1 skipped: last without loop construct RT #124575
     2 skipped: next without loop construct RT #124573
     1 skipped: redo without loop construct RT #124576
     1 todo   : Rakudo still uses Nil here RT \#124572
S04-statements/for-scope.t.........................  16    0    0    0   16
S04-statements/for.rakudo.moar.....................WARNINGS for /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S04-statements/for.rakudo.moar:
Useless use of constant integer 41 in sink context (lines 468, 470, 474, 478, 482)
# foreach is gone, even with parens
# -> $var is ro by default
# keyword needs at least one whitespace after it
# Should throw exception, no value for parameter $y
# Please use ..* for indefinite range
# 1... does not exist
Use of Nil in string context  in block  at t/spec/S04-statements/for.rakudo.moar line 504
# Unsupported use of C-style "for (;;)" loop; in Perl 6 please use "loop (;;)"
# did we throws-like X::Multi::NoMatch?
  96    0    2    0   98
     1 todo   : Rakudo still uses Nil here RT \#124568
     1 todo   : Rakudo still uses Nil here RT \#124569
S04-statements/for_with_only_one_item.t............  12    0    0    0   12
S04-statements/gather.rakudo.moar..................# "INIT take" inside of a "gather for" fails with X::ControlFlow
  34    0    0    2   36
     2 skipped: RT #66820, and hangs under GLR
S04-statements/given.t.............................  51    0    0    0   51
S04-statements/if.rakudo.moar......................# "if" requires a block
# keyword needs at least one whitespace after it
  39    0    4    0   43
     4 todo   : RT\#105872
S04-statements/label.rakudo.moar...................# did we throws-like X::Redeclaration?
   5    0    0    1    6
     1 skipped: SEGV on moar, wrong Exception type on jvm, RT #126490
S04-statements/last.t..............................   9    0    0    0    9
S04-statements/loop.t..............................WARNINGS for /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/EVAL_0:
Useless use of ":$!to" in sink context (line 1)
# "loop {} while" is a syntax error (RT #63760)
  15    0    0    0   15
S04-statements/map-and-sort-in-for.t...............   4    0    0    0    4
S04-statements/next.t..............................  12    0    0    0   12
S04-statements/no-implicit-block.t.................  12    0    0    0   12
S04-statements/once.t..............................Use of Nil in string context  in block  at t/spec/S04-statements/once.t line 34
  23    0    0    0   23
S04-statements/quietly.t...........................   4    0    0    0    4
S04-statements/redo.t..............................# redo without loop construct dies
  12    0    0    0   12
S04-statements/repeat.t............................# did we throws-like X::Syntax::Missing?
  19    0    0    0   19
S04-statements/return.t............................  20    0    0    0   20
S04-statements/sink.t..............................   2    0    0    0    2
S04-statements/terminator.t........................WARNINGS for /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S04-statements/terminator.t:
Useless use of "+ " in expression "+ 1" in sink context (line 34)
# open closure
# incomplete expression
# if postfix modifier and is() is parsed correctly
# parens do not eat spaces after them
  20    0    0    0   20
S04-statements/try.t...............................  40    0    0    0   40
S04-statements/unless.t............................# no else allowed in unless
# no elsif allowed in unless
  11    0    0    0   11
S04-statements/until.t.............................   4    0    0    0    4
S04-statements/when.t..............................Potential difficulties:
    Smartmatch against True always matches; if you mean to test the topic for truthiness, use :so or *.so or ?* instead
    at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S04-statements/when.t:52
    ------> [32m    $iters++ for do given 1 { when [33m⏏[31mTrue { { a => 1, b => 2 } } };[0m
    Smartmatch against True always matches; if you mean to test the topic for truthiness, use :so or *.so or ?* instead
    at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S04-statements/when.t:57
    ------> [32m    $iters++ for do given 1 { when [33m⏏[31mTrue { ${ a => 1, b => 2 } } };[0m
    Smartmatch against True always matches; if you mean to test the topic for truthiness, use :so or *.so or ?* instead
    at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S04-statements/when.t:62
    ------> [32m    .++ for do given 1 { when [33m⏏[31mTrue { $a } };[0m
  24    0    0    0   24
S04-statements/while.t.............................# keyword needs at least one whitespace after it
Potential difficulties:
    Redeclaration of symbol $_
    at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/EVAL_1:1
    ------> [32mwhile 0 { my $_ [33m⏏[31m}[0m
  31    0    0    0   31
S04-statements/with.t..............................# else is not valid on without
# orwith is not valid on without
# elsif is not valid on without
  80    0    0    0   80
                                                   pass fail todo skip plan
S05-capture/alias.rakudo.moar......................Use of Nil in string context  in block <unit> at t/spec/S05-capture/alias.rakudo.moar line 45
  25    0    3    2   30
     2 skipped: Package variable capture RT #125122
     3 todo   : Package variable capture RT \#125122
S05-capture/array-alias.rakudo.moar................  40    0    0   10   50
    10 skipped: capturing to lexical variable NYI RT #126243
S05-capture/caps.t.................................  43    0    0    0   43
S05-capture/dot.rakudo.moar........................Use of Nil in string context  in block <unit> at t/spec/S05-capture/dot.rakudo.moar line 72
Use of Nil in string context  in block <unit> at t/spec/S05-capture/dot.rakudo.moar line 73
Use of Nil in string context  in block <unit> at t/spec/S05-capture/dot.rakudo.moar line 77
Use of Nil in string context  in block <unit> at t/spec/S05-capture/dot.rakudo.moar line 78
  55    0    6    0   61
     3 todo   : dubious test RT \#125004
     3 todo   : dubious test RT \#125005
S05-capture/match-object.rakudo.moar...............Use of Nil in string context  in block <unit> at t/spec/S05-capture/match-object.rakudo.moar line 27
  23    0    1    1   25
     1 skipped: No such method pos for invocant of type Any RT #124999
     1 todo   : Type of $¢ is Any instead of Cursor - RT \#124998
S05-capture/named.rakudo.moar......................   9    0    0    2   11
     2 skipped: assigning to match object RT #125000
S05-capture/subrule.t..............................Use of Nil in string context  in block  at t/spec/S05-capture/subrule.t line 81
  46    0    0    0   46
S05-grammar/action-stubs.t.........................  24    0    0    0   24
S05-grammar/example.rakudo.moar....................   5    0    0    2    7
     2 skipped: Method "speaker" not found for invocant of class "Cursor" RT #124795
S05-grammar/inheritance.rakudo.moar................  30    0    2    0   32
     1 todo   : RT \#77350
     1 todo   : automatic Grammar superclass
S05-grammar/methods.t..............................   8    0    0    0    8
S05-grammar/namespace.t............................   5    0    0    0    5
S05-grammar/parse_and_parsefile.t..................Use of Nil in string context  in block <unit> at t/spec/S05-grammar/parse_and_parsefile.t line 12
# .parse on missing grammar dies
  16    0    0    0   16
S05-grammar/polymorphism.t.........................Use of Nil in string context  in block <unit> at t/spec/S05-grammar/polymorphism.t line 55
# <Another.sea>
# match against No::Such::Rule dies
  28    0    0    0   28
S05-grammar/protoregex.rakudo.moar.................  29    0    2    0   31
     2 todo   : RT \#120146
S05-grammar/protos.t...............................   4    0    0    0    4
S05-grammar/signatures.t...........................  10    0    0    0   10
S05-grammar/ws.rakudo.moar.........................  10    0    0    2   12
     2 skipped: infinite loop: RT #64094 (noauto)
S05-interpolation/lexicals.t.......................  14    0    0    0   14
S05-interpolation/regex-in-variable.rakudo.moar....# particular garbage-in recognized as being garbage (see RT)
# should handle this too
# should handle this too
# should handle this too
# should handle this too
# should handle this too
# should handle this too
# should handle this too
# should handle this too
# should handle this too
# should handle this too
# should handle this too
# should handle this too
# should handle this too
# should handle this too
# cannot interpolate hashes into regexes
# Cannot interpolate attribute in a regex in angle construct
# Cannot interpolate attribute in a closure in a regex
  51    0    1    0   52
     1 todo   : warn on undef
S05-mass/charsets.t................................  17    0    0    0   17
S05-mass/named-chars.t............................. 431    0    0    0  431
S05-mass/properties-block.t........................ 670    0    0    0  670
S05-mass/properties-derived.t...................... 254    0    0    0  254
S05-mass/properties-general.rakudo.moar............ 598    0    8    0  606
     4 todo   : No [Lr] property defined RT \#124860
     3 todo   : Unions of properties of non-existent codepoints RT \#124863
     1 todo   : Unions of properties of non-existent codepoints RT \#124866
S05-mass/properties-script.t....................... 360    0    0    0  360
S05-mass/recursive.t...............................  20    0    0    0   20
S05-mass/rx.rakudo.moar............................Potential difficulties:
    Space is not significant here; please use quotes or :s (:sigspace) modifier (or, to suppress this warning, omit the space, or otherwise change the spacing)
    at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S05-mass/rx.rakudo.moar:1424
    ------> [32mok 'a b c def' ~~ /:s(1) b c [:s(0) d[33m⏏[31m e f ]/, 'sigspace, lexical repetition ([0m
    Space is not significant here; please use quotes or :s (:sigspace) modifier (or, to suppress this warning, omit the space, or otherwise change the spacing)
    at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S05-mass/rx.rakudo.moar:1424
    ------> [32mok 'a b c def' ~~ /:s(1) b c [:s(0) d e[33m⏏[31m f ]/, 'sigspace, lexical repetition (:s[0m
    Space is not significant here; please use quotes or :s (:sigspace) modifier (or, to suppress this warning, omit the space, or otherwise change the spacing)
    at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S05-mass/rx.rakudo.moar:1427
    ------> [32mok 'a b c def' ~~ /:s b c [:!s d[33m⏏[31m e f ]/, 'sigspace, lexical repetition ([0m
    Space is not significant here; please use quotes or :s (:sigspace) modifier (or, to suppress this warning, omit the space, or otherwise change the spacing)
    at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S05-mass/rx.rakudo.moar:1427
    ------> [32mok 'a b c def' ~~ /:s b c [:!s d e[33m⏏[31m f ]/, 'sigspace, lexical repetition (:s[0m
    Space is not significant here; please use quotes or :s (:sigspace) modifier (or, to suppress this warning, omit the space, or otherwise change the spacing)
    at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S05-mass/rx.rakudo.moar:1431
    ------> [32mok 'a b c def' !~~ /:s(0) b[33m⏏[31m c [:s(1) d e f ]/, 'sigspace, lexical r[0m
    Space is not significant here; please use quotes or :s (:sigspace) modifier (or, to suppress this warning, omit the space, or otherwise change the spacing)
    at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S05-mass/rx.rakudo.moar:1435
    ------> [32mok 'a b c def' !~~ /:!s b[33m⏏[31m c [:s d e f ]/, 'sigspace, lexical repe[0m
    Space is not significant here; please use quotes or :s (:sigspace) modifier (or, to suppress this warning, omit the space, or otherwise change the spacing)
    at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S05-mass/rx.rakudo.moar:1439
    ------> [32mok 'a b c def' !~~ /:s(0) b[33m⏏[31m c [:s(0) d e f ]/, 'sigspace, lexical r[0m
    Space is not significant here; please use quotes or :s (:sigspace) modifier (or, to suppress this warning, omit the space, or otherwise change the spacing)
    at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S05-mass/rx.rakudo.moar:1439
    ------> [32mok 'a b c def' !~~ /:s(0) b c [:s(0) d[33m⏏[31m e f ]/, 'sigspace, lexical repetition ([0m
    Space is not significant here; please use quotes or :s (:sigspace) modifier (or, to suppress this warning, omit the space, or otherwise change the spacing)
    at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S05-mass/rx.rakudo.moar:1439
    ------> [32mok 'a b c def' !~~ /:s(0) b c [:s(0) d e[33m⏏[31m f ]/, 'sigspace, lexical repetition (:s[0m
    Space is not significant here; please use quotes or :s (:sigspace) modifier (or, to suppress this warning, omit the space, or otherwise change the spacing)
    at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S05-mass/rx.rakudo.moar:1443
    ------> [32mok 'a b c def' !~~ /:!s b[33m⏏[31m c [:!s d e f ]/, 'sigspace, lexical rep[0m
    Space is not significant here; please use quotes or :s (:sigspace) modifier (or, to suppress this warning, omit the space, or otherwise change the spacing)
    at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S05-mass/rx.rakudo.moar:1443
    ------> [32mok 'a b c def' !~~ /:!s b c [:!s d[33m⏏[31m e f ]/, 'sigspace, lexical repetition ([0m
    Space is not significant here; please use quotes or :s (:sigspace) modifier (or, to suppress this warning, omit the space, or otherwise change the spacing)
    at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S05-mass/rx.rakudo.moar:1443
    ------> [32mok 'a b c def' !~~ /:!s b c [:!s d e[33m⏏[31m f ]/, 'sigspace, lexical repetition (:s[0m
    Space is not significant here; please use quotes or :s (:sigspace) modifier (or, to suppress this warning, omit the space, or otherwise change the spacing)
    at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S05-mass/rx.rakudo.moar:2082
    ------> [32m    ok 'foooo' ~~ /^ f[33m⏏[31m o ** 4 $/, 'RT #112450 sanity';[0m
    Space is not significant here; please use quotes or :s (:sigspace) modifier (or, to suppress this warning, omit the space, or otherwise change the spacing)
    at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S05-mass/rx.rakudo.moar:2084
    ------> [32m    ok 'foooo' ~~ /^ f[33m⏏[31m o ** {$rt112450} $/, 'RT #112450 closur[0m
# illegal character range
# unescaped backslash (or no closing brace)
Use of Nil in string context  in block <unit> at t/spec/S05-mass/rx.rakudo.moar line 432
# null <before>
# mismatched close
# retired metachars (\A)
# retired metachars (\Z)
# retired metachars (\z)
# alternation (|) - null right arg illegal
# alternation (|) - null both args illegal
# conjunction (&) - null right arg illegal
# conjunction (&) - null both args illegal
# alternation and conjunction (&|) - parse error
# null pattern invalid
# retired metachars (\p)
# retired metachars (\p)
# retired metachars (\P)
# retired metachars (\P)
# retired metachars (\L...\E)
# retired metachars (\L...\E)
# retired metachars (\U...\E)
# retired metachars (\U...\E)
# retired metachars (\Q...\E)
# retired metachars (\Q...\E)
# retired metachars (\G)
# retired metachars (\1)
# unterminated closure
# back references
# unterminated \x[..]
# unterminated \X[..]
# bare * at start
# bare * after ws
# bare * after [
# bare * after [+sp
# bare * after |
# bare * after |+sp
# bare + at start
# bare + after ws
# bare + after [
# bare + after [+sp
# bare + after |
# bare + after |+sp
# bare ? at start
# bare ? after ws
# bare ? after [
# bare ? after [+sp
# bare ? after |
# bare ? after |+sp
# ws null pattern
# null pattern after alternation
# no reversed char ranges
 722    0    4   14  740
     1 skipped: :: NYI RT #124889
     1 skipped: :: NYI RT #124890
     1 skipped: :: NYI RT #124891
     1 skipped: :: NYI RT #124893
     1 skipped: :: NYI RT #124894
     1 skipped: :: NYI RT #124895
     1 skipped: :: NYI RT #124900
     1 skipped: :: NYI RT #124901
     1 skipped: :: NYI RT #124902
     1 skipped: ::: NYI RT #124892
     1 skipped: ::: NYI RT #124896
     1 skipped: :s() RT #124899
     1 skipped: regex <name> RT #124904
     1 skipped: regex <name> RT #124905
     1 todo   : <commit> NYI RT \#124897
     1 todo   : RT \#121307
     1 todo   : anchors and after RT \#124898
     1 todo   : parse error RT \#124903
S05-mass/stdrules.t................................ 191    0    0    0  191
S05-match/arrayhash.t..............................   8    0    0    0    8
S05-match/blocks.rakudo.moar.......................Use of Nil in string context  in block  at t/spec/S05-match/blocks.rakudo.moar line 57
  18    0    1    0   19
     1 todo   : Assignment to matched string affects earlier match objects
S05-match/capturing-contexts.rakudo.moar...........Potential difficulties:
    Space is not significant here; please use quotes or :s (:sigspace) modifier (or, to suppress this warning, omit the space, or otherwise change the spacing)
    at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S05-match/capturing-contexts.rakudo.moar:12
    ------> [32m$match = 'abd' ~~ m/ (a) (b) c || (\w) b[33m⏏[31m d /;[0m
    Space is not significant here; please use quotes or :s (:sigspace) modifier (or, to suppress this warning, omit the space, or otherwise change the spacing)
    at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S05-match/capturing-contexts.rakudo.moar:27
    ------> [32m  'abd' ~~ m/ (a) (b) c || (\w) b[33m⏏[31m d /;[0m
    Space is not significant here; please use quotes or :s (:sigspace) modifier (or, to suppress this warning, omit the space, or otherwise change the spacing)
    at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S05-match/capturing-contexts.rakudo.moar:37
    ------> [32mbd' ~~ m/ <alpha> <alpha> c || <alpha> b[33m⏏[31m d /;[0m
  55    0    1    0   56
     1 todo   : RT \#70007
S05-match/make.t...................................   4    0    0    0    4
S05-match/non-capturing.t..........................   9    0    0    0    9
S05-match/perl.rakudo.moar.........................   4    0    1    5   10
     4 skipped: <foo::bar> RT #124745
     1 skipped: RT #125293 - .perl does not roundtrip as expected - operator is null
     1 todo   : RT \#125293 - .perl does not roundtrip as expected
S05-match/positions.t..............................  10    0    0    0   10
S05-metachars/closure.rakudo.moar..................   6    0    1    5   12
     2 skipped: assignment to match variables (dubious) RT #124946
     3 skipped: assignment to match variables (dubious) RT #124947
     1 todo   : make() inside closure
S05-metachars/line-anchors.t.......................# error when quantifying ^
# error when quantifying ^^
# error when quantifying $
# error when quantifying $$
  24    0    0    0   24
S05-metachars/newline.t............................  15    0    0    0   15
S05-metachars/tilde.t..............................  29    0    0    0   29
S05-metasyntax/angle-brackets.rakudo.moar..........# <...> without whitespace calls a method (not quote words)
# no other characters are allowed (*)
# no other characters are allowed (|)
# no other characters are allowed (&)
# no other characters are allowed (:)
# <...> dies in regex match
    
# Failed test ''"foo" ~~ /<!!!>/' died'
# at t/spec/S05-metasyntax/angle-brackets.rakudo.moar line 265
    # Looks like you failed 1 test of 2
  69    0    2   20   91
     1 skipped: <&foo()> NYI RT #124523
    11 skipped: <*literal> RT #124525
     1 skipped: <test()> NYI RT #124519
     1 skipped: <test()> NYI RT #124520
     1 skipped: <~~ ... >
     2 skipped: The use of a hash as an assertion is reserved.
     2 skipped: angle quotes in regexes RT #124521
     1 skipped: colon arguments NYI RT #124522
     1 todo   : !!! in regexes
     1 todo   : <$subrule> NYI RT \#124524
S05-metasyntax/assertions.t........................   4    0    0    0    4
S05-metasyntax/changed.t...........................# /m modifier is gone
# \A is gone
# \Z is gone
# \z is gone
  12    0    0    0   12
S05-metasyntax/charset.t...........................# reverse range in charset is lethal (RT #71702)
# missing + or - is fatal 1
# missing + or - is fatal 2
# missing + or - is fatal 3
  54    0    0    0   54
S05-metasyntax/delimiters.t........................  21    0    0    0   21
S05-metasyntax/interpolating-closure.rakudo.moar...Potential difficulties:
    Space is not significant here; please use quotes or :s (:sigspace) modifier (or, to suppress this warning, omit the space, or otherwise change the spacing)
    at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S05-metasyntax/interpolating-closure.rakudo.moar:19
    ------> [32mmy regex abc { a[33m⏏[31m b c }[0m
    Space is not significant here; please use quotes or :s (:sigspace) modifier (or, to suppress this warning, omit the space, or otherwise change the spacing)
    at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S05-metasyntax/interpolating-closure.rakudo.moar:19
    ------> [32mmy regex abc { a b[33m⏏[31m c }[0m
   6    0    1    0    7
     1 todo   : dunno RT \#124527
S05-metasyntax/litvar.t............................Potential difficulties:
    Apparent subscript will be treated as regex
    at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S05-metasyntax/litvar.t:31
    ------> [32mok(!('a0' ~~ m/$aref[33m⏏[31m[0]/), 'Array ref stringifies before mat[0m
    Apparent subscript will be treated as regex
    at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S05-metasyntax/litvar.t:33
    ------> [32mok('a b ab c0' ~~ m/$aref[33m⏏[31m[0]/, 'Array ref stringifies before matc[0m
    Apparent subscript will be treated as regex
    at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S05-metasyntax/litvar.t:34
    ------> [32mok('a0' ~~ m/@$aref[33m⏏[31m[0]/, 'Array deref ignores 0');         [0m
    Apparent subscript will be treated as regex
    at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S05-metasyntax/litvar.t:35
    ------> [32mok('bx0' ~~ m/@$aref[33m⏏[31m.[0]/, 'Array deref ignores dot 0');    [0m
    Apparent subscript will be treated as regex
    at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S05-metasyntax/litvar.t:36
    ------> [32mok('c0' ~~ m/@var[33m⏏[31m[0]/, 'Array ignores 0');               [0m
# undeclared var in assertion in interpolated string throws
  33    0    0    0   33
S05-metasyntax/longest-alternative.rakudo.moar.....  53    0    1    1   55
     1 skipped: :: RT #124526
     1 todo   : negative lookahead does not LTM properly, RT \#122951
S05-metasyntax/lookaround.t........................  10    0    0    0   10
S05-metasyntax/null.t..............................   4    0    0    0    4
S05-metasyntax/proto-token-ltm.t...................  10    0    0    0   10
S05-metasyntax/regex.t.............................# rx () requires whitespace if the delims are parens
# colons are not allowed as rx delimiters
Potential difficulties:
    Useless declaration of a has-scoped method in mainline (did you mean 'my token foo'?)
    at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/EVAL_3:1
    ------> [32mtoken [33m⏏[31mfoo {bar}[0m
Potential difficulties:
    Useless declaration of a has-scoped method in mainline (did you mean 'my regex baz'?)
    at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/EVAL_4:1
    ------> [32mregex [33m⏏[31mbaz {qux}[0m
Use of uninitialized value of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block <unit> at t/spec/S05-metasyntax/regex.t line 91
# commented capture end = parse error
# bare ";" in rx is not allowed
# bare ";" in match is not allowed
Potential difficulties:
    Repeated character (.) unexpectedly found in character class
    at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/EVAL_9:1
    ------> [32m/<[33m⏏[31m[..b]>/[0m
# "Regex.new.perl dies but does not segfault
  42    0    0    0   42
S05-metasyntax/repeat.t............................# P5-style {1,3} range mistake is caught
# P5-style {1,} range mistake is caught
# adequate error message when quantifier follows nothing (1)
# adequate error message when quantifier follows nothing (2)
# adequate error message when backtrack control is out of control
# adequate error message when quantifier follows non-match construct (1)
# adequate error message when quantifier follows non-match construct (2)
  46    0    0    0   46
S05-metasyntax/sequential-alternation.t............  10    0    0    0   10
S05-metasyntax/single-quotes.t.....................Potential difficulties:
    Space is not significant here; please use quotes or :s (:sigspace) modifier (or, to suppress this warning, omit the space, or otherwise change the spacing)
    at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S05-metasyntax/single-quotes.t:21
    ------> [32mok("ab cd" ~~ m/ab ' ' c[33m⏏[31m d/, 'ab cd 2');[0m
    Space is not significant here; please use quotes or :s (:sigspace) modifier (or, to suppress this warning, omit the space, or otherwise change the spacing)
    at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S05-metasyntax/single-quotes.t:25
    ------> [32mok("ab/cd" ~~ m/ab '/' c[33m⏏[31m d/, 'ab/cd');[0m
    Space is not significant here; please use quotes or :s (:sigspace) modifier (or, to suppress this warning, omit the space, or otherwise change the spacing)
    at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S05-metasyntax/single-quotes.t:31
    ------> [32mok("ab cd" ~~ m/ab ‘ ’ c[33m⏏[31m d/, 'ab cd 2');[0m
    Space is not significant here; please use quotes or :s (:sigspace) modifier (or, to suppress this warning, omit the space, or otherwise change the spacing)
    at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S05-metasyntax/single-quotes.t:35
    ------> [32mok("ab/cd" ~~ m/ab ‘/’ c[33m⏏[31m d/, 'ab/cd');[0m
    Space is not significant here; please use quotes or :s (:sigspace) modifier (or, to suppress this warning, omit the space, or otherwise change the spacing)
    at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S05-metasyntax/single-quotes.t:41
    ------> [32mok("ab cd" ~~ m/ab ‚ ’ c[33m⏏[31m d/, 'ab cd 2');[0m
    Space is not significant here; please use quotes or :s (:sigspace) modifier (or, to suppress this warning, omit the space, or otherwise change the spacing)
    at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S05-metasyntax/single-quotes.t:45
    ------> [32mok("ab/cd" ~~ m/ab ‚/’ c[33m⏏[31m d/, 'ab/cd');[0m
    Space is not significant here; please use quotes or :s (:sigspace) modifier (or, to suppress this warning, omit the space, or otherwise change the spacing)
    at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S05-metasyntax/single-quotes.t:51
    ------> [32mok("ab cd" ~~ m/ab ‚ ‘ c[33m⏏[31m d/, 'ab cd 2');[0m
    Space is not significant here; please use quotes or :s (:sigspace) modifier (or, to suppress this warning, omit the space, or otherwise change the spacing)
    at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S05-metasyntax/single-quotes.t:55
    ------> [32mok("ab/cd" ~~ m/ab ‚/‘ c[33m⏏[31m d/, 'ab/cd');[0m
    Space is not significant here; please use quotes or :s (:sigspace) modifier (or, to suppress this warning, omit the space, or otherwise change the spacing)
    at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S05-metasyntax/single-quotes.t:61
    ------> [32mok("ab cd" ~~ m/ab ｢ ｣ c[33m⏏[31m d/, 'ab cd 2');[0m
    Space is not significant here; please use quotes or :s (:sigspace) modifier (or, to suppress this warning, omit the space, or otherwise change the spacing)
    at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S05-metasyntax/single-quotes.t:65
    ------> [32mok("ab/cd" ~~ m/ab ｢/｣ c[33m⏏[31m d/, 'ab/cd');[0m
  30    0    0    0   30
S05-metasyntax/unicode-property-pair.t.............   5    0    0    0    5
S05-metasyntax/unknown.rakudo.moar.................# escaped "a" is not valid metasyntax
Use of Nil in string context  in block  at t/spec/S05-metasyntax/unknown.rakudo.moar line 30
# did we throws-like X::Syntax::Regex::UnrecognizedModifier?
  12    0    1    0   13
     1 todo   : RT \#74832
S05-modifier/continue.t............................Use of Nil in string context  in block  at t/spec/S05-modifier/continue.t line 19
  13    0    0    0   13
S05-modifier/counted-match.rakudo.moar.............# did we throws-like Exception?
# did we throws-like Exception?
  26    0    2    0   28
     2 todo   : RT \#125026
S05-modifier/counted.t.............................WARNINGS for /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S05-modifier/counted.t:
Useless use of "-" in expression "*-1" in sink context (line 220)
# did we throws-like Exception?
# did we throws-like Exception?
# did we throws-like Exception?
# did we throws-like Exception?
# did we throws-like Exception?
 126    0    0    0  126
S05-modifier/global.t..............................   8    0    0    0    8
S05-modifier/ignorecase-and-ignoremark.t...........  16    0    0    0   16
S05-modifier/ignorecase.rakudo.moar................  23    0    2    0   25
     2 todo   : ignorecase and SS/&szlig; RT \#121377
S05-modifier/ignoremark.t..........................  16    0    0    0   16
S05-modifier/ii.rakudo.moar........................  23    0    0    0   23
S05-modifier/my.rakudo.moar........................  22    0    2    0   24
     1 todo   : :our variables in regexes
     1 todo   : unsuccessful match preserves :let value
S05-modifier/overlapping.t.........................  22    0    0    0   22
S05-modifier/perl5_0.rakudo.moar...................# Now going to test numbered match variable.
  20    0    4    0   24
     3 todo   : NYI
     1 todo   : NYI RT \#125036
S05-modifier/perl5_1.t............................. 100    0    0    0  100
S05-modifier/perl5_2.t............................. 100    0    0    0  100
S05-modifier/perl5_3.t............................. 100    0    0    0  100
S05-modifier/perl5_4.t.............................Use of Nil in string context  in block <unit> at t/spec/S05-modifier/perl5_4.t line 42
Use of Nil in string context  in block <unit> at t/spec/S05-modifier/perl5_4.t line 82
Use of Nil in string context  in block <unit> at t/spec/S05-modifier/perl5_4.t line 85
Use of Nil in string context  in block <unit> at t/spec/S05-modifier/perl5_4.t line 93
 100    0    0    0  100
S05-modifier/perl5_5.rakudo.moar...................  97    0    4    1  102
     1 skipped: hangs RT #125025
     2 todo   : (?i) and backreferences RT \#125024
     1 todo   : unknown issue RT \#125022
     1 todo   : unknown issue RT \#125023
S05-modifier/perl5_6.rakudo.moar...................  89    0   15    0  104
    15 todo   : needs RT
S05-modifier/perl5_7.t............................. 100    0    0    0  100
S05-modifier/perl5_8.rakudo.moar...................  77    0    1   25  103
     1 skipped: \G RT #125035
     6 skipped: character classes in enumerated range RT #125034
    18 skipped: expensive quantifier RT #125033
     1 todo   : (?>...) NYI RT \#125032
S05-modifier/perl5_9.rakudo.moar...................  74    0    9    1   84
     1 skipped: Quantifier quantifies nothing RT #125027
     3 todo   : test file needs review RT \#125028
     3 todo   : test file needs review RT \#125029
     2 todo   : test file needs review RT \#125030
     1 todo   : test file needs review RT \#125031
S05-modifier/pos.rakudo.moar.......................  37    0    3    0   40
     1 todo   : m:g
     1 todo   : m:p:i:g// NYI
     1 todo   : s:pos/// NYI
S05-modifier/repetition-exhaustive.rakudo.moar.....Potential difficulties:
    Space is not significant here; please use quotes or :s (:sigspace) modifier (or, to suppress this warning, omit the space, or otherwise change the spacing)
    at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S05-modifier/repetition-exhaustive.rakudo.moar:20
    ------> [32mmy regex rx { a[33m⏏[31m b+ };[0m
   4    0    1    0    5
     1 todo   : exhaustive capture too greedy RT \#125133
S05-modifier/repetition.t..........................  12    0    0    0   12
S05-modifier/sigspace.t............................  16    0    0    0   16
S05-substitution/67222.t...........................   1    0    0    0    1
S05-substitution/match.t...........................  13    0    0    0   13
S05-substitution/subst.rakudo.moar.................Potential difficulties:
    Redeclaration of symbol $_
    at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S05-substitution/subst.rakudo.moar:506
    ------> [32m    my $_[33m⏏[31m = 42; [0m
    Redeclaration of symbol $_
    at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S05-substitution/subst.rakudo.moar:514
    ------> [32m    my $_[33m⏏[31m = 0; s{^(\d+)$} = sprintf "%3d -", $_;[0m
# did we throws-like Exception?
# did we throws-like Exception?
# s/// dies on unknown adverb
# :overlap does not make sense on s///
# Value of :i must be known at compile time
# did we throws-like X::Syntax::Regex::NullRegex?
# did we throws-like X::Syntax::Regex::NullRegex?
 177    0    1    1  179
     1 skipped: RT #114388 -- No such method 'subst-mutate' for invocant of type 'Any'
     1 todo   : be smarter about constant detection
S05-transliteration/79778.t........................   1    0    0    0    1
S05-transliteration/trans.rakudo.moar..............# y/// does not exist any longer
  61    0    0    1   62
     1 skipped: feed operator NYI
S05-transliteration/with-closure.rakudo.moar.......Use of uninitialized value $s of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at t/spec/S05-transliteration/with-closure.rakudo.moar line 49
Use of uninitialized value $s of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at t/spec/S05-transliteration/with-closure.rakudo.moar line 49
Use of uninitialized value $s of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at t/spec/S05-transliteration/with-closure.rakudo.moar line 53
Use of uninitialized value $s of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at t/spec/S05-transliteration/with-closure.rakudo.moar line 53
  15    0    2    1   18
     1 skipped: Unable to resolve method ord in class Any RT #124659
     2 todo   : nom regression
                                                   pass fail todo skip plan
S06-advanced/callframe.rakudo.moar.................  14    0    0    1   15
     1 skipped: Unable to resolve method inline in type CallFrame
S06-advanced/callsame.t............................   3    0    0    0    3
S06-advanced/lexical-subs.t........................# lexical sub not visible outside current scope
# did we throws-like X::Redeclaration?
  13    0    0    0   13
S06-advanced/recurse.t.............................  13    0    0    0   13
S06-advanced/return.rakudo.moar....................WARNINGS for /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S06-advanced/return.rakudo.moar:
Useless use of constant integer 1 in sink context (line 355)
# did we throws-like X::Redeclaration?
# did we throws-like X::TypeCheck::Return?
  97    0    1    0   98
     1 todo   : RT \#61732
S06-advanced/stub.rakudo.moar......................# old Perl 5 "sub foo;" syntax is dead
# executing stub subroutine dies
Stub code executed  in sub hail at t/spec/S06-advanced/stub.rakudo.moar line 20
# executing stub subroutine dies
# redefining existing subroutine dies
   9    0    0    1   10
     1 skipped: supersede NYI
S06-advanced/wrap.rakudo.moar......................    
# Failed test 'right exception type (X::NoDispatcher)'
# at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/.precomp/BAAC3570AFB43B4001B683E1031B47492AF5735C.1452689425.64801/BB/BB756629C697A5B17B1A4761B25C96B447D4D80B line 1
    # Expected: X::NoDispatcher
    # Got:      X::ControlFlow::Return
    # Exception message: Attempt to return outside of any Routine
    # Looks like you failed 1 test of 2

# Failed test '{nextsame}() dies properly'
# at t/spec/S06-advanced/wrap.rakudo.moar line 169
# Looks like you failed 1 test of 85
  81    1    3    0   85
     1 todo   : callwith RT \#124653
     1 todo   : temp and wrap
     1 todo   : temp and wrap RT \#124654
S06-currying/assuming-and-mmd.t....................   7    0    0    0    7
S06-currying/misc.rakudo.moar......................# Backtrace mentions priming and does not mention currying
  12    0    0    1   13
     1 skipped: We could do better here
S06-currying/named.t...............................  27    0    0    0   27
S06-currying/positional.t.......................... 227    0    0    0  227
S06-currying/slurpy.t..............................  32    0    0    0   32
S06-macros/errors.t................................   2    0    0    0    2
S06-macros/opaque-ast.rakudo.moar..................Weird node visited: QAST::BVal
Weird node visited: QAST::BVal
Weird node visited: QAST::BVal
   3    0    0    4    7
     3 skipped: :COMPILING flag RT #124964
     1 skipped: return from macro RT #124965
S06-macros/quasi-blocks.rakudo.moar................Weird node visited: QAST::BVal
Weird node visited: QAST::BVal
Weird node visited: QAST::BVal
Weird node visited: QAST::BVal
Weird node visited: QAST::BVal
Weird node visited: QAST::BVal
Weird node visited: QAST::BVal
Weird node visited: QAST::BVal
Weird node visited: QAST::BVal
Weird node visited: QAST::BVal
Weird node visited: QAST::BVal
Weird node visited: QAST::BVal
Weird node visited: QAST::BVal
Weird node visited: QAST::BVal
Weird node visited: QAST::BVal
Weird node visited: QAST::BVal
WARNINGS for /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S06-macros/quasi-blocks.rakudo.moar:
Useless use of constant integer 1 in sink context (line 65)
Useless use of constant string "grasshopper" in sink context (line 74)
Useless use of constant string "motor oil" in sink context (line 74)
Useless use of constant integer 2 in sink context (line 65)
  12    0    0    2   14
     2 skipped: No such method 'STORE' for invocant of type 'Mu' RT #124968
S06-macros/unquoting.rakudo.moar...................Weird node visited: QAST::BVal
Weird node visited: QAST::BVal
Weird node visited: QAST::BVal
Weird node visited: QAST::BVal
WARNINGS for /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S06-macros/unquoting.rakudo.moar:
Useless use of $cookies in sink context (line 85)
# did we throws-like X::TypeCheck::Splice?
# did we throws-like Exception?
   5    0    0    1    6
     1 skipped: Specified code ref has no outer, RT #121533
S06-multi/by-trait.t...............................  13    0    0    0   13
S06-multi/lexical-multis.rakudo.moar...............# lexical multi not callable outside of lexical scope
  14    0    1    0   15
     1 todo   : lexical scope as tie breaker
S06-multi/positional-vs-named.t....................  28    0    0    0   28
S06-multi/proto.rakudo.moar........................# impossible dispatch failed (anon cap)
# Can't define sub and multi sub without proto
# declaring a multi and a single routine dies
# declaring two only-subs with same name dies
# attempt to define two proto subs with the same name dies
# proto signature is checked, not just that of the candidates
  25    0    1    0   26
     1 todo   : operator protos
S06-multi/redispatch.t.............................  14    0    0    0   14
S06-multi/subsignature.rakudo.moar.................# attempt to define two proto subs with the same name dies
# Can't define sub and multi sub without proto
# proto signature is checked, not just that of the candidates
  87    0    8    5  100
     5 skipped: redeclaration of routine 'bar' RT #118069
     2 todo   : Calls wrong candidate
     5 todo   : Multimethod sort does not descend into subsignatures
     1 todo   : operator protos
S06-multi/syntax.t.................................# anonymous only sub is an error
# anonymous multi sub is an error
# anonymous proto sub is an error
# anonymous only is an error
# anonymous multi is an error
# anonymous proto is an error
# anonymous only method is an error
# anonymous multi method is an error
# anonymous proto method is an error
Sub object coerced to string (please use .gist or .perl to do that)  in block <unit> at t/spec/S06-multi/syntax.t line 74
  44    0    0    0   44
S06-multi/type-based.rakudo.moar...................# no individual multi candidates in "our" scope
# multis in classes (3)
# arguments after ;; not considered by multi-dispatch
  62    0    4    0   66
     4 todo   : coercions need to fail like constraints RT \#124772
S06-multi/unpackability.t..........................  10    0    0    0   10
S06-multi/value-based.rakudo.moar..................  19    0    2    0   21
     2 todo   : Wrong tiebreaker order (S12, actually)
S06-operator-overloading/imported-subs.t...........# import of operators is lexical
  20    0    0    0   20
S06-operator-overloading/methods.rakudo.moar.......   2    0    1    0    3
     1 todo   : nom regression RT \#124988
S06-operator-overloading/semicolon.t...............WARNINGS for /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S06-operator-overloading/semicolon.t:
Useless use of constant integer 2 in sink context (line 15)
Useless use of constant integer 3 in sink context (line 15)
   3    0    0    0    3
S06-operator-overloading/sub.rakudo.moar...........WARNINGS for /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S06-operator-overloading/sub.rakudo.moar:
Useless use of $sym in sink context (lines 511, 511)
Useless use of constant integer 3 in sink context (line 178)
# Non-associative should not parsed when used chainly.
# circumfix definition without whitespace between starter and stopper fails with X::Syntax::AddCategorical::TooFewParts
# circumfix definition with three parts fails with X::Syntax::AddCategorical::TooManyParts
# infix definition with two parts fails with X::Syntax::AddCategorical::TooManyParts
# term definition with two parts fails with X::Syntax::AddCategorical::TooManyParts
# infix definition for /./ fails with X::Syntax::Extension::TooComplex
# constants containing too many parts throw correctly
  80    0    2   14   96
     1 skipped: cannot bind with this LHS RT #124979
     1 skipped: infix Z will never work; no lexical Z RT #124983
     2 skipped: macros RT #124978
     1 skipped: missing block, apparently "if" not an op RT #124982
     4 skipped: no lexical Z RT #124983
     1 skipped: prefix:[] form NYI RT #124974
     1 skipped: prefix:[] form NYI RT #124975
     1 skipped: prefix:[] form NYI RT #124976
     1 skipped: prefix:[] form NYI RT #124977
     1 skipped: undeclared name
     1 todo   : RT \#65638
     1 todo   : infix:<;> RT \#124981
S06-operator-overloading/term.t....................  10    0    0    0   10
S06-operator-overloading/workout.t.................  84    0    0    0   84
S06-other/anon-hashes-vs-blocks.t..................  26    0    0    0   26
S06-other/introspection.t..........................  12    0    0    0   12
S06-other/main-eval.rakudo.moar....................   2    0    1    0    3
     1 todo   : MAIN in EVAL RT \#124662
S06-other/main-semicolon.t.........................# did we throws-like X::UnitScope::TooLate?
# did we throws-like X::UnitScope::Invalid?
# did we throws-like X::UnitScope::Invalid?
   8    0    0    0    8
S06-other/main-usage.rakudo.moar...................  20    0    7    0   27
     1 todo   : NYI RT \#124669
     1 todo   : NYI RT \#124670
     1 todo   : nom regression RT \#124664
     1 todo   : nom regression RT \#124665
     1 todo   : nom regression RT \#124666
     1 todo   : nom regression RT \#124667
     1 todo   : nom regression RT \#124668
S06-other/main.t...................................   7    0    0    0    7
S06-other/misc.t...................................# pi should not be defined to accept arguments either :) 
# no Segfault when creating a Sub object with .new and trying to say it
# no Segfault when creating a Sub object with .bless and trying to say it
# no Segfault when trying to invoke the Sub type object
  12    0    0    0   12
S06-other/pairs-as-lvalues.rakudo.moar.............   3    0    2    0    5
     2 todo   : NYI RT \#124660
S06-parameters/smiley.rakudo.moar..................# can Int:U take an Int:D
# can Int:D take an Int:U
# does Int:foo fail
# can --> Int:U return an Int:D
# can --> Int:D return an Int:U
# does --> Int:foo fail
  18    0    0   17   35
    17 skipped: use parameters is NYI until further notice
S06-routine-modifiers/lvalue-subroutines.t.........  14    0    0    0   14
S06-routine-modifiers/native-lvalue-subroutines.t..  18    0    0    0   18
S06-routine-modifiers/proxy.rakudo.moar............  22    0    2    0   24
     2 todo   : RT\#124341 Proxy should not escape return from a non is-rw
S06-routine-modifiers/scoped-named-subs.t..........# Correct : lexical named sub myNamedStr() should NOT BE available outside its scope
# Correct : lexical named sub myNamedInt() should NOT BE available outside its scope
# Return of list with wrong type dies
# implicit return of list with wrong type dies
  12    0    0    0   12
S06-signature/arity.t..............................  56    0    0    0   56
S06-signature/caller-param.rakudo.moar.............Use of uninitialized value $foo of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in sub callerunderscore at t/spec/S06-signature/caller-param.rakudo.moar line 5
Use of uninitialized value $foo of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in sub callerunderscore at t/spec/S06-signature/caller-param.rakudo.moar line 5
Use of uninitialized value $foo of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in sub callerunderscore at t/spec/S06-signature/caller-param.rakudo.moar line 5
Use of uninitialized value $foo of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in sub callerunderscore at t/spec/S06-signature/caller-param.rakudo.moar line 5
Use of uninitialized value $foo of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in sub callerunderscore at t/spec/S06-signature/caller-param.rakudo.moar line 5
   2    0    5    0    7
     2 todo   : NYI RT \#123660
     3 todo   : NYI RT \#124924
S06-signature/closure-over-parameters.t............   4    0    0    0    4
S06-signature/closure-parameters.rakudo.moar.......# code dies with invalid signature (1)
# code dies with invalid signature (1)
# code dies with invalid signature (2)
# code dies with invalid signature (3)
# code dies with invalid signature (4)
# only one way of specifying sub-signature return type allowed
  13    0    0    5   18
     5 skipped: subsignatures dont factor into multi candidates yet RT #124935
S06-signature/code.rakudo.moar.....................   7    0    1    0    8
     1 todo   : RT \#67932
S06-signature/defaults.t...........................   9    0    0    0    9
S06-signature/definite-return.rakudo.moar..........WARNINGS for /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S06-signature/definite-return.rakudo.moar:
Useless use of "sin(1)" in expression "sin(1)" in sink context (line 131)
Useless use of constant integer 1 in sink context (line 12)
Useless use of constant integer 42 in sink context (line 85)
Useless use of constant integer 3 in sink context (line 20)
Useless use of constant value True in sink context (lines 109, 114, 121)
Useless use of constant value False in sink context (line 104)
# A function with a definite return value may not use return with a value
# A function with a definite return value may not use return with a value, even a Failure
  17    0    0    2   19
     2 skipped: variables as return specifications dont parse yet RT #124927
S06-signature/errors.t.............................# parser rejects magicals as args (1)
# named parameter of undeclared attribute dies
# did we throws-like X::Syntax::Signature::InvocantNotAllowed?
# did we throws-like X::Syntax::Signature::InvocantNotAllowed?
# did we throws-like X::Syntax::Signature::InvocantNotAllowed?
# did we throws-like X::Syntax::Signature::InvocantNotAllowed?
  31    0    0    0   31
S06-signature/introspection.rakudo.moar............Potential difficulties:
    Smartmatch against True always matches; if you mean to test the topic for truthiness, use :so or *.so or ?* instead
    at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S06-signature/introspection.rakudo.moar:212
    ------> [32m    is-perl-idempotent(:($ is raw where [33m⏏[31mTrue, $ is copy, Int $ is rw, $ is raw w[0m
    Smartmatch against True always matches; if you mean to test the topic for truthiness, use :so or *.so or ?* instead
    at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S06-signature/introspection.rakudo.moar:213
    ------> [32m    is-perl-idempotent(:(@ is raw where [33m⏏[31mTrue, @ is copy, Int @ is rw, @ is raw w[0m
    Smartmatch against True always matches; if you mean to test the topic for truthiness, use :so or *.so or ?* instead
    at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S06-signature/introspection.rakudo.moar:214
    ------> [32m    is-perl-idempotent(:(% is raw where [33m⏏[31mTrue, % is copy, Int % is rw, % is raw w[0m
    Smartmatch against True always matches; if you mean to test the topic for truthiness, use :so or *.so or ?* instead
    at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S06-signature/introspection.rakudo.moar:215
    ------> [32m    is-perl-idempotent(:(& is raw where [33m⏏[31mTrue, & is copy, Int & is rw, & is raw w[0m
# .perl of ($a, :$b) is idempotent
# .perl of (@a, :@b) is idempotent
# .perl of (%a, :%b) is idempotent
# .perl of (:a(:b($c))) is idempotent
# .perl of (|a is raw) is idempotent
# .perl of (&a, :&b) is idempotent
# .perl of (\a) is idempotent
# .perl of (\a, $b, &c, %d, |e is raw) is idempotent
# .perl of ($a = { ... }, :$b = { ... }) is idempotent
# .perl of (@a = { ... }, :@b = { ... }) is idempotent
# .perl of (%a = { ... }, :%b = { ... }) is idempotent
# .perl of (&a = { ... }, :&b = { ... }) is idempotent
# .perl of ($a is raw = { ... }) is idempotent
# .perl of (@a is raw = { ... }) is idempotent
# .perl of (%a is raw = { ... }) is idempotent
# .perl of (&a is raw = { ... }) is idempotent
# .perl of (\a = { ... }) is idempotent
# .perl of (Int $a, Int :$b) is idempotent
# .perl of (Int @a, Int :@b) is idempotent
# .perl of (Int %a, Int :%b) is idempotent
# .perl of (Int :a(:b($c))) is idempotent
# .perl of (|a is raw ($a)) is idempotent
# .perl of (Sub &a, Sub :&b) is idempotent
# .perl of (Int \a) is idempotent
# .perl of (Int \a, Int $b, Sub &c, Int :$d, |e is raw) is idempotent
# .perl of (Int $a = { ... }, Int :$b = { ... }) is idempotent
# .perl of (Int @a = { ... }, Int :@b = { ... }) is idempotent
# .perl of (Int %a = { ... }, Int :%b = { ... }) is idempotent
# .perl of (Sub &a = { ... }, Sub :&b = { ... }) is idempotent
# .perl of (|a is raw ($a) = { ... }) is idempotent
# .perl of (@a ($a) = { ... }) is idempotent
# .perl of (%a (:a($b)) = { ... }, %b (:c(:d($e))) = { ... }) is idempotent
# .perl of ($, :a($)) is idempotent
# .perl of (@, :a(@)) is idempotent
# .perl of (%, :a(%)) is idempotent
# .perl of (:a(:b($))) is idempotent
# .perl of (| is raw) is idempotent
# .perl of (&, :a(&)) is idempotent
# .perl of (\) is idempotent
# .perl of (\,, &, %, | is raw) is idempotent
# .perl of ($ = { ... }, :a($) = { ... }) is idempotent
# .perl of (@ = { ... }, :a(@) = { ... }) is idempotent
# .perl of (% = { ... }, :a(%) = { ... }) is idempotent
# .perl of (& = { ... }, :a(&) = { ... }) is idempotent
# .perl of ($ is raw = { ... }) is idempotent
# .perl of (@ is raw = { ... }) is idempotent
# .perl of (% is raw = { ... }) is idempotent
# .perl of (& is raw = { ... }) is idempotent
# .perl of (Int, Int :a($)) is idempotent
# .perl of (Int @, Int :a(@)) is idempotent
# .perl of (Int %, Int :a(%)) is idempotent
# .perl of (Int :a(:b($))) is idempotent
# .perl of (|a is raw ($)) is idempotent
# .perl of (Sub &, Sub :a(&)) is idempotent
# .perl of (Int \) is idempotent
# .perl of (Int \, Int, Sub &, Int %, | is raw) is idempotent
# .perl of (Int $ = { ... }, Int :a($) = { ... }) is idempotent
# .perl of (Int @ = { ... }, Int :a(@) = { ... }) is idempotent
# .perl of (Int % = { ... }, Int :a(%) = { ... }) is idempotent
# .perl of (Sub & = { ... }, Sub :a(&) = { ... }) is idempotent
# .perl of (| is raw ($a) = { ... }) is idempotent
# .perl of (@ ($a) = { ... }) is idempotent
# .perl of (% (:a($)) = { ... }, % (:c(:d($))) = { ... }) is idempotent
# .perl of (\, & is raw, % is raw, | is raw) is idempotent
# .perl of ($ is raw where { ... }, $ is copy, Int $ is rw, $ is raw where { ... }) is idempotent
# .perl of (@ is raw where { ... }, @ is copy, Int @ is rw, @ is raw where { ... }) is idempotent
# .perl of (% is raw where { ... }, % is copy, Int % is rw, % is raw where { ... }) is idempotent
# .perl of (& is raw where { ... }, & is copy, Int & is rw, & is raw where { ... }) is idempotent
# .perl of (::T  $a, T $b) is idempotent
# .perl of (::T T $a, T $b) is idempotent
# .perl of -> $a { #`(Block|139118464) ... } is idempotent
# .perl of ->  { #`(Block|139120624) ... } is idempotent
# .perl of -> $ ($a) { #`(Block|139121128) ... } is idempotent
# .perl of -> $ { #`(Block|143447992) ... } is idempotent
# .perl of -> $a ($b) { #`(Block|143448496) ... } is idempotent
 131    0    1    1  133
     1 skipped: expected Any but got Mu instead
     1 todo   : needs/find RT: Logic to make :a($a) into :$a makes :a(:b($a) into ::b(:$a)
S06-signature/mixed-placeholders.t.................  18    0    0    0   18
S06-signature/multi-invocant.t.....................  25    0    0    0   25
S06-signature/multidimensional.t...................  10    0    0    0   10
S06-signature/named-parameters.rakudo.moar.........# two sub params with the same name
# sub params with the same name and different types
# Cannot rename a parameter to an already existing positional
  83    0    0   16   99
    16 skipped: multiple same-named arguments NYI RT #124921
S06-signature/named-placeholders.t.................   3    0    0    0    3
S06-signature/named-renaming.t.....................  11    0    0    0   11
S06-signature/optional.t...........................# optional params before required ones are forbidden
# ...even if they're only optional by virtue of a default
# ...and the default is 0
# two commas in a row doesn't parse
# Can't put required parameter after optional parameters
# Cannot put required parameter after optional parameters
# making an "is rw" parameter optional dies with adequate error message
# making an "is rw" parameter optional dies with adequate error message
# Catch impossible default types at compile time
# Catch impossible default types at compile time (code object)
# Catch impossible default types at compile time (multi)
  31    0    0    0   31
S06-signature/outside-subroutine.t.................   2    0    0    0    2
S06-signature/passing-arrays.t.....................  11    0    0    0   11
S06-signature/passing-hashes.t.....................   3    0    0    0    3
S06-signature/positional-placeholders.t............# A non-twigil variable should not precede a corresponding twigil variable
# my $foo; $^foo; is an illegal redeclaration
# did we throws-like X::Placeholder::NonPlaceholder?
# did we throws-like X::Placeholder::NonPlaceholder?
  12    0    0    0   12
S06-signature/positional.t.........................# two sub params with the same scalar name
# two sub params with the same array name
# two sub params with the same hash name
# two sub params with the same callable name
# two sub params with the same sigilles name
# two sub params with the same type capture name
  13    0    0    0   13
S06-signature/scalar-type.t........................   8    0    0    0    8
S06-signature/shape.t..............................  34    0    0    0   34
S06-signature/sigilless.t..........................  10    0    0    0   10
S06-signature/slurpy-and-interpolation.t...........  12    0    0    0   12
S06-signature/slurpy-params.t......................# Testing with named arguments (named param isn't required)
Use of uninitialized value of type Any in numeric context  in sub foo2 at t/spec/S06-signature/slurpy-params.t line 86
Use of uninitialized value of type Any in numeric context  in sub foo2 at t/spec/S06-signature/slurpy-params.t line 86
Use of uninitialized value of type Any in numeric context  in sub foo2 at t/spec/S06-signature/slurpy-params.t line 86
# Testing with named arguments (named param is required) (++ version)
# Testing with named arguments (named param is required) (trait version)
# Testing with slurpy scalar
# Can't put required parameter after variadic parameters
# did we throws-like X::Parameter::TypedSlurpy?
# did we throws-like X::Parameter::TypedSlurpy?
  85    0    0    0   85
S06-signature/slurpy-placeholders.t................   8    0    0    0    8
S06-signature/sub-ref.rakudo.moar..................  28    0    2    4   34
     4 skipped: macros, compile time binding RT #124919
     2 todo   : RT \#63974
S06-signature/tree-node-parameters.rakudo.moar.....  16    0    0    4   20
     4 skipped: signature binding of return values NYI RT #124945
S06-signature/type-capture.t.......................  12    0    0    0   12
S06-signature/types.t..............................# no segfault when calling a routine having a native parameter with a type object argument
  10    0    0    0   10
S06-signature/unpack-array.t.......................  15    0    0    0   15
S06-signature/unpack-object.t......................   4    0    0    0    4
S06-signature/unspecified.t........................Use of uninitialized value <element> of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in sub both at t/spec/S06-signature/unspecified.t line 34
Use of uninitialized value <element> of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in sub both at t/spec/S06-signature/unspecified.t line 34
  18    0    0    0   18
S06-traits/as.t....................................   5    0    0    0    5
S06-traits/is-assoc.rakudo.moar....................   4    0    0    2    6
     2 skipped: RT #116244
S06-traits/is-copy.t...............................WARNINGS for /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S06-traits/is-copy.t:
Useless use of "+" in expression "+1" in sink context (lines 104, 104)
Useless use of "-" in expression "-1" in sink context (line 104)
Potential difficulties:
    Redeclaration of symbol $x
    at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/EVAL_0:1
    ------> [32msub f ($x is copy) { my $x [33m⏏[31m}[0m
  27    0    0    0   27
S06-traits/is-readonly.rakudo.moar.................Potential difficulties:
    useless use of 'is readonly' on $!attr
    at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S06-traits/is-readonly.rakudo.moar:18
    ------> [32m        has $!attr is readonly[33m⏏[31m = 71356;[0m
   2    0    1    0    3
     1 todo   : readonly attributes
S06-traits/is-rw.t.................................   7    0    0    0    7
S06-traits/misc.rakudo.moar........................# can't modify parameter, constant by default
# can't modify constant parameter, constant by default
# is rw dies in signature binding if passed a literal Int
# is rw dies in signature binding if passed an itemized array
  18    0    2    0   20
     2 todo   : is readonly does not override
S06-traits/native-is-copy.t........................  15    0    0    0   15
S06-traits/native-is-rw.t..........................# Assignment to sub native read-only arg caught at compile time
# Assignment to method native read-only arg caught at compile time
# Assignment to pointy block native read-only arg caught at compile time
  48    0    0    0   48
S06-traits/precedence.rakudo.moar..................  14    0    1    0   15
     1 todo   : changing precedence of already declared op
S06-traits/slurpy-is-rw.t..........................   3    0    0    0    3
                                                   pass fail todo skip plan
S07-hyperrace/hyper.rakudo.moar....................# cannot have a batch of 0 for hyper
# cannot have a degree of -1 for hyper
# cannot have a degree of 0 for hyper
   8    0    2    0   10
     2 todo   : hyper and race cause lists to become empty RT \#126597
S07-hyperrace/race.rakudo.moar.....................# cannot have a batch of 0 for hyper
# cannot have a degree of -1 for hyper
# cannot have a degree of 0 for hyper
   8    0    2    0   10
     2 todo   : hyper and race cause lists to become empty RT \#126597
S07-slip/slip.t....................................  22    0    0    0   22
                                                   pass fail todo skip plan
S09-autovivification/autoincrement.t...............   7    0    0    0    7
S09-autovivification/autovivification.rakudo.moar..Use of uninitialized value of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at t/spec/S09-autovivification/autovivification.rakudo.moar line 59
Use of uninitialized value of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at t/spec/S09-autovivification/autovivification.rakudo.moar line 59
  39    0    4    1   44
     1 skipped: isa multi variant
     2 todo   : autoviv, binding
     2 todo   : unknown
S09-hashes/objecthash.rakudo.moar..................Potential difficulties:
    Redeclaration of symbol %h
    at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S09-hashes/objecthash.rakudo.moar:89
    ------> [32m    is (my %h{Any}[33m⏏[31m).list.perl, '()', 'empty object hash li[0m
  32    0    2    2   36
     2 skipped: oh noes, it dies
     2 todo   : oh noes, it dies
S09-multidim/XX-POS-on-dimensioned.t...............# did we throws-like X::NotEnoughDimensions?
# did we throws-like X::NotEnoughDimensions?
# did we throws-like X::NotEnoughDimensions?
# did we throws-like X::NotEnoughDimensions?
  69    0    0    0   69
S09-multidim/XX-POS-on-undimensioned.t.............  16    0    0    0   16
S09-multidim/assign.t..............................# Cannot assign flat list of items
# Cannot assign shaped to shaped if shapes mis-match (1)
# Cannot assign shaped to shaped if shapes mis-match (2)
# Cannot assign shaped to shaped if shapes mis-match (3)
# Cannot assign flat list of items (native)
# Cannot assign native shaped to native shaped if shapes mis-match (1)
# Cannot assign native shaped to native shaped if shapes mis-match (2)
# Cannot assign native shaped to native shaped if shapes mis-match (3)
  54    0    0    0   54
S09-multidim/decl.t................................  39    0    0    0   39
S09-multidim/indexing.t............................# did we throws-like X::NotEnoughDimensions?
# did we throws-like X::NotEnoughDimensions?
  31    0    0    0   31
S09-multidim/methods.t.............................# did we throws-like X::IllegalOnFixedDimensionArray?
# did we throws-like X::IllegalOnFixedDimensionArray?
# did we throws-like X::IllegalOnFixedDimensionArray?
# did we throws-like X::IllegalOnFixedDimensionArray?
# did we throws-like X::IllegalOnFixedDimensionArray?
# did we throws-like X::IllegalOnFixedDimensionArray?
# did we throws-like X::IllegalOnFixedDimensionArray?
# did we throws-like X::IllegalOnFixedDimensionArray?
# did we throws-like X::IllegalOnFixedDimensionArray?
# did we throws-like X::IllegalOnFixedDimensionArray?
# did we throws-like X::IllegalOnFixedDimensionArray?
# did we throws-like X::IllegalOnFixedDimensionArray?
# did we throws-like X::IllegalOnFixedDimensionArray?
# did we throws-like X::IllegalOnFixedDimensionArray?
# did we throws-like X::IllegalOnFixedDimensionArray?
# did we throws-like X::IllegalOnFixedDimensionArray?
# did we throws-like X::IllegalOnFixedDimensionArray?
# did we throws-like X::IllegalOnFixedDimensionArray?
# did we throws-like X::IllegalOnFixedDimensionArray?
# did we throws-like X::IllegalOnFixedDimensionArray?
  82    0    0    0   82
S09-multidim/subs.t................................WARNINGS for /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S09-multidim/subs.t:
Useless use of @arr in sink context (lines 13, 58)
# did we throws-like X::IllegalOnFixedDimensionArray?
# did we throws-like X::IllegalOnFixedDimensionArray?
# did we throws-like X::IllegalOnFixedDimensionArray?
# did we throws-like X::IllegalOnFixedDimensionArray?
# did we throws-like X::IllegalOnFixedDimensionArray?
# did we throws-like X::IllegalOnFixedDimensionArray?
# did we throws-like X::IllegalOnFixedDimensionArray?
# did we throws-like X::IllegalOnFixedDimensionArray?
# did we throws-like X::IllegalOnFixedDimensionArray?
# did we throws-like X::IllegalOnFixedDimensionArray?
# did we throws-like X::IllegalOnFixedDimensionArray?
# did we throws-like X::IllegalOnFixedDimensionArray?
# did we throws-like X::IllegalOnFixedDimensionArray?
# did we throws-like X::IllegalOnFixedDimensionArray?
# did we throws-like X::IllegalOnFixedDimensionArray?
# did we throws-like X::IllegalOnFixedDimensionArray?
# did we throws-like X::IllegalOnFixedDimensionArray?
# did we throws-like X::IllegalOnFixedDimensionArray?
  46    0    0    0   46
S09-subscript/multidim-assignment.t................  10    0    0    0   10
S09-subscript/slice.rakudo.moar....................  27    0    0    4   31
     2 skipped: RT #120383
     2 skipped: RT #61844
S09-typed-arrays/arrays.rakudo.moar................# typed arrays do check type during list assignment
# typed arrays do check type during list assignment in sink
# assignment checks for types
# pushed value to typed array (using "subset") is type checked
Use of uninitialized value of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
  76    0    2    3   81
     1 skipped: initialization RT #124676
     1 skipped: need parameterized Lists
     1 skipped: type on our-variables RT #124677
     2 todo   : nested typechecks are borked
S09-typed-arrays/hashes.t..........................  37    0    0    0   37
S09-typed-arrays/native-decl.t.....................  10    0    0    0   10
S09-typed-arrays/native-int.rakudo.moar............# Trying to pop an empty int array dies
# Trying to shift an empty int array dies
# Cannot push non-int/Int to int array
# Cannot push non-int/Int to int array
# Cannot push non-int/Int to int array
# Cannot push non-int/Int to int array (multiple push)
# Cannot unshift non-int/Int to int array
# Cannot unshift non-int/Int to int array (multiple unshift)
# List-assigning incompatible untyped array to int array dies
# Testing int8 array
# Trying to pop an empty int8 array dies
# Trying to shift an empty int8 array dies
# Cannot push non-int/Int to int8 array
# Cannot push non-int/Int to int8 array
# Cannot push non-int/Int to int8 array
# Cannot push non-int/Int to int8 array (multiple push)
# Cannot unshift non-int/Int to int8 array
# Cannot unshift non-int/Int to int8 array (multiple unshift)
# List-assigning incompatible untyped array to int8 array dies
# Testing int16 array
# Trying to pop an empty int16 array dies
# Trying to shift an empty int16 array dies
# Cannot push non-int/Int to int16 array
# Cannot push non-int/Int to int16 array
# Cannot push non-int/Int to int16 array
# Cannot push non-int/Int to int16 array (multiple push)
# Cannot unshift non-int/Int to int16 array
# Cannot unshift non-int/Int to int16 array (multiple unshift)
# List-assigning incompatible untyped array to int16 array dies
# Testing int32 array
# Trying to pop an empty int32 array dies
# Trying to shift an empty int32 array dies
# Cannot push non-int/Int to int32 array
# Cannot push non-int/Int to int32 array
# Cannot push non-int/Int to int32 array
# Cannot push non-int/Int to int32 array (multiple push)
# Cannot unshift non-int/Int to int32 array
# Cannot unshift non-int/Int to int32 array (multiple unshift)
# List-assigning incompatible untyped array to int32 array dies
# Testing int64 array
# Trying to pop an empty int64 array dies
# Trying to shift an empty int64 array dies
# Cannot push non-int/Int to int64 array
# Cannot push non-int/Int to int64 array
# Cannot push non-int/Int to int64 array
# Cannot push non-int/Int to int64 array (multiple push)
# Cannot unshift non-int/Int to int64 array
# Cannot unshift non-int/Int to int64 array (multiple unshift)
# List-assigning incompatible untyped array to int64 array dies
# Testing uint array
# Trying to pop an empty uint array dies
# Trying to shift an empty uint array dies
# Cannot push non-int/Int to uint array
# Cannot push non-int/Int to uint array
# Cannot push non-int/Int to uint array
# Cannot push non-int/Int to uint array (multiple push)
# Cannot unshift non-int/Int to uint array
# Cannot unshift non-int/Int to uint array (multiple unshift)
# List-assigning incompatible untyped array to uint array dies
# Testing uint8 array
# Trying to pop an empty uint8 array dies
# Trying to shift an empty uint8 array dies
# Cannot push non-int/Int to uint8 array
# Cannot push non-int/Int to uint8 array
# Cannot push non-int/Int to uint8 array
# Cannot push non-int/Int to uint8 array (multiple push)
# Cannot unshift non-int/Int to uint8 array
# Cannot unshift non-int/Int to uint8 array (multiple unshift)
# List-assigning incompatible untyped array to uint8 array dies
# Testing uint16 array
# Trying to pop an empty uint16 array dies
# Trying to shift an empty uint16 array dies
# Cannot push non-int/Int to uint16 array
# Cannot push non-int/Int to uint16 array
# Cannot push non-int/Int to uint16 array
# Cannot push non-int/Int to uint16 array (multiple push)
# Cannot unshift non-int/Int to uint16 array
# Cannot unshift non-int/Int to uint16 array (multiple unshift)
# List-assigning incompatible untyped array to uint16 array dies
# Testing uint32 array
# Trying to pop an empty uint32 array dies
# Trying to shift an empty uint32 array dies
# Cannot push non-int/Int to uint32 array
# Cannot push non-int/Int to uint32 array
# Cannot push non-int/Int to uint32 array
# Cannot push non-int/Int to uint32 array (multiple push)
# Cannot unshift non-int/Int to uint32 array
# Cannot unshift non-int/Int to uint32 array (multiple unshift)
# List-assigning incompatible untyped array to uint32 array dies
# Testing uint64 array
# Trying to pop an empty uint64 array dies
# Trying to shift an empty uint64 array dies
# Cannot push non-int/Int to uint64 array
# Cannot push non-int/Int to uint64 array
# Cannot push non-int/Int to uint64 array
# Cannot push non-int/Int to uint64 array (multiple push)
# Cannot unshift non-int/Int to uint64 array
# Cannot unshift non-int/Int to uint64 array (multiple unshift)
# List-assigning incompatible untyped array to uint64 array dies
# Testing uint array for unsigned features
# Testing uint16 array for unsigned features
# Testing uint32 array for unsigned features
# Testing uint64 array for unsigned features
1368    0    2    0 1370
     2 todo   : highest bit length stays negative, RT \#124088
S09-typed-arrays/native-num.rakudo.moar............# Trying to pop an empty num array dies
# Trying to shift an empty num array dies
# Cannot push non-int/Int to num array
# Cannot push non-int/Int to num array
# Trying to initialize a num array with a right infinite list
# Trying to initialize a num array with a left infinite list
# Cannot push non-num/Num to num array
# Cannot push non-num/Num to num array (multiple push)
# Cannot unshift non-num/Num to num array
# Cannot unshift non-num/Num to num array (multiple unshift)
# List-assigning incompatible untyped array to num array dies
# Testing num32 array
# Trying to pop an empty num32 array dies
# Trying to shift an empty num32 array dies
# Cannot push non-int/Int to num32 array
# Cannot push non-int/Int to num32 array
# Trying to initialize a num32 array with a right infinite list
# Trying to initialize a num32 array with a left infinite list
# Cannot push non-num/Num to num32 array
# Cannot push non-num/Num to num32 array (multiple push)
# Cannot unshift non-num/Num to num32 array
# Cannot unshift non-num/Num to num32 array (multiple unshift)
# List-assigning incompatible untyped array to num32 array dies
# Testing num64 array
# Trying to pop an empty num64 array dies
# Trying to shift an empty num64 array dies
# Cannot push non-int/Int to num64 array
# Cannot push non-int/Int to num64 array
# Trying to initialize a num64 array with a right infinite list
# Trying to initialize a num64 array with a left infinite list
# Cannot push non-num/Num to num64 array
# Cannot push non-num/Num to num64 array (multiple push)
# Cannot unshift non-num/Num to num64 array
# Cannot unshift non-num/Num to num64 array (multiple unshift)
# List-assigning incompatible untyped array to num64 array dies
 357    0    0   27  384
     3 skipped: borkedness with num and iteration RT #124678
     6 skipped: cannot approx test Parcels
    18 skipped: nativeint.list loops on itself
S09-typed-arrays/native.t..........................   3    0    0    0    3
                                                   pass fail todo skip plan
S10-packages/basic.rakudo.moar.....................# Non-existent sub through package
# Non-existent method with package
# sub redefined in class dies
# sub redefined in package dies
# sub redefined in module dies
# token redefined in grammar dies
# method redefined in class dies
# package Foo; is indicator for Perl 5 code
# die if module "is" a nonexistent
# Too late for semicolon form
  80    0    0    1   81
     1 skipped: RT #59484
S10-packages/joined-namespaces.t...................   3    0    0    0    3
S10-packages/precompilation.rakudo.moar............  36    0    2    1   39
     1 skipped: RT #122896
     1 todo   : RT \#123276
     1 todo   : no 6model parametrics interning yet
S10-packages/use-with-class.t......................   9    0    0    0    9
                                                   pass fail todo skip plan
S11-compunit/compunit-dependencyspecification.t....# True
   6    0    0    0    6
S11-compunit/compunit-repository.t.................# did we throws-like X::AdHoc?
# did we throws-like X::AdHoc?
# did we throws-like X::AdHoc?
# did we throws-like X::AdHoc?
# did we throws-like X::AdHoc?
# did we throws-like X::AdHoc?
   9    0    0    0    9
S11-compunit/rt126904.t............................   1    0    0    0    1
S11-modules/export.rakudo.moar.....................# adequate error message when multi sub exported out of a module fails to bind to an argument that happens to be a block
  34    0    2    5   41
     2 skipped: export issue
     3 skipped: export issue RT #125086
     2 todo   : export issue RT \#125086
S11-modules/import-multi.rakudo.moar...............    
# Failed test ''proto sub Dfoo( Mu ) { * }' died'
# at t/spec/S11-modules/import-multi.rakudo.moar line 52
    # Looks like you failed 1 test of 3
    
# Failed test ''proto sub Ffoo( Mu ) { * }' died'
# at t/spec/S11-modules/import-multi.rakudo.moar line 82
    # Looks like you failed 1 test of 3
  14    0    2    1   17
     1 skipped: A symbol "&Gfoo" has already been exported RT #125089
     1 todo   : huh?
     1 todo   : it just dies, can't check using throws-like
S11-modules/import-tag.t...........................  12    0    0    0   12
S11-modules/import.rakudo.moar.....................WARNINGS for /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S11-modules/import.rakudo.moar:
Useless use of ":B" in sink context (line 67)
Useless use of ":ALL" in sink context (line 71)
# did we throws-like X::Comp::Trait::Scope?
  13    0    0    4   17
     2 skipped: import plus inline module RT #125087
     2 skipped: import plus inline module RT #125088
S11-modules/importing.t............................# die while trying to import a non-existent export tag
  16    0    0    0   16
S11-modules/lexical.t..............................   2    0    0    0    2
S11-modules/need.t.................................# "need" did not import the default export list
   2    0    0    0    2
S11-modules/nested.t...............................   6    0    0    0    6
S11-modules/require.rakudo.moar....................  14    0    2    1   17
     1 skipped: Trying to import from 'InnerModule', but the following symbols are missing: quux RT #118407
     1 todo   : creation of stub package symbol NYI RT \#125083
     1 todo   : variable form plus imports NYI RT \#125084
S11-repository/curli-install.t.....................# cannot reinstall the very same distribution
Use of uninitialized value % of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block <unit> at t/spec/S11-repository/curli-install.t line 38
  18    0    0    0   18
                                                   pass fail todo skip plan
S12-attributes/class.t.............................# cannot declare attribute inside of an EVAL in class
  23    0    0    0   23
S12-attributes/clone.t.............................  41    0    0    0   41
S12-attributes/defaults.t..........................  34    0    0    0   34
S12-attributes/delegation.t........................  65    0    0    0   65
S12-attributes/inheritance.t.......................# Compile error for subclass to access private attribute of parent
# rt 61500
   7    0    0    0    7
S12-attributes/instance.rakudo.moar................Use of uninitialized value %!h of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value %!h of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value %!h of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value %!h of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value %!h of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in code  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 139
Use of uninitialized value %!h of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in code  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 139
Use of uninitialized value %!h of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in code  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 139
Use of uninitialized value %!h of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in code  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 139
Use of uninitialized value %!h of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 146
Use of uninitialized value %!h of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 146
Use of uninitialized value %!h of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 146
Use of uninitialized value %!h of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 146
# cannot have two attributes with same accessor name
# cannot sneak in access to private attribute through the backdoor
# did we throws-like X::Comp::Trait::Unknown?
# did we throws-like X::Comp::Trait::Unknown?
 143    0    6    1  150
     1 skipped: dubious test - the initializer becomes a submethod here, implying a scope RT #124908
     1 todo   : huh?
     1 todo   : over-eager auto-vivification bugs
     2 todo   : ro array/hash with accessor
     2 todo   : ro on list attributes
S12-attributes/mutators.rakudo.moar................   5    0    0    5   10
     5 skipped: RT #126198
S12-attributes/native.t............................# did we throws-like X::Syntax::NoSelf?
  43    0    0    0   43
S12-attributes/recursive.t.........................  23    0    0    0   23
S12-attributes/smiley.t............................# can Int:U take an Int:D
# can Int:D be on its own
# can Int:D take an Int:U
# with :_, can Int:U take an Int:D
# with :_, can Int:D be on its own
# with :_, can Int:D take an Int:U
# with :U, can Int   take an Int:D
# with :U, can Int:U take an Int:D
# with :U, can Int:D be on its own
# with :U, can Int:D take an Int:U
# with :D, can Int   be on its own
# with :D, can Int   take an Int:U
# with :D, can Int:U take an Int:D
# with :D, can Int:D be on its own
# with :D, can Int:D take an Int:U
# does Int:foo fail
# does use attributes fail
# does no attributes fail
# does use attributes "bar" fail
# does use attributes :U, :D fail
# does use attributes :foo fail
  54    0    0    0   54
S12-attributes/undeclared.t........................# Test Undeclared private attribute assignment from a class
# Test Undeclared private attribute assignment from a role
# Test Undeclared private attribute access from a class
# Test Undeclared private attribute access from a role
# Test Undeclared private attribute binding from a role
# Test Undeclared private attribute binding from a class
# did we throws-like X::Attribute::NoPackage?
  11    0    0    0   11
S12-class/anonymous.rakudo.moar....................# anon class is actually anon
  17    0    1    0   18
     1 todo   : Anonymous class stringification (?) RT \#125045
S12-class/attributes-required.t....................# required attributes are checked before defaults run
   5    0    0    0    5
S12-class/attributes.t.............................# no attr access for sub inside class
# typed array attribute (2)
  36    0    0    0   36
S12-class/augment-supersede.rakudo.moar............# cannot override a method by monkey-typing
  11    0    0    2   13
     2 skipped: redeclaration of symbol Bar RT #125046
S12-class/basic.t..................................# die on non-existing class names
# call to method in undeclared A::B dies after class A::C defined
# self is not writable
# RT124017 - can't declare Foo:D
# RT124017 - can't declare Foo:no-such-adverb
  43    0    0    0   43
S12-class/declaration-order.t......................# derived before base: dies
   2    0    0    0    2
S12-class/extending-arrays.t.......................  11    0    0    0   11
S12-class/inheritance-class-methods.t..............   5    0    0    0    5
S12-class/inheritance.t............................# dies: class D is ::C {}
# Get unkown parent error even when class is called X
  40    0    0    0   40
S12-class/instantiate.rakudo.moar..................   6    0    1    0    7
     1 todo   : error reporting
S12-class/interface-consistency.t..................  10    0    0    0   10
S12-class/lexical.t................................# scope is correctly restricted
  14    0    0    0   14
S12-class/literal.t................................   2    0    0    0    2
S12-class/magical-vars.t...........................# there is no self outside of a method
  18    0    0    0   18
S12-class/mro.t....................................# Cannot do multi inheritance that causes inconsistent MRO
   4    0    0    0    4
S12-class/namespaced.t.............................# class A::B not available outside of class as B
  13    0    0    0   13
S12-class/open.t...................................# can't pass :D when augmenting class
# can't pass :auth when augmenting class
  10    0    0    0   10
S12-class/parent_attributes.rakudo.moar............   1    0    0    2    3
     2 skipped: initialization of parent attributes RT #125129
S12-class/rw.t.....................................   5    0    0    0    5
S12-class/self-inheritance.t.......................# Testing `class A is A`
   2    0    0    0    2
S12-class/stubs.rakudo.moar........................# stubbing a class but not providing a definition dies
# did we throws-like X::Package::Stubbed?
# did we throws-like X::Inheritance::NotComposed?
   9    0    1    0   10
     1 todo   : nom regression RT \#125044
S12-class/type-object.t............................Use of uninitialized value of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block <unit> at t/spec/S12-class/type-object.t line 6
Use of uninitialized value of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block <unit> at t/spec/S12-class/type-object.t line 7
   6    0    0    0    6
S12-coercion/coercion-types.rakudo.moar............# coercion type still type-checks
   6    0    1   11   18
     3 skipped: NYI RT #124840
     2 skipped: NYI RT #124841
     1 skipped: dies
     5 skipped: dies RT #124839 / RT#123770
     1 todo   : missing checks
S12-construction/BUILD.rakudo.moar.................   9    0    1    0   10
     1 todo   : method BUILD should warn RT \#124642
S12-construction/autopairs.t.......................   4    0    0    0    4
S12-construction/construction.t....................  18    0    0    0   18
S12-construction/named-params-in-BUILD.t...........   3    0    0    0    3
S12-construction/new.rakudo.moar...................  16    0    1    9   26
     9 skipped: parent attributes in initialization RT #76490
     1 todo   : nested package handling does't quite get this one right
S12-enums/anonymous.t..............................  10    0    0    0   10
S12-enums/as-role.t................................   9    0    0    0    9
S12-enums/basic.rakudo.moar........................Potential difficulties:
    Redeclaration of symbol b and c
    at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S12-enums/basic.rakudo.moar:126
    ------> [32m    enum S2 <b c d>[33m⏏[31m;[0m
# did we throws-like X::PoisonedAlias?
  32    0    0    5   37
     5 skipped: Cannot convert string to number RT #124832
S12-enums/misc.t...................................WARNINGS for /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S12-enums/misc.t:
Useless use of @stuff in sink context (line 70)
  17    0    0    0   17
S12-enums/non-int.rakudo.moar......................# mixed type enums are forbidden
   5    0    1    0    6
     1 todo   : NYI RT \#124833
S12-enums/pseudo-functional.t......................  11    0    0    0   11
S12-enums/thorough.rakudo.moar.....................# accessing non-value of enum dies proper-like
    
# Failed test ''enum rt_101900 < a b >; class A { }; say A but rt_101900::a' died'
# at t/spec/S12-enums/thorough.rakudo.moar line 116
    # Looks like you failed 1 test of 2
  15    0    1   43   59
    14 skipped: NYI RT #124829
    15 skipped: does &day::("Tue") RT #124831
    14 skipped: does day::Tue RT #124830
     1 todo   : RT \#101900
S12-introspection/WHAT.rakudo.moar.................  32    0    3    2   37
     2 skipped: Foo[Int].new on scalars fails
     1 todo   : Foo[Int,Str].new on scalars fails
     2 todo   : Foo[Int].new on scalars fails
S12-introspection/attributes.rakudo.moar...........  25    0    0    5   30
     5 skipped: :tree NYI for .^attributes RT #125014
S12-introspection/can.t............................Method object coerced to string (please use .gist or .perl to do that)  in block <unit> at t/spec/S12-introspection/can.t line 102
  29    0    0    0   29
S12-introspection/definite.t.......................   7    0    0    0    7
S12-introspection/meta-class.t.....................# did we throws-like X::Syntax::Argument::MOPMacro?
  15    0    0    0   15
S12-introspection/methods.rakudo.moar..............Method object coerced to string (please use .gist or .perl to do that)  in block  at t/spec/S12-introspection/methods.rakudo.moar line 163
Method object coerced to string (please use .gist or .perl to do that)  in block  at t/spec/S12-introspection/methods.rakudo.moar line 163
Method object coerced to string (please use .gist or .perl to do that)  in block  at t/spec/S12-introspection/methods.rakudo.moar line 163
  45    0    0   12   57
     8 skipped: nom regression RT #125011
     2 skipped: nom regression RT #125012
     2 skipped: nom regression RT #125013
S12-introspection/parents.t........................  59    0    0    0   59
S12-introspection/roles.t..........................  15    0    0    0   15
S12-introspection/walk.t...........................  11    0    0    0   11
S12-meta/exporthow.rakudo.moar.....................# did we throws-like X::EXPORTHOW::NothingToSupersede?
# did we throws-like X::EXPORTHOW::Conflict?
# did we throws-like X::EXPORTHOW::Conflict?
   9    0    0    2   11
     2 skipped: RT #126759
S12-meta/grammarhow.t..............................   1    0    0    0    1
S12-meta/primitives.t..............................  17    0    0    0   17
S12-methods/accessors.t............................   8    0    0    0    8
S12-methods/attribute-params.t.....................# did we throws-like X::Syntax::VirtualCall?
# did we throws-like X::Syntax::NoSelf?
# did we throws-like X::Syntax::NoSelf?
  16    0    0    0   16
S12-methods/calling_sets.t.........................# .WHAT is a macro and cannoted be .*ed
  38    0    0    0   38
S12-methods/calling_syntax.t.......................# indirect method call using quotes, no parens
# indirect method call, no parens
  11    0    0    0   11
S12-methods/chaining.t.............................# Perl 5 -> is dead (class constructor)
# Perl 5 -> is dead (method call)
  17    0    0    0   17
S12-methods/class-and-instance.t...................   8    0    0    0    8
S12-methods/default-trait.t........................   6    0    0    0    6
S12-methods/defer-call.t...........................  20    0    0    0   20
S12-methods/defer-next.t...........................  23    0    0    0   23
S12-methods/delegation.t...........................   7    0    0    0    7
S12-methods/fallback.t.............................  13    0    0    0   13
S12-methods/how.t..................................# Cannot assign to .HOW
   3    0    0    0    3
S12-methods/indirect_notation.rakudo.moar..........# Indirect object notation and indirect method calls cannot be combined
  17    0    0   21   38
    15 skipped: .*, .+ and .? with @foo RT #124845
     6 skipped: .@foo not yet working RT #124844
S12-methods/instance.t.............................Potential difficulties:
    useless use of 'is rw' on @!something
    at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S12-methods/instance.t:108
    ------> [32m        has @something is rw[33m⏏[31m;[0m
  39    0    0    0   39
S12-methods/lastcall.t.............................   7    0    0    0    7
S12-methods/lvalue.t...............................  16    0    0    0   16
S12-methods/method-vs-sub.t........................   5    0    0    0    5
S12-methods/multi.rakudo.moar......................Method object coerced to string (please use .gist or .perl to do that)  in block  at t/spec/S12-methods/multi.rakudo.moar line 121
# did we throws-like Exception?
  27    0    1    3   31
     3 skipped: unknown bug RT #124848
     1 todo   : RT \#66006
S12-methods/parallel-dispatch.rakudo.moar..........  33    0    4    0   37
     4 todo   : is-deeply does not think map results are the same as list on LHS
S12-methods/private.t..............................# did we throws-like X::Method::NotFound?
# did we throws-like X::Method::Private::Permission?
# did we throws-like X::Method::NotFound?
  13    0    0    0   13
S12-methods/qualified.t............................   2    0    0    0    2
S12-methods/submethods.rakudo.moar.................  21    0    0    6   27
     2 skipped: outer lexicals in roles RT #124850
     4 skipped: roles and submethods RT #124851
S12-methods/syntax.rakudo.moar.....................# .doit () illegal
  11    0    0    3   14
     3 skipped: switch-from-paren-to-listop form RT #124852
S12-methods/topic.t................................   2    0    0    0    2
S12-methods/trusts.t...............................# trust relation does not extend to child classes of the trustee
   4    0    0    0    4
S12-methods/typed-attributes.t.....................   7    0    0    0    7
S12-methods/what.t.................................Use of uninitialized value of type Match in numeric context  in block  at t/spec/S12-methods/what.t line 55
Use of uninitialized value of type Match in numeric context  in block  at t/spec/S12-methods/what.t line 57
  33    0    0    0   33
S12-subset/multi-dispatch.t........................   6    0    0    0    6
S12-subset/subtypes.t..............................# where /regex/ works (negative)
# Even $x can not be ++ed
# Even $x can not be --ed
# code dies with right exception
  79    0    0    0   79
                                                   pass fail todo skip plan
S13-overloading/metaoperators.t....................  11    0    0    0   11
S13-overloading/operators.t........................   6    0    0    0    6
S13-overloading/typecasting-long.t.................# RT #112642 ($:, :$) -> (:U, $) arity check
# RT #112642 .($:) -> (:U, $) arity check
# RT #112642 .($:, :$) -> (:U, $) arity check
# RT #112642 ($: $, $, $) -> (:U, $) arity check
# RT #112642 .($: $, $, $) -> (:U, $) arity check
  32    0    0    0   32
S13-type-casting/methods.t.........................Use of uninitialized value of type Int(Any) in numeric context  in block  at t/spec/S13-type-casting/methods.t line 36
  13    0    0    0   13
                                                   pass fail todo skip plan
S14-roles/anonymous.t..............................  13    0    0    0   13
S14-roles/attributes.t.............................# Roles with conflicing attributes
# Same name, same type will also conflicts
   7    0    0    0    7
S14-roles/basic.rakudo.moar........................# smartmatch against non-existent type dies
# "but" with non-existent role dies
# did we throws-like X::Redeclaration?
# did we throws-like X::Redeclaration?
# undeclared type in signature in role results in X::Parameter::InvalidType
  48    0    0    3   51
     3 skipped: RT #67768
S14-roles/bool.t...................................   3    0    0    0    3
S14-roles/composition.rakudo.moar..................# literal handles from role is composed (2)
  47    0    0    2   49
     2 skipped: diamond composition RT #124749
S14-roles/conflicts.t..............................# private roles can cause conflicts too
  11    0    0    0   11
S14-roles/crony.t..................................   4    0    0    0    4
S14-roles/instantiation.t..........................  19    0    0    0   19
S14-roles/lexical.t................................# scope is correctly restricted
   9    0    0    0    9
S14-roles/mixin.t..................................WARNINGS for /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S14-roles/mixin.t:
Useless use of constant integer 1 in sink context (line 133)
# RT #77184
Use of uninitialized value of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in any throw at src/Perl6/World.nqp line 3740
# did we throws-like X::Role::Parametric::NoSuchCandidate?
Use of uninitialized value of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in any try_select at gen/moar/m-Metamodel.nqp line 2592
# True but (1, 1) gets Int conflict to resolve due to generating two Int methods
  48    0    0    0   48
S14-roles/namespaced.t.............................# did we throws-like X::Declaration::OurScopeInRole?
# did we throws-like X::Declaration::OurScopeInRole?
# did we throws-like X::Declaration::OurScopeInRole?
# did we throws-like X::Declaration::OurScopeInRole?
# did we throws-like X::Declaration::OurScopeInRole?
# did we throws-like X::Declaration::OurScopeInRole?
# did we throws-like X::Declaration::OurScopeInRole?
# did we throws-like X::Declaration::OurScopeInRole?
  11    0    0    0   11
S14-roles/parameter-subtyping.t....................  22    0    0    0   22
S14-roles/parameterized-basic.t....................# Can't compose without matching role multi
# MD with generics at class composition times fails (wrong arity)
# cannot put question mark on a type constraint
  36    0    0    0   36
S14-roles/parameterized-mixin.rakudo.moar..........  26    0    4    0   30
     4 todo   : .does with parametric roles RT \#124746
S14-roles/parameterized-type.t.....................# role with undefined type as parameter dies
# error message mentions expected type when a typed array in a signature fails to bind
  32    0    0    0   32
S14-roles/stubs.t..................................# did we throws-like X::Role::Parametric::NoSuchCandidate?
Use of uninitialized value of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in any try_select at gen/moar/m-Metamodel.nqp line 2592
Use of uninitialized value of type R in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at t/spec/S14-roles/stubs.t line 66
Use of uninitialized value of type R in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at t/spec/S14-roles/stubs.t line 66
Use of uninitialized value of type R in numeric context  in block  at t/spec/S14-roles/stubs.t line 66
Use of uninitialized value of type R in numeric context  in block  at t/spec/S14-roles/stubs.t line 66
  28    0    0    0   28
S14-roles/submethods.t.............................   4    0    0    0    4
S14-traits/attributes.t............................   8    0    0    0    8
S14-traits/routines.rakudo.moar....................# Applying traits to submethods retains submethod semantics
  15    0    1    0   16
     1 todo   : trait mod / .wrap interaction
                                                   pass fail todo skip plan
S15-literals/identifiers.t.........................# Doesn't allow non-ASCII digits at start of identifier
# Combining marks not allowed as first character of identifier
   7    0    0    0    7
S15-literals/numbers.t.............................# Numerals in category 'Nl' die when attempt is made to use as digit
# Numerals in category 'No' die when attempt is made to use as digit
# Numerals in category 'No' can't be used in binary literals
# Numerals in category 'Nl' can't be used in binary literals
# Numerals in category 'No' can't be used in octal literals
# Numerals in category 'Nl' can't be used in octal literals
# Numerals in category 'No' can't be used in hexadecimal literals
# Numerals in category 'Nl' can't be used in hexadecimal literals
# Can't use characters without true Hex_Digit properties in hexadecimal literals
# Numerals in category 'No' can't be used in hexadecimal literals
# Numerals in category 'Nl' can't be used in hexadecimal literals
# Scripts without Hex_Digit characters not allowed in general radix numbers
# Nl numerals are not allowed in general radix numbers
# No numerals are not allowed in general radix numbers
  46    0    0    0   46
S15-nfg/case-change.t..............................  52    0    0    0   52
S15-nfg/cgj.t......................................   8    0    0    0    8
S15-nfg/concatenation.t............................   8    0    0    0    8
S15-nfg/crlf-encoding.t............................  32    0    0    0   32
S15-nfg/from-buf.t.................................   6    0    0    0    6
S15-nfg/from-file.rakudo.moar......................   2    0    0    2    4
     1 skipped: writing utf16 NYI RT #124910
     1 skipped: writing utf16 NYI RT #124911
S15-nfg/grapheme-break.t........................... 402    0    0    0  402
S15-nfg/long-uni.t.................................  24    0    0    0   24
S15-nfg/many-combiners.t...........................   5    0    0    0    5
S15-nfg/many-threads.t.............................   4    0    0    0    4
S15-nfg/mass-chars.t............................... 500    0    0    0  500
S15-nfg/mass-equality.t............................ 500    0    0    0  500
S15-nfg/mass-roundtrip-nfc.t....................... 500    0    0    0  500
S15-nfg/mass-roundtrip-nfd.t....................... 100    0    0    0  100
S15-nfg/mass-roundtrip-nfkc.t...................... 100    0    0    0  100
S15-nfg/mass-roundtrip-nfkd.t...................... 100    0    0    0  100
S15-nfg/regex.rakudo.moar..........................  11    0    1    0   12
     1 todo   : charrange bugginess with synthetics
S15-normalization/nfc-0.t..........................2000    0    0    0 2000
S15-normalization/nfc-1.t..........................2000    0    0    0 2000
S15-normalization/nfc-2.t..........................2000    0    0    0 2000
S15-normalization/nfc-3.t..........................2000    0    0    0 2000
S15-normalization/nfc-4.t..........................2000    0    0    0 2000
S15-normalization/nfc-5.t..........................2000    0    0    0 2000
S15-normalization/nfc-6.t..........................2000    0    0    0 2000
S15-normalization/nfc-7.t..........................2000    0    0    0 2000
S15-normalization/nfc-8.t..........................2000    0    0    0 2000
S15-normalization/nfc-9.t.......................... 581    0    0    0  581
S15-normalization/nfc-sanity.t..................... 500    0    0    0  500
S15-normalization/nfd-0.t..........................2000    0    0    0 2000
S15-normalization/nfd-1.t..........................2000    0    0    0 2000
S15-normalization/nfd-2.t..........................2000    0    0    0 2000
S15-normalization/nfd-3.t..........................2000    0    0    0 2000
S15-normalization/nfd-4.t..........................2000    0    0    0 2000
S15-normalization/nfd-5.t..........................2000    0    0    0 2000
S15-normalization/nfd-6.t..........................2000    0    0    0 2000
S15-normalization/nfd-7.t..........................2000    0    0    0 2000
S15-normalization/nfd-8.t..........................2000    0    0    0 2000
S15-normalization/nfd-9.t.......................... 581    0    0    0  581
S15-normalization/nfd-sanity.t..................... 500    0    0    0  500
S15-normalization/nfkc-0.t.........................2000    0    0    0 2000
S15-normalization/nfkc-1.t.........................2000    0    0    0 2000
S15-normalization/nfkc-2.t.........................2000    0    0    0 2000
S15-normalization/nfkc-3.t.........................2000    0    0    0 2000
S15-normalization/nfkc-4.t.........................2000    0    0    0 2000
S15-normalization/nfkc-5.t.........................2000    0    0    0 2000
S15-normalization/nfkc-6.t.........................2000    0    0    0 2000
S15-normalization/nfkc-7.t.........................2000    0    0    0 2000
S15-normalization/nfkc-8.t.........................2000    0    0    0 2000
S15-normalization/nfkc-9.t......................... 581    0    0    0  581
S15-normalization/nfkc-sanity.t.................... 500    0    0    0  500
S15-normalization/nfkd-0.t.........................2000    0    0    0 2000
S15-normalization/nfkd-1.t.........................2000    0    0    0 2000
S15-normalization/nfkd-2.t.........................2000    0    0    0 2000
S15-normalization/nfkd-3.t.........................2000    0    0    0 2000
S15-normalization/nfkd-4.t.........................2000    0    0    0 2000
S15-normalization/nfkd-5.t.........................2000    0    0    0 2000
S15-normalization/nfkd-6.t.........................2000    0    0    0 2000
S15-normalization/nfkd-7.t.........................2000    0    0    0 2000
S15-normalization/nfkd-8.t.........................2000    0    0    0 2000
S15-normalization/nfkd-9.t......................... 581    0    0    0  581
S15-normalization/nfkd-sanity.t.................... 500    0    0    0  500
S15-string-types/Str.rakudo.moar...................   3    0    0    1    4
     1 skipped: :nfg adverb NYI RT #124991
S15-string-types/Uni.t.............................  15    0    0    0   15
S15-unicode-information/unimatch-general.t.........# cannot call unimatch with a Str
# cannot call unimatch with a Str
# cannot call unimatch with a Int
# cannot call unimatch with a Int
 223    0    0    0  223
S15-unicode-information/uniname.rakudo.moar........# cannot call uniname with a Str
# cannot call uniname with a Str
# cannot call uniname with a Int
# cannot call uniname with a Int
  22    0    2   15   39
     5 skipped: :either NYI RT #125070
     5 skipped: :either and :one NYI RT #one NYI RT#:125071
     5 skipped: :one NYI RT #125069
     1 todo   : RT \#122470
     1 todo   : RT \#122471
S15-unicode-information/uniprop.t..................# cannot call uniprop with a Str
# cannot call uniprop with a Str
# cannot call uniprop with a Int
# cannot call uniprop with a Int
   6    0    0    0    6
S15-unicode-information/unival.t...................# cannot call unival with a Str
# cannot call unival with a Str
# cannot call unival with a Int
# cannot call unival with a Int
  40    0    0    0   40
                                                   pass fail todo skip plan
S16-filehandles/argfiles.t.........................  12    0    0    0   12
S16-filehandles/chmod.t............................# Using file temp_1452690556
# Using file temp_1452690556
  16    0    0    3   19
     3 skipped: :r :w :x can accidentally work with root permission
S16-filehandles/filestat.t.........................  10    0    0    0   10
S16-filehandles/filetest.rakudo.moar...............  34    0    0    9   43
     6 skipped: :M, :C, :A
     3 skipped: no file README
S16-filehandles/io.rakudo.moar..................... 110    0    2    0  112
     1 todo   : Too late to change filehandle encoding RT \#125079
     1 todo   : Will fail due to above failure RT \#125082
S16-filehandles/io_in_for_loops.t..................  32    0    0    0   32
S16-filehandles/io_in_while_loops.t................  17    0    0    0   17
S16-filehandles/mkdir_rmdir.t......................  14    0    0    0   14
S16-filehandles/open.t.............................   4    0    0    1    5
     1 skipped: open('nonexisting') => undefined is waiting on 'use fatal'
S16-filehandles/unlink.t...........................   3    0    0    0    3
S16-io/bare-say.t..................................# bare print is a compiler error
# say for 1  is an error
# say  for 1  is an error
   7    0    0    0    7
S16-io/basic-open.rakudo.moar......................# did we throws-like Exception?
  11    0    1    0   12
     1 todo   : end of file flag is set too early
S16-io/bom.t.......................................  10    0    0    0   10
S16-io/comb.t......................................# testing 'zero' with Regex
# testing ':zer' with Str
# testing ':zer' with Regex
# testing 'none' with Str
# testing 'none' with Regex
# testing '' with Str
# testing '' with Regex
# testing 'xxxx' with Str
# testing 'xxxx' with Regex
# testing 'yyyy' with Str
# testing 'yyyy' with Regex
# testing 'zzzz' with Str
# testing 'zzzz' with Regex
# testing 'ZZZZ' with Str
# testing 'ZZZZ' with Regex
# testing 'abcd' with Str
# testing 'abcd' with Regex
# testing 'abcd' with Regex
# testing '' with Str
# testing 'abcd' with Int
# testing 'abcd' with Int
# testing 'abcd' with Int
# testing 'abcd' with Int
# testing 'defg' with Int
  25    0    0    0   25
S16-io/cwd.t.......................................   3    0    0    0    3
S16-io/getc.t......................................   2    0    0    0    2
S16-io/lines.rakudo.moar........................... 320    0    0  144  464
   144 skipped: tests are already executed above
S16-io/newline.t...................................   6    0    0    0    6
S16-io/note.t......................................   5    0    0    0    5
S16-io/print.t.....................................  13    0    0    0   13
S16-io/say-and-ref.t...............................   3    0    0    0    3
S16-io/say.t.......................................   5    0    0    0    5
S16-io/split.t.....................................# testing 'zero' with Regex
# testing ':zer' with Str
# testing ':zer' with Regex
# testing 'none' with Str
# testing 'none' with Regex
# testing '' with Str
# testing '' with Regex
# testing 'xxxx' with Str
# testing 'xxxx' with Regex
# testing 'yyyy' with Str
# testing 'yyyy' with Regex
# testing 'zzzz' with Str
# testing 'zzzz' with Regex
# testing 'ZZZZ' with Str
# testing 'ZZZZ' with Regex
# testing 'abcd' with Str
# testing '' with Str
  18    0    0    0   18
S16-io/supply.t....................................# **** scheduling with ThreadPoolScheduler
# we can get chars from a supply
# we can get bytes from a supply
# **** scheduling with CurrentThreadScheduler
# we can get chars from a supply
# we can get bytes from a supply
   7    0    0    0    7
S16-io/tmpdir.t....................................   3    0    0    0    3
S16-io/words.t.....................................   9    0    0    0    9
S16-unfiled/rebindstdhandles.rakudo.moar...........   0    0    0    2    2
     1 skipped: contextual rebinding regression RT #125041
     1 skipped: contextual rebinding regression RT #125042
                                                   pass fail todo skip plan
S17-channel/basic.t................................# did we throws-like X::Channel::ReceiveOnClosed?
# did we throws-like X::Channel::SendOnClosed?
# did we throws-like X::Channel::SendOnClosed?
# did we throws-like X::Roast::Channel?
  17    0    0    0   17
S17-lowlevel/lock.t................................*** Error in `/home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/install/bin/moar': corrupted double-linked list: 0x00007fa05c00dd20 ***
Aborted
  14    9    0    0   23
     9 tests aborted (missing ok/not ok)
S17-lowlevel/thread-start-join-stress.t............   1    0    0    0    1
S17-lowlevel/thread.t..............................  25    0    0    0   25
S17-procasync/basic.rakudo.moar....................# did we throws-like X::Proc::Async::AlreadyStarted?
# did we throws-like X::Proc::Async::OpenForWriting?
# did we throws-like X::Proc::Async::OpenForWriting?
# did we throws-like X::Proc::Async::OpenForWriting?
# did we throws-like X::Proc::Async::TapBeforeSpawn?
# did we throws-like X::Proc::Async::MustBeStarted?
# did we throws-like X::Proc::Async::MustBeStarted?
# did we throws-like X::Proc::Async::MustBeStarted?
# did we throws-like X::Proc::Async::MustBeStarted?
# did we throws-like X::Proc::Async::MustBeStarted?
# did we throws-like X::Proc::Async::CharsOrBytes?
  27    0    0    3   30
     3 skipped: returns Nil (flapping tests) RT #125047
S17-procasync/kill.rakudo.moar.....................   8    0    1    0    9
     1 todo   : RT \#126425 - order of operations for Proc::Async is nondeterminstic
S17-procasync/many-processes-no-close-stdin.t......   1    0    0    0    1
S17-procasync/no-runaway-file-limit.t..............   1    0    0    0    1
S17-procasync/print.rakudo.moar....................  11    0    0    5   16
     5 skipped: Flapping tests RT #125048
S17-promise/allof.t................................# did we throws-like X::Promise::Combinator?
  13    0    0    0   13
S17-promise/anyof.t................................# did we throws-like X::Promise::Combinator?
  10    0    0    0   10
S17-promise/at.t...................................   3    0    0    0    3
S17-promise/basic.t................................# did we throws-like X::Promise::CauseOnlyValidOnBroken?
# did we throws-like X::Promise::Vowed?
# bare "await" dies
  23    0    0    0   23
S17-promise/in.t...................................   3    0    0    0    3
S17-promise/start.t................................Internal error: zeroed target thread ID in work pass
  18   22    0    0   40
    22 tests aborted (missing ok/not ok)
S17-promise/stress.t...............................   1    0    0    0    1
S17-promise/then.t.................................  14    0    0    0   14
S17-scheduler/at.t.................................  15    0    0    0   15
S17-scheduler/basic.rakudo.moar....................WARNINGS for /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S17-scheduler/basic.rakudo.moar:
Useless use of constant integer 1 in sink context (use Nil instead to suppress this warning) (lines 96, 108, 123, 135)
  24    0    0   10   34
     3 skipped: waiting for new '.loads' semantics RT #124774
     2 skipped: waiting for new '.loads' semantics RT #124775
     3 skipped: waiting for new '.loads' semantics RT #124776
     2 skipped: waiting for new '.loads' semantics RT #124777
S17-scheduler/every.t..............................  20    0    0    0   20
S17-scheduler/in.t.................................  14    0    0    0   14
S17-scheduler/times.t..............................   4    0    0    0    4
S17-supply/Channel.t...............................# **** scheduling with ThreadPoolScheduler
# **** scheduling with CurrentThreadScheduler
  12    0    0    0   12
S17-supply/Promise.t...............................# **** scheduling with ThreadPoolScheduler
# **** scheduling with CurrentThreadScheduler
  13    0    0    0   13
S17-supply/act.t...................................# **** scheduling with ThreadPoolScheduler
# **** scheduling with CurrentThreadScheduler
   9    0    0    0    9
S17-supply/basic.t.................................# **** scheduling with CurrentThreadScheduler
  88    0    0    0   88
S17-supply/batch.t.................................# **** scheduling with ThreadPoolScheduler
# we can batch by number of elements
# we can batch by time
# we can batch by time and elems
# noop batch
# **** scheduling with CurrentThreadScheduler
# we can batch by number of elements
# we can batch by time
# we can batch by time and elems
# noop batch
  11    0    0    0   11
S17-supply/categorize.t............................# **** scheduling with ThreadPoolScheduler
# got the 0 supply (Block)
# got the 1 supply (Block)
# got the 0 supply (Hash)
# got the 1 supply (Hash)
# got the 0 supply (Array)
# got the 1 supply (Array)
# got the 0 supply (Block)
# got the 0 supply (Hash)
# got the 0 supply (Array)
# **** scheduling with CurrentThreadScheduler
# got the 0 supply (Block)
# got the 1 supply (Block)
# got the 0 supply (Hash)
# got the 1 supply (Hash)
# got the 0 supply (Array)
# got the 1 supply (Array)
# got the 0 supply (Block)
# got the 0 supply (Hash)
# got the 0 supply (Array)
  63    0    0    0   63
S17-supply/classify.t..............................# **** scheduling with ThreadPoolScheduler
# mapping Block now
# got the 0 supply (Block)
# got the 1 supply (Block)
# mapping Hash now
# got the 0 supply (Hash)
# got the 1 supply (Hash)
# mapping Array now
# got the 0 supply (Array)
# got the 1 supply (Array)
# **** scheduling with CurrentThreadScheduler
# mapping Block now
# got the 0 supply (Block)
# got the 1 supply (Block)
# mapping Hash now
# got the 0 supply (Hash)
# got the 1 supply (Hash)
# mapping Array now
# got the 0 supply (Array)
# got the 1 supply (Array)
  33    0    0    0   33
S17-supply/delayed.rakudo.moar.....................# **** scheduling with ThreadPoolScheduler
# noop delay
# **** scheduling with CurrentThreadScheduler
# noop delay
   5    0    0    8   13
     4 skipped: doesn't work or can't test RT #124826
     4 skipped: doesn't work or can't test RT #124827
S17-supply/do.t....................................# **** scheduling with ThreadPoolScheduler
# .do worked
# **** scheduling with CurrentThreadScheduler
# .do worked
   5    0    0    0    5
S17-supply/elems.t.................................# **** scheduling with ThreadPoolScheduler
# just tracing elems works
# works in 1 second increments
# **** scheduling with CurrentThreadScheduler
# just tracing elems works
# works in 1 second increments
   5    0    0    0    5
S17-supply/flat.t..................................# **** scheduling with ThreadPoolScheduler
# On demand publish with flat
# **** scheduling with CurrentThreadScheduler
# On demand publish with flat
  17    0    0    0   17
S17-supply/from-list.t.............................# **** scheduling with ThreadPoolScheduler
# On demand publish worked
# Second tap gets all the values
# Supply coercer worked on Range
# Supply coercer worked on List
# Supply coercer worked on scalar
# **** scheduling with CurrentThreadScheduler
# On demand publish worked
# Second tap gets all the values
# Supply coercer worked on Range
# Supply coercer worked on List
# Supply coercer worked on scalar
  13    0    0    0   13
S17-supply/grab.t..................................# **** scheduling with ThreadPoolScheduler
# we can reverse
# we can find the min
# **** scheduling with CurrentThreadScheduler
# we can reverse
# we can find the min
   5    0    0    0    5
S17-supply/grep.t..................................# **** scheduling with ThreadPoolScheduler
# grepping taps with a Callable works
# grepping taps with a Type works
# grepping taps with a Regex works
# **** scheduling with CurrentThreadScheduler
# grepping taps with a Callable works
# grepping taps with a Type works
# grepping taps with a Regex works
   7    0    0    0    7
S17-supply/head.t..................................# **** scheduling with ThreadPoolScheduler
# head without argument works
# head five works
# head 15 works
# **** scheduling with CurrentThreadScheduler
# head without argument works
# head five works
# head 15 works
   8    0    0    0    8
S17-supply/interval.t..............................# interval of 1 second
# interval of 1 second with delay of 2
   4    0    0    0    4
S17-supply/lines.t.................................# **** scheduling with ThreadPoolScheduler
# handle a simple list of lines with LF
# handle a simple list of lines with LF without chomping
# handle a simple list of lines with CR
# handle a simple list of lines with CR without chomping
# handle a simple list of lines with CRLF
# handle a simple list of lines with CRLF without chomping
# handle a simple list of lines with mixed line ending
# handle a simple list of lines with mixed line ending w/o chomping
# handle chunked lines
# handle chunked lines
# **** scheduling with CurrentThreadScheduler
# handle a simple list of lines with LF
# handle a simple list of lines with LF without chomping
# handle a simple list of lines with CR
# handle a simple list of lines with CR without chomping
# handle a simple list of lines with CRLF
# handle a simple list of lines with CRLF without chomping
# handle a simple list of lines with mixed line ending
# handle a simple list of lines with mixed line ending w/o chomping
# handle chunked lines
# handle chunked lines
  23    0    0    0   23
S17-supply/list.t..................................# **** scheduling with ThreadPoolScheduler
# **** scheduling with CurrentThreadScheduler
   5    0    0    0    5
S17-supply/map.t...................................# **** scheduling with ThreadPoolScheduler
# mapping tap with single values works
# On demand publish with arrays will not flatten them
# Same if we get lists
# **** scheduling with CurrentThreadScheduler
# mapping tap with single values works
# On demand publish with arrays will not flatten them
# Same if we get lists
   7    0    0    0    7
S17-supply/max.t...................................# **** scheduling with ThreadPoolScheduler
# ascending max works
# descending max works
# ascending alpha works
# descending alpha works
# **** scheduling with CurrentThreadScheduler
# ascending max works
# descending max works
# ascending alpha works
# descending alpha works
  10    0    0    0   10
S17-supply/merge.t.................................# merging 3 supplies works
# noop merge
# did we throws-like X::Supply::Combinator?
# **** scheduling with CurrentThreadScheduler
# merging supplies works
# merging 3 supplies works
# noop merge
# did we throws-like X::Supply::Combinator?
  10    0    0    0   10
S17-supply/migrate.t...............................# **** scheduling with ThreadPoolScheduler
# did we throws-like X::Supply::Migrate::Needs?
# **** scheduling with CurrentThreadScheduler
# did we throws-like X::Supply::Migrate::Needs?
  13    0    0    0   13
S17-supply/min.t...................................# **** scheduling with ThreadPoolScheduler
# ascending min works
# descending min works
# ascending alpha works
# descending alpha works
# **** scheduling with CurrentThreadScheduler
# ascending min works
# descending min works
# ascending alpha works
# descending alpha works
  10    0    0    0   10
S17-supply/minmax.t................................# **** scheduling with ThreadPoolScheduler
# ascending minmax works
# descending minmax works
# ascending alpha works
# descending alpha works
# **** scheduling with CurrentThreadScheduler
# ascending minmax works
# descending minmax works
# ascending alpha works
# descending alpha works
  10    0    0    0   10
S17-supply/on-demand.t.............................# **** scheduling with ThreadPoolScheduler
# On demand publish worked
# Second tap gets all the values
# **** scheduling with CurrentThreadScheduler
# On demand publish worked
# Second tap gets all the values
   7    0    0    0    7
S17-supply/produce.t...............................# **** scheduling with ThreadPoolScheduler
# simple produce works
# minimal produce works
# producing with concatenate works
# producing bag union works
# **** scheduling with CurrentThreadScheduler
# simple produce works
# minimal produce works
# producing with concatenate works
# producing bag union works
  10    0    0    0   10
S17-supply/reduce.t................................# **** scheduling with ThreadPoolScheduler
# simple reduce works
# minimal reduce works
# reducing with concatenate works
# reducing bag union works
# **** scheduling with CurrentThreadScheduler
# simple reduce works
# minimal reduce works
# reducing with concatenate works
# reducing bag union works
  10    0    0    0   10
S17-supply/reverse.t...............................# **** scheduling with ThreadPoolScheduler
# we can reverse
# **** scheduling with CurrentThreadScheduler
# we can reverse
   3    0    0    0    3
S17-supply/rotor.rakudo.moar.......................# we can rotor with negative gap without partial
# we can rotor with negative gap with partial
# we can rotor without gap with 3
# we can rotor without gap without partial with 3
# we can rotor without gap with partial with 3
# we can rotor without gap with 3 => 0
# we can rotor without gap without partial with 3 => 0
# we can rotor without gap with partial with 3 => 0
# we can rotor with positive gap
# we can rotor with positive gap without partial
# we can rotor with positive gap with partial
# we can rotor with multiple different gaps
# we can rotor with multiple different gaps without partial
# we can rotor with multiple different gaps with partial
# **** scheduling with CurrentThreadScheduler
# we can rotor with negative gap
# we can rotor with negative gap without partial
# we can rotor with negative gap with partial
# we can rotor without gap with 3
# we can rotor without gap without partial with 3
# we can rotor without gap with partial with 3
# we can rotor without gap with 3 => 0
# we can rotor without gap without partial with 3 => 0
# we can rotor without gap with partial with 3 => 0
# we can rotor with positive gap
# we can rotor with positive gap without partial
# we can rotor with positive gap with partial
# we can rotor with multiple different gaps
# we can rotor with multiple different gaps without partial
# we can rotor with multiple different gaps with partial
  31    0    1    0   32
     1 todo   : only deprecated so far RT \#124823
S17-supply/schedule-on.t...........................# **** scheduling with ThreadPoolScheduler
# did we get the original values
# **** scheduling with CurrentThreadScheduler
# did we get the original values
   5    0    0    0    5
S17-supply/sort.t..................................# **** scheduling with ThreadPoolScheduler
# we can sort numbers
# we can sort strings
# we can sort in special ways
# **** scheduling with CurrentThreadScheduler
# we can sort numbers
# we can sort strings
# we can sort in special ways
   7    0    0    0    7
S17-supply/squish.t................................# **** scheduling with ThreadPoolScheduler
# squish tap with 2 ranges works
# squish tap with doubling range works
# squish with as tap works
# squish with with tap works
# squish with as and with tap works
# squish with with that always says it's the same, tap works
# squish with as that always returns the same value, tap works
# **** scheduling with CurrentThreadScheduler
# squish tap with 2 ranges works
# squish tap with doubling range works
# squish with as tap works
# squish with with tap works
# squish with as and with tap works
# squish with with that always says it's the same, tap works
# squish with as that always returns the same value, tap works
  15    0    0    0   15
S17-supply/stable.rakudo.moar......................# **** scheduling with ThreadPoolScheduler
# noop stable
# **** scheduling with CurrentThreadScheduler
# noop stable
   5    0    0    2    7
     2 skipped: doesn't work or can't test RT #124822
S17-supply/start.t.................................   8    0    0    0    8
S17-supply/syntax.t................................# did we throws-like X::ControlFlow?
# did we throws-like X::ControlFlow?
  60    0    0    0   60
S17-supply/tail.t..................................# **** scheduling with ThreadPoolScheduler
# tail without argument works
# tail five works
# tail 15 works
# **** scheduling with CurrentThreadScheduler
# tail without argument works
# tail five works
# tail 15 works
   8    0    0    0    8
S17-supply/throttle.t..............................# **** scheduling with ThreadPoolScheduler
  17    0    0    0   17
S17-supply/unique.t................................# **** scheduling with ThreadPoolScheduler
# unique tap works
# unique with as tap works
# unique with with tap works
# unique with as and with tap works
# unique with expiry works
# unique with as and expiry works
# unique with with and expiry works
# unique with with, as and expiry works
# **** scheduling with CurrentThreadScheduler
# unique tap works
# unique with as tap works
# unique with with tap works
# unique with as and with tap works
# unique with expiry works
# unique with as and expiry works
# unique with with and expiry works
# unique with with, as and expiry works
  17    0    0    0   17
S17-supply/wait.t..................................   4    0    0    0    4
S17-supply/watch-path.t............................WARNINGS for /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S17-supply/watch-path.t:
Useless use of constant string "only about our file" in sink context (lines 28, 28)
   2    0    0    0    2
S17-supply/words.t.................................# **** scheduling with ThreadPoolScheduler
# handle a simple list of words
# handle chunked lines
# **** scheduling with CurrentThreadScheduler
# handle a simple list of words
# handle chunked lines
   5    0    0    0    5
S17-supply/zip-latest.t............................# zipping three supplies with ~ works with "zip-latest"
# zipping three supplies works with "zip-latest"
# noop zip-latest
# did we throws-like X::Supply::Combinator?
# **** scheduling with CurrentThreadScheduler
# zipping 2 supplies works with "zip-latest"
# zipping three supplies with ~ works with "zip-latest"
# zipping three supplies works with "zip-latest"
# noop zip-latest
# did we throws-like X::Supply::Combinator?
  12    0    0    0   12
S17-supply/zip.t...................................# zipping with 3 supplies works
# noop zip
# did we throws-like X::Supply::Combinator?
# **** scheduling with CurrentThreadScheduler
# zipping taps works
# zipping with 3 supplies works
# noop zip
# did we throws-like X::Supply::Combinator?
  10    0    0    0   10
                                                   pass fail todo skip plan
S19-command-line-options/02-dash-n.t...............   3    0    0    0    3
S19-command-line-options/03-dash-p.t...............   2    0    0    0    2
S19-command-line/arguments.t.......................   3    0    0    0    3
S19-command-line/dash-e.t..........................   4    0    0    0    4
S19-command-line/help.t............................   1    0    0    0    1
S19-command-line/repl.t............................   1    0    0    0    1
                                                   pass fail todo skip plan
S22-package-format/local.t.........................# is there one candidate and is it sane
# did we throws-like X::CompUnit::UnsatisfiedDependency?
  19    0    0    0   19
                                                   pass fail todo skip plan
S24-testing/0-compile.t............................   1    0    0    0    1
S24-testing/3-output.t.............................   4    0    0    0    4
S24-testing/line-numbers.t.........................  13    0    0    0   13
                                                   pass fail todo skip plan
S26-documentation/01-delimited.t...................  40    0    0    0   40
S26-documentation/02-paragraph.t...................  27    0    0    0   27
S26-documentation/03-abbreviated.t.................  30    0    0    0   30
S26-documentation/04-code.t........................  50    0    0    0   50
S26-documentation/05-comment.t.....................   9    0    0    0    9
S26-documentation/06-lists.t.......................  39    0    0    0   39
S26-documentation/07-tables.t......................  38    0    0    0   38
S26-documentation/08-formattingcodes.t.............  45    0    0    0   45
S26-documentation/09-configuration.rakudo.moar.....  13    0    4    0   17
     4 todo   : non-string colonpair pod options RT \#124281
S26-documentation/10-doc-cli.t.....................   2    0    0    0    2
S26-documentation/block-leading.t.................. 320    0    0   14  334
     7 skipped: declaration comments are NYI on constants
     7 skipped: declaration comments are NYI on variables
S26-documentation/block-trailing.t................. 313    0    0   14  327
     7 skipped: declaration comments are NYI on constants
     7 skipped: declaration comments are NYI on variables
S26-documentation/module-comment.t.................   1    0    0    0    1
S26-documentation/multiline-leading.t..............   4    0    0    0    4
S26-documentation/multiline-trailing.t.............   2    0    0    0    2
S26-documentation/wacky.t..........................  24    0    4    2   30
     1 skipped: interleaved trailing WIP
     1 skipped: supersede NYI
     1 todo   : being picky about attaching of declarative comments NYI
     1 todo   : comment betwixt signature and block WIP
     2 todo   : two attrs on a line WIP
S26-documentation/why-both.t....................... 277    0    0   14  291
     7 skipped: declaration comments are NYI on constants
     7 skipped: declaration comments are NYI on variables
S26-documentation/why-leading.t.................... 341    0    0   14  355
     7 skipped: declaration comments are NYI on constants
     7 skipped: declaration comments are NYI on variables
S26-documentation/why-trailing.t................... 334    0    0   14  348
     7 skipped: declaration comments are NYI on constants
     7 skipped: declaration comments are NYI on variables
                                                   pass fail todo skip plan
S28-named-variables/cwd.t..........................   2    0    0    0    2
S28-named-variables/slangs.t.......................   6    0    0    0    6
                                                   pass fail todo skip plan
S29-any/cmp.t......................................   6    0    0    0    6
S29-any/isa.t......................................# no sub called isa()
  10    0    0    0   10
S29-context/die.rakudo.moar........................WARNINGS for /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S29-context/die.rakudo.moar:
Useless use of $foo in sink context (line 23)
  16    0    1    0   17
     1 todo   : RT \#67374
S29-context/eval.rakudo.moar.......................  21    0    0    2   23
     2 skipped: EVAL(Buf) RT #122256
S29-context/evalfile.t.............................   2    0    0    0    2
S29-context/exit-in-if.t...........................   1    0    0    0    1
S29-context/exit.t.................................   3    0    0    0    3
S29-context/sleep.t................................# sleep-timer() for 3 seconds
# sleep-until() for 3 seconds
# checking infinite waiting times
  22    0    0    0   22
S29-conversions/hash.t.............................   8    0    0    0    8
S29-conversions/ord_and_chr.rakudo.moar............ 255    0    2    0  257
     1 todo   : chr max RT \#124837
     1 todo   : chr surrogate RT \#124834
S29-os/system.t....................................WARNINGS for /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S29-os/system.t:
Useless use of constant integer 1 in sink context (lines 61, 68)
/bin/sh: 1: program_that_does_not_exist_ignore_this_error_please.exe: not found
# run in sink context throws on unsuccessful exit
# shell in sink context throws on unsuccessful exit
/bin/sh: 1: program_that_does_not_exist_ignore_errors_please.exe: not found
dir: cannot access t: No such file or directory
  20    0    0    0   20
                                                   pass fail todo skip plan
S32-array/adverbs.rakudo.moar......................# did we throws-like X::Adverb?
# did we throws-like X::Adverb?
# did we throws-like X::Adverb?
# did we throws-like X::Adverb?
Use of uninitialized value @n of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value @n of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value @n of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value @n of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
# did we throws-like X::Adverb?
# did we throws-like X::Adverb?
Use of uninitialized value @n of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value @n of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value @n of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value @n of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value @n of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value @n of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value @n of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
# did we throws-like X::Adverb?
# did we throws-like X::Adverb?
# did we throws-like X::Adverb?
# did we throws-like X::Adverb?
# did we throws-like X::Adverb?
# did we throws-like X::Adverb?
# did we throws-like X::Adverb?
# did we throws-like X::Adverb?
Use of uninitialized value @n of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value @n of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value @n of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value @n of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value @n of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value @n of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value @n of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value @n of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value @n of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value @n of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value @n of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value @n of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value @n of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value @n of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
# did we throws-like X::Adverb?
# did we throws-like X::Adverb?
Use of uninitialized value @n of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value @n of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value @n of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value @n of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value @n of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value @n of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value @n of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value @n of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value @n of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value @n of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value @n of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value @n of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value @n of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value @n of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
# did we throws-like X::Adverb?
# did we throws-like X::Adverb?
# did we throws-like X::Adverb?
# did we throws-like X::Adverb?
Use of uninitialized value @n of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value @n of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value @n of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value @n of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value @n of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value @n of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value @n of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
# did we throws-like X::Adverb?
# did we throws-like X::Adverb?
Use of uninitialized value @n of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value @n of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value @n of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value @n of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value @n of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value @n of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 137
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 137
Use of uninitialized value @n of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 137
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 137
# did we throws-like X::Adverb?
# did we throws-like X::Adverb?
# did we throws-like X::Adverb?
# did we throws-like Exception?
# did we throws-like X::Adverb?
# did we throws-like X::Adverb?
# did we throws-like Exception?
# did we throws-like X::Adverb?
# did we throws-like X::Adverb?
# True
# did we throws-like X::Adverb?
# did we throws-like X::Adverb?
# did we throws-like X::Adverb?
# did we throws-like X::Adverb?
# did we throws-like X::Adverb?
Use of uninitialized value @s of type Str in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Str in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value @s of type Str in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Str in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value @s of type Str in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Str in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value @s of type Str in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Str in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
# did we throws-like X::Adverb?
# did we throws-like X::Adverb?
Use of uninitialized value @s of type Str in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Str in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value @s of type Str in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Str in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value @s of type Str in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Str in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value @s of type Str in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Str in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value @s of type Str in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Str in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value @s of type Str in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Str in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value @s of type Str in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Str in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
# did we throws-like X::Adverb?
# did we throws-like X::Adverb?
# did we throws-like X::Adverb?
# did we throws-like X::Adverb?
# did we throws-like X::Adverb?
# did we throws-like X::Adverb?
# did we throws-like X::Adverb?
# did we throws-like X::Adverb?
Use of uninitialized value @s of type Str in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value @s of type Str in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Str in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Str in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value @s of type Str in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value @s of type Str in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Str in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Str in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value @s of type Str in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value @s of type Str in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Str in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Str in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value @s of type Str in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value @s of type Str in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Str in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Str in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value @s of type Str in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value @s of type Str in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Str in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Str in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value @s of type Str in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value @s of type Str in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Str in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Str in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value @s of type Str in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value @s of type Str in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Str in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Str in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
# did we throws-like X::Adverb?
# did we throws-like X::Adverb?
Use of uninitialized value @s of type Str in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value @s of type Str in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Str in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Str in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value @s of type Str in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value @s of type Str in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Str in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Str in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value @s of type Str in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value @s of type Str in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Str in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Str in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value @s of type Str in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value @s of type Str in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Str in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Str in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value @s of type Str in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value @s of type Str in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Str in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Str in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value @s of type Str in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value @s of type Str in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Str in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Str in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value @s of type Str in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value @s of type Str in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Str in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Str in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
# did we throws-like X::Adverb?
# did we throws-like X::Adverb?
# did we throws-like X::Adverb?
# did we throws-like X::Adverb?
Use of uninitialized value @s of type Str in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Str in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value @s of type Str in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Str in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value @s of type Str in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Str in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value @s of type Str in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Str in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value @s of type Str in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Str in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value @s of type Str in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Str in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value @s of type Str in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Str in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
# did we throws-like X::Adverb?
# did we throws-like X::Adverb?
Use of uninitialized value @s of type Str in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Str in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value @s of type Str in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Str in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value @s of type Str in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Str in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value @s of type Str in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Str in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value @s of type Str in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Str in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value @s of type Str in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Str in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value @s of type Str in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Str in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
# did we throws-like X::Adverb?
# did we throws-like X::Adverb?
# did we throws-like X::Adverb?
# did we throws-like Exception?
# did we throws-like X::Adverb?
# did we throws-like X::Adverb?
# did we throws-like Exception?
# did we throws-like X::Adverb?
# did we throws-like X::Adverb?
# True
# did we throws-like X::Adverb?
 582    0    0   24  606
    24 skipped: does not die reliably, not reproducable alas
S32-array/bool.t...................................  15    0    0    0   15
S32-array/create.t.................................# did we throws-like X::TypeCheck?
# did we throws-like X::TypeCheck?
   6    0    0    0    6
S32-array/delete-adverb-native.t................... 138    0    0    0  138
S32-array/delete-adverb.t.......................... 218    0    0    0  218
S32-array/delete.t.................................Use of uninitialized value of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at t/spec/S32-array/delete.t line 64
  32    0    0    0   32
S32-array/elems.t..................................# elems(1,2,3,4) should not work
  11    0    0    0   11
S32-array/end.t....................................# end(1,2,3,4) should not work
  12    0    0    0   12
S32-array/exists-adverb.t..........................  52    0    0    0   52
S32-array/keys_values.t............................   8    0    0    0    8
S32-array/kv.t.....................................  18    0    0    0   18
S32-array/pairs.t..................................  14    0    0    0   14
S32-array/perl.t...................................   6    0    0    0    6
S32-array/pop.rakudo.moar..........................# pop() requires arguments
# .pop should not work on scalars
# pop() should not allow extra arguments
# .pop() should not allow extra arguments
    
# Failed test ''@pop.pop = 3' died'
# at t/spec/S32-array/pop.rakudo.moar line 92
    # Looks like you failed 1 test of 2
# cannot pop from a lazy list
  35    0    2    0   37
     1 todo   : RT \#111720
     1 todo   : code does not die
S32-array/push.t...................................# push() requires arguments (1)
# .push should not work on scalars
# cannot push strings onto in Int array
# pushing non-A objects to an attribute array typed with A dies
  52    0    0    0   52
S32-array/rotate.t.................................  29    0    0    0   29
S32-array/shift.t..................................# shift() requires arguments
# .shift should not work on scalars
  33    0    0    0   33
S32-array/splice.rakudo.moar.......................    # Array method: whole
# Array simple 1 elem
    # Array method: simple 1 elem
# Array simple 2 elems
    # Array method: simple 2 elems
# Array simple 2 elems, as Str
    # Array method: simple 2 elems, as Str
# Array simple rest
    # Array method: simple rest
# Array simple rest *
    # Array method: simple rest *
# Array none rest
    # Array method: none rest
# Array none * rest
    # Array method: none * rest
# Array end rest
    # Array method: end rest
# Array end some
    # Array method: end some
# Array end some callable
    # Array method: end some callable
# Array push none
    # Array method: push none
# Array push none *
    # Array method: push none *
# Array push none callable
    # Array method: push none callable
# Array push two
    # Array method: push two
# Array push two *
    # Array method: push two *
# Array push self
    # Array method: push self
# Array push self *
    # Array method: push self *
# Array unshift
    # Array method: unshift
# Array unshift none
    # Array method: unshift none
# Array unshift self
    # Array method: unshift self
# Array replace self
    # Array method: replace self
# Array replace 1 with 1
    # Array method: replace 1 with 1
# Array replace 1 with range
    # Array method: replace 1 with range
# Array replace 1 with none
    # Array method: replace 1 with none
# Array replace 1 with self
    # Array method: replace 1 with self
# Array replace none with 1
    # Array method: replace none with 1
# Array replace none with range
    # Array method: replace none with range
# Array replace none with none
    # Array method: replace none with none
# Array replace none with self
    # Array method: replace none with self
# Array remove 1 past end
    # Array method: remove 1 past end
# Array remove 1 past end + push
    # Array method: remove 1 past end + push
# Array remove whatever past end + push
    # Array method: remove whatever past end + push
# Array whole SINK
    # Array method: whole SINK
# Array simple 1 elem SINK
    # Array method: simple 1 elem SINK
# Array none rest SINK
    # Array method: none rest SINK
# did we throws-like X::Cannot::Lazy?
# did we throws-like X::Cannot::Lazy?
# did we throws-like X::OutOfRange?
# did we throws-like X::OutOfRange?
# did we throws-like X::OutOfRange?
# did we throws-like X::OutOfRange?
# did we throws-like X::OutOfRange?
# did we throws-like X::OutOfRange?
# did we throws-like X::OutOfRange?
# did we throws-like X::OutOfRange?
# did we throws-like X::OutOfRange?
# did we throws-like X::OutOfRange?
# array[int] whole
    # array[int] method: whole
# array[int] simple 1 elem
    # array[int] method: simple 1 elem
# array[int] simple 2 elems
    # array[int] method: simple 2 elems
# array[int] simple 2 elems, as Str
    # array[int] method: simple 2 elems, as Str
# array[int] simple rest
    # array[int] method: simple rest
# array[int] simple rest *
    # array[int] method: simple rest *
# array[int] none rest
    # array[int] method: none rest
# array[int] none * rest
    # array[int] method: none * rest
# array[int] end rest
    # array[int] method: end rest
# array[int] end some
    # array[int] method: end some
# array[int] end some callable
    # array[int] method: end some callable
# array[int] push none
    # array[int] method: push none
# array[int] push none *
    # array[int] method: push none *
# array[int] push none callable
    # array[int] method: push none callable
# array[int] push two
    # array[int] method: push two
# array[int] push two *
    # array[int] method: push two *
# array[int] push self
    # array[int] method: push self
# array[int] push self *
    # array[int] method: push self *
# array[int] unshift
    # array[int] method: unshift
# array[int] unshift none
    # array[int] method: unshift none
# array[int] unshift self
    # array[int] method: unshift self
# array[int] replace self
    # array[int] method: replace self
# array[int] replace 1 with 1
    # array[int] method: replace 1 with 1
# array[int] replace 1 with range
    # array[int] method: replace 1 with range
# array[int] replace 1 with none
    # array[int] method: replace 1 with none
# array[int] replace 1 with self
    # array[int] method: replace 1 with self
# array[int] replace none with 1
    # array[int] method: replace none with 1
# array[int] replace none with range
    # array[int] method: replace none with range
# array[int] replace none with none
    # array[int] method: replace none with none
# array[int] replace none with self
    # array[int] method: replace none with self
# array[int] remove 1 past end
    # array[int] method: remove 1 past end
# array[int] remove 1 past end + push
    # array[int] method: remove 1 past end + push
# array[int] remove whatever past end + push
    # array[int] method: remove whatever past end + push
# array[int] whole SINK
    # array[int] method: whole SINK
# array[int] simple 1 elem SINK
    # array[int] method: simple 1 elem SINK
# array[int] none rest SINK
    # array[int] method: none rest SINK
# did we throws-like X::Cannot::Lazy?
# did we throws-like X::Cannot::Lazy?
# did we throws-like X::OutOfRange?
# did we throws-like X::OutOfRange?
# did we throws-like X::OutOfRange?
# did we throws-like X::OutOfRange?
# did we throws-like X::OutOfRange?
# did we throws-like X::OutOfRange?
# did we throws-like X::OutOfRange?
# did we throws-like X::OutOfRange?
# did we throws-like X::OutOfRange?
# did we throws-like X::OutOfRange?
# array[int8] whole
    # array[int8] method: whole
# array[int8] simple 1 elem
    # array[int8] method: simple 1 elem
# array[int8] simple 2 elems
    # array[int8] method: simple 2 elems
# array[int8] simple 2 elems, as Str
    # array[int8] method: simple 2 elems, as Str
# array[int8] simple rest
    # array[int8] method: simple rest
# array[int8] simple rest *
    # array[int8] method: simple rest *
# array[int8] none rest
    # array[int8] method: none rest
# array[int8] none * rest
    # array[int8] method: none * rest
# array[int8] end rest
    # array[int8] method: end rest
# array[int8] end some
    # array[int8] method: end some
# array[int8] end some callable
    # array[int8] method: end some callable
# array[int8] push none
    # array[int8] method: push none
# array[int8] push none *
    # array[int8] method: push none *
# array[int8] push none callable
    # array[int8] method: push none callable
# array[int8] push two
    # array[int8] method: push two
# array[int8] push two *
    # array[int8] method: push two *
# array[int8] push self
    # array[int8] method: push self
# array[int8] push self *
    # array[int8] method: push self *
# array[int8] unshift
    # array[int8] method: unshift
# array[int8] unshift none
    # array[int8] method: unshift none
# array[int8] unshift self
    # array[int8] method: unshift self
# array[int8] replace self
    # array[int8] method: replace self
# array[int8] replace 1 with 1
    # array[int8] method: replace 1 with 1
# array[int8] replace 1 with range
    # array[int8] method: replace 1 with range
# array[int8] replace 1 with none
    # array[int8] method: replace 1 with none
# array[int8] replace 1 with self
    # array[int8] method: replace 1 with self
# array[int8] replace none with 1
    # array[int8] method: replace none with 1
# array[int8] replace none with range
    # array[int8] method: replace none with range
# array[int8] replace none with none
    # array[int8] method: replace none with none
# array[int8] replace none with self
    # array[int8] method: replace none with self
# array[int8] remove 1 past end
    # array[int8] method: remove 1 past end
# array[int8] remove 1 past end + push
    # array[int8] method: remove 1 past end + push
# array[int8] remove whatever past end + push
    # array[int8] method: remove whatever past end + push
# array[int8] whole SINK
    # array[int8] method: whole SINK
# array[int8] simple 1 elem SINK
    # array[int8] method: simple 1 elem SINK
# array[int8] none rest SINK
    # array[int8] method: none rest SINK
# did we throws-like X::Cannot::Lazy?
# did we throws-like X::Cannot::Lazy?
# did we throws-like X::OutOfRange?
# did we throws-like X::OutOfRange?
# did we throws-like X::OutOfRange?
# did we throws-like X::OutOfRange?
# did we throws-like X::OutOfRange?
# did we throws-like X::OutOfRange?
# did we throws-like X::OutOfRange?
# did we throws-like X::OutOfRange?
# did we throws-like X::OutOfRange?
# did we throws-like X::OutOfRange?
# array[int16] whole
    # array[int16] method: whole
# array[int16] simple 1 elem
    # array[int16] method: simple 1 elem
# array[int16] simple 2 elems
    # array[int16] method: simple 2 elems
# array[int16] simple 2 elems, as Str
    # array[int16] method: simple 2 elems, as Str
# array[int16] simple rest
    # array[int16] method: simple rest
# array[int16] simple rest *
    # array[int16] method: simple rest *
# array[int16] none rest
    # array[int16] method: none rest
# array[int16] none * rest
    # array[int16] method: none * rest
# array[int16] end rest
    # array[int16] method: end rest
# array[int16] end some
    # array[int16] method: end some
# array[int16] end some callable
    # array[int16] method: end some callable
# array[int16] push none
    # array[int16] method: push none
# array[int16] push none *
    # array[int16] method: push none *
# array[int16] push none callable
    # array[int16] method: push none callable
# array[int16] push two
    # array[int16] method: push two
# array[int16] push two *
    # array[int16] method: push two *
# array[int16] push self
    # array[int16] method: push self
# array[int16] push self *
    # array[int16] method: push self *
# array[int16] unshift
    # array[int16] method: unshift
# array[int16] unshift none
    # array[int16] method: unshift none
# array[int16] unshift self
    # array[int16] method: unshift self
# array[int16] replace self
    # array[int16] method: replace self
# array[int16] replace 1 with 1
    # array[int16] method: replace 1 with 1
# array[int16] replace 1 with range
    # array[int16] method: replace 1 with range
# array[int16] replace 1 with none
    # array[int16] method: replace 1 with none
# array[int16] replace 1 with self
    # array[int16] method: replace 1 with self
# array[int16] replace none with 1
    # array[int16] method: replace none with 1
# array[int16] replace none with range
    # array[int16] method: replace none with range
# array[int16] replace none with none
    # array[int16] method: replace none with none
# array[int16] replace none with self
    # array[int16] method: replace none with self
# array[int16] remove 1 past end
    # array[int16] method: remove 1 past end
# array[int16] remove 1 past end + push
    # array[int16] method: remove 1 past end + push
# array[int16] remove whatever past end + push
    # array[int16] method: remove whatever past end + push
# array[int16] whole SINK
    # array[int16] method: whole SINK
# array[int16] simple 1 elem SINK
    # array[int16] method: simple 1 elem SINK
# array[int16] none rest SINK
    # array[int16] method: none rest SINK
# did we throws-like X::Cannot::Lazy?
# did we throws-like X::Cannot::Lazy?
# did we throws-like X::OutOfRange?
# did we throws-like X::OutOfRange?
# did we throws-like X::OutOfRange?
# did we throws-like X::OutOfRange?
# did we throws-like X::OutOfRange?
# did we throws-like X::OutOfRange?
# did we throws-like X::OutOfRange?
# did we throws-like X::OutOfRange?
# did we throws-like X::OutOfRange?
# did we throws-like X::OutOfRange?
# array[int32] whole
    # array[int32] method: whole
# array[int32] simple 1 elem
    # array[int32] method: simple 1 elem
# array[int32] simple 2 elems
    # array[int32] method: simple 2 elems
# array[int32] simple 2 elems, as Str
    # array[int32] method: simple 2 elems, as Str
# array[int32] simple rest
    # array[int32] method: simple rest
# array[int32] simple rest *
    # array[int32] method: simple rest *
# array[int32] none rest
    # array[int32] method: none rest
# array[int32] none * rest
    # array[int32] method: none * rest
# array[int32] end rest
    # array[int32] method: end rest
# array[int32] end some
    # array[int32] method: end some
# array[int32] end some callable
    # array[int32] method: end some callable
# array[int32] push none
    # array[int32] method: push none
# array[int32] push none *
    # array[int32] method: push none *
# array[int32] push none callable
    # array[int32] method: push none callable
# array[int32] push two
    # array[int32] method: push two
# array[int32] push two *
    # array[int32] method: push two *
# array[int32] push self
    # array[int32] method: push self
# array[int32] push self *
    # array[int32] method: push self *
# array[int32] unshift
    # array[int32] method: unshift
# array[int32] unshift none
    # array[int32] method: unshift none
# array[int32] unshift self
    # array[int32] method: unshift self
# array[int32] replace self
    # array[int32] method: replace self
# array[int32] replace 1 with 1
    # array[int32] method: replace 1 with 1
# array[int32] replace 1 with range
    # array[int32] method: replace 1 with range
# array[int32] replace 1 with none
    # array[int32] method: replace 1 with none
# array[int32] replace 1 with self
    # array[int32] method: replace 1 with self
# array[int32] replace none with 1
    # array[int32] method: replace none with 1
# array[int32] replace none with range
    # array[int32] method: replace none with range
# array[int32] replace none with none
    # array[int32] method: replace none with none
# array[int32] replace none with self
    # array[int32] method: replace none with self
# array[int32] remove 1 past end
    # array[int32] method: remove 1 past end
# array[int32] remove 1 past end + push
    # array[int32] method: remove 1 past end + push
# array[int32] remove whatever past end + push
    # array[int32] method: remove whatever past end + push
# array[int32] whole SINK
    # array[int32] method: whole SINK
# array[int32] simple 1 elem SINK
    # array[int32] method: simple 1 elem SINK
# array[int32] none rest SINK
    # array[int32] method: none rest SINK
# did we throws-like X::Cannot::Lazy?
# did we throws-like X::Cannot::Lazy?
# did we throws-like X::OutOfRange?
# did we throws-like X::OutOfRange?
# did we throws-like X::OutOfRange?
# did we throws-like X::OutOfRange?
# did we throws-like X::OutOfRange?
# did we throws-like X::OutOfRange?
# did we throws-like X::OutOfRange?
# did we throws-like X::OutOfRange?
# did we throws-like X::OutOfRange?
# did we throws-like X::OutOfRange?
# array[int64] whole
    # array[int64] method: whole
# array[int64] simple 1 elem
    # array[int64] method: simple 1 elem
# array[int64] simple 2 elems
    # array[int64] method: simple 2 elems
# array[int64] simple 2 elems, as Str
    # array[int64] method: simple 2 elems, as Str
# array[int64] simple rest
    # array[int64] method: simple rest
# array[int64] simple rest *
    # array[int64] method: simple rest *
# array[int64] none rest
    # array[int64] method: none rest
# array[int64] none * rest
    # array[int64] method: none * rest
# array[int64] end rest
    # array[int64] method: end rest
# array[int64] end some
    # array[int64] method: end some
# array[int64] end some callable
    # array[int64] method: end some callable
# array[int64] push none
    # array[int64] method: push none
# array[int64] push none *
    # array[int64] method: push none *
# array[int64] push none callable
    # array[int64] method: push none callable
# array[int64] push two
    # array[int64] method: push two
# array[int64] push two *
    # array[int64] method: push two *
# array[int64] push self
    # array[int64] method: push self
# array[int64] push self *
    # array[int64] method: push self *
# array[int64] unshift
    # array[int64] method: unshift
# array[int64] unshift none
    # array[int64] method: unshift none
# array[int64] unshift self
    # array[int64] method: unshift self
# array[int64] replace self
    # array[int64] method: replace self
# array[int64] replace 1 with 1
    # array[int64] method: replace 1 with 1
# array[int64] replace 1 with range
    # array[int64] method: replace 1 with range
# array[int64] replace 1 with none
    # array[int64] method: replace 1 with none
# array[int64] replace 1 with self
    # array[int64] method: replace 1 with self
# array[int64] replace none with 1
    # array[int64] method: replace none with 1
# array[int64] replace none with range
    # array[int64] method: replace none with range
# array[int64] replace none with none
    # array[int64] method: replace none with none
# array[int64] replace none with self
    # array[int64] method: replace none with self
# array[int64] remove 1 past end
    # array[int64] method: remove 1 past end
# array[int64] remove 1 past end + push
    # array[int64] method: remove 1 past end + push
# array[int64] remove whatever past end + push
    # array[int64] method: remove whatever past end + push
# array[int64] whole SINK
    # array[int64] method: whole SINK
# array[int64] simple 1 elem SINK
    # array[int64] method: simple 1 elem SINK
# array[int64] none rest SINK
    # array[int64] method: none rest SINK
# did we throws-like X::Cannot::Lazy?
# did we throws-like X::Cannot::Lazy?
# did we throws-like X::OutOfRange?
# did we throws-like X::OutOfRange?
# did we throws-like X::OutOfRange?
# did we throws-like X::OutOfRange?
# did we throws-like X::OutOfRange?
# did we throws-like X::OutOfRange?
# did we throws-like X::OutOfRange?
# did we throws-like X::OutOfRange?
# did we throws-like X::OutOfRange?
# did we throws-like X::OutOfRange?
# Array[Int] whole
    # Array[Int] method: whole
# Array[Int] simple 1 elem
    # Array[Int] method: simple 1 elem
# Array[Int] simple 2 elems
    # Array[Int] method: simple 2 elems
# Array[Int] simple 2 elems, as Str
    # Array[Int] method: simple 2 elems, as Str
# Array[Int] simple rest
    # Array[Int] method: simple rest
# Array[Int] simple rest *
    # Array[Int] method: simple rest *
# Array[Int] none rest
    # Array[Int] method: none rest
# Array[Int] none * rest
    # Array[Int] method: none * rest
# Array[Int] end rest
    # Array[Int] method: end rest
# Array[Int] end some
    # Array[Int] method: end some
# Array[Int] end some callable
    # Array[Int] method: end some callable
# Array[Int] push none
    # Array[Int] method: push none
# Array[Int] push none *
    # Array[Int] method: push none *
# Array[Int] push none callable
    # Array[Int] method: push none callable
# Array[Int] push two
    # Array[Int] method: push two
# Array[Int] push two *
    # Array[Int] method: push two *
# Array[Int] push self
    # Array[Int] method: push self
# Array[Int] push self *
    # Array[Int] method: push self *
# Array[Int] unshift
    # Array[Int] method: unshift
# Array[Int] unshift none
    # Array[Int] method: unshift none
# Array[Int] unshift self
    # Array[Int] method: unshift self
# Array[Int] replace self
    # Array[Int] method: replace self
# Array[Int] replace 1 with 1
    # Array[Int] method: replace 1 with 1
# Array[Int] replace 1 with range
    # Array[Int] method: replace 1 with range
# Array[Int] replace 1 with none
    # Array[Int] method: replace 1 with none
# Array[Int] replace 1 with self
    # Array[Int] method: replace 1 with self
# Array[Int] replace none with 1
    # Array[Int] method: replace none with 1
# Array[Int] replace none with range
    # Array[Int] method: replace none with range
# Array[Int] replace none with none
    # Array[Int] method: replace none with none
# Array[Int] replace none with self
    # Array[Int] method: replace none with self
# Array[Int] remove 1 past end
    # Array[Int] method: remove 1 past end
# Array[Int] remove 1 past end + push
    # Array[Int] method: remove 1 past end + push
# Array[Int] remove whatever past end + push
    # Array[Int] method: remove whatever past end + push
# Array[Int] whole SINK
    # Array[Int] method: whole SINK
# Array[Int] simple 1 elem SINK
    # Array[Int] method: simple 1 elem SINK
# Array[Int] none rest SINK
    # Array[Int] method: none rest SINK
# did we throws-like X::Cannot::Lazy?
# did we throws-like X::Cannot::Lazy?
# did we throws-like X::OutOfRange?
# did we throws-like X::OutOfRange?
# did we throws-like X::OutOfRange?
# did we throws-like X::OutOfRange?
# did we throws-like X::OutOfRange?
# did we throws-like X::OutOfRange?
# did we throws-like X::OutOfRange?
# did we throws-like X::OutOfRange?
# did we throws-like X::OutOfRange?
# did we throws-like X::OutOfRange?
    
# Failed test 'right exception type (X::TypeCheck::Splice)'
# at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/.precomp/BAAC3570AFB43B4001B683E1031B47492AF5735C.1452689425.64801/BB/BB756629C697A5B17B1A4761B25C96B447D4D80B line 1
    # Expected: X::TypeCheck::Splice
    # Got:      X::TypeCheck::Binding
    # Exception message: Type check failed in binding @arr; expected Positional but got Mu
    # Looks like you failed 1 test of 5
    
# Failed test 'right exception type (X::TypeCheck::Splice)'
# at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/.precomp/BAAC3570AFB43B4001B683E1031B47492AF5735C.1452689425.64801/BB/BB756629C697A5B17B1A4761B25C96B447D4D80B line 1
    # Expected: X::TypeCheck::Splice
    # Got:      X::AdHoc
    # Exception message: Cannot call method 'splice' on a null object
    # Looks like you failed 1 test of 5
    
# Failed test 'right exception type (X::TypeCheck::Splice)'
# at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/.precomp/BAAC3570AFB43B4001B683E1031B47492AF5735C.1452689425.64801/BB/BB756629C697A5B17B1A4761B25C96B447D4D80B line 1
    # Expected: X::TypeCheck::Splice
    # Got:      X::TypeCheck::Binding
    # Exception message: Type check failed in binding @arr; expected Positional but got Mu
    # Looks like you failed 1 test of 5
    
# Failed test 'right exception type (X::TypeCheck::Splice)'
# at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/.precomp/BAAC3570AFB43B4001B683E1031B47492AF5735C.1452689425.64801/BB/BB756629C697A5B17B1A4761B25C96B447D4D80B line 1
    # Expected: X::TypeCheck::Splice
    # Got:      X::AdHoc
    # Exception message: Cannot call method 'splice' on a null object
    # Looks like you failed 1 test of 5
    
# Failed test 'right exception type (X::TypeCheck::Splice)'
# at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/.precomp/BAAC3570AFB43B4001B683E1031B47492AF5735C.1452689425.64801/BB/BB756629C697A5B17B1A4761B25C96B447D4D80B line 1
    # Expected: X::TypeCheck::Splice
    # Got:      X::TypeCheck::Binding
    # Exception message: Type check failed in binding @arr; expected Positional but got Mu
    # Looks like you failed 1 test of 5
    
# Failed test 'right exception type (X::TypeCheck::Splice)'
# at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/.precomp/BAAC3570AFB43B4001B683E1031B47492AF5735C.1452689425.64801/BB/BB756629C697A5B17B1A4761B25C96B447D4D80B line 1
    # Expected: X::TypeCheck::Splice
    # Got:      X::AdHoc
    # Exception message: Cannot call method 'splice' on a null object
    # Looks like you failed 1 test of 5
    
# Failed test 'right exception type (X::TypeCheck::Splice)'
# at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/.precomp/BAAC3570AFB43B4001B683E1031B47492AF5735C.1452689425.64801/BB/BB756629C697A5B17B1A4761B25C96B447D4D80B line 1
    # Expected: X::TypeCheck::Splice
    # Got:      X::TypeCheck::Binding
    # Exception message: Type check failed in binding @arr; expected Positional but got Mu
    # Looks like you failed 1 test of 5
    
# Failed test 'right exception type (X::TypeCheck::Splice)'
# at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/.precomp/BAAC3570AFB43B4001B683E1031B47492AF5735C.1452689425.64801/BB/BB756629C697A5B17B1A4761B25C96B447D4D80B line 1
    # Expected: X::TypeCheck::Splice
    # Got:      X::AdHoc
    # Exception message: Cannot call method 'splice' on a null object
    # Looks like you failed 1 test of 5
    
# Failed test 'right exception type (X::TypeCheck::Splice)'
# at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/.precomp/BAAC3570AFB43B4001B683E1031B47492AF5735C.1452689425.64801/BB/BB756629C697A5B17B1A4761B25C96B447D4D80B line 1
    # Expected: X::TypeCheck::Splice
    # Got:      X::TypeCheck::Binding
    # Exception message: Type check failed in binding @arr; expected Positional but got Mu
    # Looks like you failed 1 test of 5
    
# Failed test 'right exception type (X::TypeCheck::Splice)'
# at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/.precomp/BAAC3570AFB43B4001B683E1031B47492AF5735C.1452689425.64801/BB/BB756629C697A5B17B1A4761B25C96B447D4D80B line 1
    # Expected: X::TypeCheck::Splice
    # Got:      X::AdHoc
    # Exception message: Cannot call method 'splice' on a null object
    # Looks like you failed 1 test of 5
    
# Failed test 'right exception type (X::TypeCheck::Splice)'
# at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/.precomp/BAAC3570AFB43B4001B683E1031B47492AF5735C.1452689425.64801/BB/BB756629C697A5B17B1A4761B25C96B447D4D80B line 1
    # Expected: X::TypeCheck::Splice
    # Got:      X::TypeCheck::Binding
    # Exception message: Type check failed in binding @arr; expected Positional but got Mu
    # Looks like you failed 1 test of 5
    
# Failed test 'right exception type (X::TypeCheck::Splice)'
# at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/.precomp/BAAC3570AFB43B4001B683E1031B47492AF5735C.1452689425.64801/BB/BB756629C697A5B17B1A4761B25C96B447D4D80B line 1
    # Expected: X::TypeCheck::Splice
    # Got:      X::AdHoc
    # Exception message: Cannot call method 'splice' on a null object
    # Looks like you failed 1 test of 5
 346    0   12    0  358
    12 todo   : somehow the test causes different typecheck error
S32-array/unshift.t................................# unshift() requires arguments
# .unshift should not work on scalars
# cannot unshift strings onto in Int array
  76    0    0    0   76
S32-basics/warn.t..................................WARNINGS for /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S32-basics/warn.t:
Useless use of "~" in expression "~Any" in sink context (line 34)
# It's OK to see this warning during a test run  in block  at t/spec/S32-basics/warn.t line 14
   7    0    0    0    7
S32-basics/xxKEY.rakudo.moar.......................# $s.BIND-KEY
# $s.DELETE-KEY
# $s.ASSIGN-KEY
# $sh.BIND-KEY
# $b.BIND-KEY
# $b.DELETE-KEY
# $b.ASSIGN-KEY
# $bh.BIND-KEY
# $m.BIND-KEY
# $m.DELETE-KEY
# $m.ASSIGN-KEY
# $mh.BIND-KEY
 127    0    2    0  129
     2 todo   : binding to a key in an undefine doesn't work?
S32-basics/xxPOS-native.t..........................# array[int].BIND-POS (existing)
# array[int].BIND-POS (non-existing)
# array[int].DELETE-POS (existing)
# array[int].DELETE-POS (non-existing)
# array[int8].BIND-POS (existing)
# array[int8].BIND-POS (non-existing)
# array[int8].DELETE-POS (existing)
# array[int8].DELETE-POS (non-existing)
# array[int16].BIND-POS (existing)
# array[int16].BIND-POS (non-existing)
# array[int16].DELETE-POS (existing)
# array[int16].DELETE-POS (non-existing)
# array[int32].BIND-POS (existing)
# array[int32].BIND-POS (non-existing)
# array[int32].DELETE-POS (existing)
# array[int32].DELETE-POS (non-existing)
# array[int64].BIND-POS (existing)
# array[int64].BIND-POS (non-existing)
# array[int64].DELETE-POS (existing)
# array[int64].DELETE-POS (non-existing)
# array[uint].BIND-POS (existing)
# array[uint].BIND-POS (non-existing)
# array[uint].DELETE-POS (existing)
# array[uint].DELETE-POS (non-existing)
# array[uint8].BIND-POS (existing)
# array[uint8].BIND-POS (non-existing)
# array[uint8].DELETE-POS (existing)
# array[uint8].DELETE-POS (non-existing)
# array[uint16].BIND-POS (existing)
# array[uint16].BIND-POS (non-existing)
# array[uint16].DELETE-POS (existing)
# array[uint16].DELETE-POS (non-existing)
# array[uint32].BIND-POS (existing)
# array[uint32].BIND-POS (non-existing)
# array[uint32].DELETE-POS (existing)
# array[uint32].DELETE-POS (non-existing)
# array[uint64].BIND-POS (existing)
# array[uint64].BIND-POS (non-existing)
# array[uint64].DELETE-POS (existing)
# array[uint64].DELETE-POS (non-existing)
 150    0    0    0  150
S32-basics/xxPOS.rakudo.moar.......................  55    0    0    5   60
     5 skipped: No such method 'BIND-POS' for invocant of type 'Any' RT #124766
S32-container/cat.rakudo.moar......................   0    0    0    6    6
     6 skipped: cat NYI RT #124456
S32-container/roundrobin.t.........................   6    0    0    0    6
S32-container/stringify.t..........................Use of uninitialized value of type Set in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block <unit> at t/spec/S32-container/stringify.t line 14
Use of uninitialized value of type Set in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block <unit> at t/spec/S32-container/stringify.t line 15
Use of uninitialized value of type SetHash in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block <unit> at t/spec/S32-container/stringify.t line 20
Use of uninitialized value of type SetHash in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block <unit> at t/spec/S32-container/stringify.t line 21
Use of uninitialized value of type Bag in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block <unit> at t/spec/S32-container/stringify.t line 25
Use of uninitialized value of type Bag in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block <unit> at t/spec/S32-container/stringify.t line 26
Use of uninitialized value of type BagHash in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block <unit> at t/spec/S32-container/stringify.t line 31
Use of uninitialized value of type BagHash in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block <unit> at t/spec/S32-container/stringify.t line 32
  16    0    0    0   16
S32-container/zip.rakudo.moar......................  12    0    0    2   14
     2 skipped: lvalue zip RT #124907
S32-exceptions/misc.rakudo.moar....................# did we throws-like X::Buf::AsStr?
# did we throws-like X::Buf::Pack?
# did we throws-like X::Buf::Pack?
# did we throws-like X::Buf::Pack::NonASCII?
# did we throws-like X::Attribute::Undeclared?
# did we throws-like X::Signature::Placeholder?
# did we throws-like X::Obsolete?
# did we throws-like X::Obsolete?
# did we throws-like X::Obsolete?
# did we throws-like X::Obsolete?
# did we throws-like X::Placeholder::Block?
# did we throws-like X::Placeholder::Block?
# did we throws-like X::Placeholder::Block?
# did we throws-like X::Placeholder::Mainline?
# did we throws-like X::Placeholder::Mainline?
# did we throws-like X::Placeholder::Mainline?
# did we throws-like X::Placeholder::Attribute?
# did we throws-like X::Parameter::Default?
# did we throws-like X::Parameter::Default?
# did we throws-like X::Parameter::Default?
# did we throws-like X::Parameter::Placeholder?
# did we throws-like X::Parameter::Twigil?
# did we throws-like X::Parameter::MultipleTypeConstraints?
# did we throws-like X::Parameter::AfterDefault?
# did we throws-like X::Parameter::AfterDefault?
# did we throws-like X::Redeclaration?
# did we throws-like X::Redeclaration?
# did we throws-like X::Redeclaration?
# did we throws-like X::Redeclaration?
# did we throws-like X::Redeclaration?
# did we throws-like X::Phaser::Multiple?
# did we throws-like X::Redeclaration?
# did we throws-like X::Redeclaration?
# did we throws-like X::Redeclaration?
# did we throws-like X::Method::Private::Permission?
# did we throws-like X::Method::Private::Unqualified?
# did we throws-like X::Bind?
# did we throws-like X::Bind?
# did we throws-like X::Bind::NativeType?
# did we throws-like X::Bind::ZenSlice?
# did we throws-like X::Bind::ZenSlice?
# did we throws-like X::Bind::Slice?
# did we throws-like X::Bind::Slice?
# did we throws-like X::Obsolete?
# did we throws-like X::Obsolete?
# did we throws-like X::Obsolete?
# did we throws-like X::Obsolete?
# did we throws-like X::Obsolete?
# did we throws-like X::Syntax::Name::Null?
# did we throws-like X::Syntax::UnlessElse?
# did we throws-like X::Syntax::UnlessElse?
# did we throws-like X::Syntax::P5?
# did we throws-like X::Syntax::NegatedPair?
# did we throws-like X::Syntax::Variable::Numeric?
# did we throws-like X::Syntax::Variable::Numeric?
# did we throws-like X::Syntax::Variable::Match?
# did we throws-like X::Syntax::Variable::Twigil?
Use of uninitialized value of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in any throw at src/Perl6/World.nqp line 3740
# did we throws-like X::Syntax::Variable::Twigil?
Use of uninitialized value of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in any throw at src/Perl6/World.nqp line 3740
# did we throws-like X::Syntax::Variable::Twigil?
# did we throws-like X::Comp::NYI?
# did we throws-like X::Syntax::Variable::IndirectDeclaration?
# did we throws-like X::Undeclared?
# did we throws-like X::Undeclared?
# did we throws-like X::Syntax::Augment::WithoutMonkeyTyping?
# MONKEY-TYPING applies lexically
# did we throws-like X::Syntax::Augment::Illegal?
# did we throws-like X::Syntax::Extension::Category?
# did we throws-like X::Syntax::Extension::Category?
# did we throws-like X::Syntax::Extension::Null?
# did we throws-like X::Syntax::InfixInTermPosition?
# did we throws-like X::Signature::NameClash?
# did we throws-like X::Does::TypeObject?
# did we throws-like X::Does::TypeObject?
# did we throws-like X::Does::TypeObject?
# did we throws-like X::Role::Initialization?
# did we throws-like X::Role::Initialization?
# did we throws-like X::Role::Initialization?
# did we throws-like X::Role::Initialization?
# did we throws-like X::Comp::Group?
# did we throws-like X::Comp::Group?
# did we throws-like X::Comp::Group?
# did we throws-like X::Syntax::Regex::NullRegex?
# did we throws-like X::Syntax::Regex::NullRegex?
# did we throws-like X::Syntax::Regex::NullRegex?
# did we throws-like X::Syntax::Regex::NullRegex?
# did we throws-like X::Syntax::Regex::NullRegex?
# did we throws-like X::Syntax::Regex::NullRegex?
# did we throws-like X::Syntax::Regex::NullRegex?
# did we throws-like X::Syntax::Regex::NullRegex?
# did we throws-like X::Syntax::Regex::NullRegex?
# did we throws-like X::Parameter::WrongOrder?
# did we throws-like X::Parameter::WrongOrder?
# did we throws-like X::Parameter::WrongOrder?
    
# Failed test ''#`' died'
# at t/spec/S32-exceptions/misc.rakudo.moar line 180
    # Looks like you failed 1 test of 2
# Did $^A throw Perl5Var?
# Did $^B throw Perl5Var?
# Did $^C throw Perl5Var?
# Did $^D throw Perl5Var?
# Did $^E throw Perl5Var?
# Did $^F throw Perl5Var?
# Did $^G throw Perl5Var?
# Did $^H throw Perl5Var?
# Did $^I throw Perl5Var?
# Did $^J throw Perl5Var?
# Did $^K throw Perl5Var?
# Did $^L throw Perl5Var?
# Did $^M throw Perl5Var?
# Did $^N throw Perl5Var?
# Did $^O throw Perl5Var?
# Did $^P throw Perl5Var?
# Did $^Q throw Perl5Var?
# Did $^R throw Perl5Var?
# Did $^S throw Perl5Var?
# Did $^T throw Perl5Var?
# Did $^U throw Perl5Var?
# Did $^V throw Perl5Var?
# Did $^W throw Perl5Var?
# Did $^X throw Perl5Var?
# Did $^Y throw Perl5Var?
# Did $^Z throw Perl5Var?
# Did $* throw Perl5Var?
# Did $" throw Perl5Var?
# Did $$ throw Perl5Var?
# Did $& throw Perl5Var?
# Did $` throw Perl5Var?
# Did $' throw Perl5Var?
# Did $| throw Perl5Var?
# Did $? throw Perl5Var?
# Did $] throw Perl5Var?
# Did $: throw Perl5Var?
# Did $= throw Perl5Var?
# Did $^ throw Perl5Var?
# Did $~ throw Perl5Var?
# Did @- throw Perl5Var?
# Did @+ throw Perl5Var?
# Did %- throw Perl5Var?
# Did %+ throw Perl5Var?
# Did %! throw Perl5Var?
# did we throws-like X::Obsolete?
# Error message for $\ mentions .nl-out
# Error message for $/ mentions .nl-in
# non-variable $ in double quotes requires backslash
# did we throws-like X::Syntax::Confused?
# did we throws-like X::Syntax::Missing?
# did we throws-like X::Syntax::Reserved?
# did we throws-like X::Syntax::Reserved?
# did we throws-like X::Backslash::UnrecognizedSequence?
# did we throws-like X::Value::Dynamic?
# did we throws-like X::Syntax::Self::WithoutObject?
# did we throws-like X::Syntax::VirtualCall?
# did we throws-like X::Syntax::NoSelf?
# did we throws-like X::Syntax::NoSelf?
# did we throws-like X::Attribute::NoPackage?
# did we throws-like X::Attribute::Package?
# did we throws-like X::Attribute::Package?
# did we throws-like X::Declaration::Scope?
# did we throws-like X::Declaration::Scope?
# did we throws-like X::Declaration::Scope::Multi?
# did we throws-like X::Anon::Multi?
# did we throws-like X::Anon::Multi?
# did we throws-like X::Anon::Multi?
# did we throws-like X::Anon::Augment?
# did we throws-like X::Augment::NoSuchType?
# did we throws-like X::Augment::NoSuchType?
# did we throws-like X::Syntax::Number::RadixOutOfRange?
# did we throws-like X::Syntax::Number::RadixOutOfRange?
# did we throws-like X::Syntax::Regex::Adverb?
# did we throws-like X::Syntax::Signature::InvocantMarker?
# did we throws-like X::OutOfRange?
# did we throws-like X::OutOfRange?
# did we throws-like X::OutOfRange?
# did we throws-like X::Routine::Unwrap?
# did we throws-like X::Constructor::Positional?
# did we throws-like X::Constructor::Positional?
# did we throws-like X::Hash::Store::OddNumber?
# did we throws-like X::UnitScope::Invalid?
# did we throws-like X::Syntax::Missing?
# did we throws-like X::Syntax::Missing?
# did we throws-like X::Syntax::Missing?
# did we throws-like X::Syntax::NonAssociative?
# did we throws-like X::Package::Stubbed?
# did we throws-like X::Phaser::PrePost?
# did we throws-like X::Phaser::PrePost?
# did we throws-like X::Str::Numeric?
# did we throws-like X::Str::Match::x?
# did we throws-like X::Str::Trans::IllegalKey?
# did we throws-like X::Str::Trans::InvalidArg?
# did we throws-like X::Method::NotFound?
# did we throws-like X::Method::NotFound?
# did we throws-like X::Method::NotFound?
# did we throws-like X::Method::NotFound?
# did we throws-like X::Method::InvalidQualifier?
# did we throws-like X::StubCode?
# did we throws-like X::StubCode?
# did we throws-like Exception?
# did we throws-like X::Sequence::Deduction?
# did we throws-like X::Composition::NotComposable?
# did we throws-like X::TypeCheck::Binding?
# did we throws-like X::TypeCheck::Return?
# did we throws-like X::Comp::AdHoc?
# did we throws-like X::Comp::AdHoc?
# we don't allow args even if the same
# did we throws-like X::Comp::AdHoc?
# did we throws-like X::TypeCheck::Return?
# did we throws-like X::TypeCheck::Assignment?
# did we throws-like X::TypeCheck::Assignment?
# did we throws-like X::Assignment::RO?
# did we throws-like X::Assignment::RO?
# did we throws-like X::Assignment::RO?
# did we throws-like X::Assignment::RO?
# did we throws-like X::Assignment::RO?
# did we throws-like X::Method::NotFound?
# did we throws-like X::Mixin::NotComposable?
# did we throws-like X::Mixin::NotComposable?
# did we throws-like X::ControlFlow?
# did we throws-like X::ControlFlow?
# did we throws-like X::ControlFlow?
# did we throws-like X::Inheritance::Unsupported?
# did we throws-like X::Export::NameClash?
# did we throws-like X::HyperOp::NonDWIM?
# did we throws-like X::ControlFlow::Return?
# did we throws-like X::Temporal::InvalidFormat?
# did we throws-like X::Temporal::InvalidFormat?
# did we throws-like X::Eval::NoSuchLang?
# did we throws-like X::DateTime::TimezoneClash?
# did we throws-like X::Numeric::Real?
# did we throws-like X::Numeric::Real?
# did we throws-like X::TypeCheck::Binding?
# did we throws-like X::Syntax::Confused?
# did we throws-like X::Syntax::Confused?
# did we throws-like X::Syntax::Confused?
# did we throws-like X::Undeclared?
# did we throws-like X::Undeclared?
# did we throws-like X::Undeclared?
# did we throws-like X::Inheritance::UnknownParent?
# did we throws-like X::Inheritance::UnknownParent?
# did we throws-like X::Inheritance::UnknownParent?
# did we throws-like X::Parameter::InvalidType?
# did we throws-like X::Undeclared?
# did we throws-like X::Undeclared?
# did we throws-like X::Undeclared?
# did we throws-like X::Inheritance::SelfInherit?
# did we throws-like X::Undeclared::Symbols?
# did we throws-like X::Syntax::Malformed::Elsif?
# did we throws-like X::Method::NotFound?
# did we throws-like X::Package::Stubbed?
# did we throws-like X::Caller::NotDynamic?
# Variable '$abd' is not declared. Did you mean any of these?
#     $abc
#     $abe

# did we throws-like X::TypeCheck::Argument?
# did we throws-like X::TypeCheck::Argument?
# did we throws-like X::TypeCheck::Argument?
# did we throws-like X::TypeCheck::Argument?
# did we throws-like X::TypeCheck::Argument?
# did we throws-like X::Method::NotFound?
# did we throws-like X::Comp::Group?
# did we throws-like X::Comp::Group?
# did we throws-like X::Syntax::Confused?
# did we throws-like X::Syntax::Regex::Unspace?
# did we throws-like X::Comp::Group?
# did we throws-like X::Syntax::Regex::SpacesInBareRange?
# did we throws-like X::Comp::Group?
# unknown operator should complain better
# did we throws-like X::Dynamic::NotFound?
# did we throws-like X::Comp::Group?
# did we throws-like Exception?
# did we throws-like X::Syntax::Term::MissingInitializer?
# adequate error message when undeclared type is used in "when" clause
# no NullPMC access error but exception X::Multi::NoMatch
Use of uninitialized value of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at t/spec/S32-exceptions/misc.rakudo.moar line 599
# adequate error message when declaring "my Int a;"
# adequate error message when declaring "my Int a"
# adequate error message when calling bare "ord"
# fail sensibly for empty lookup.
# did we throws-like X::Undeclared?
# did we throws-like X::Comp::Group?
# did we throws-like X::Undeclared::Symbols?
# did we throws-like X::Comp::BeginTime?
# did we throws-like X::Comp::BeginTime?
# did we throws-like X::Syntax::Variable::BadType?
# did we throws-like X::Parameter::BadType?
# did we throws-like X::Undeclared::Symbols?
# did we throws-like X::Undeclared::Symbols?
# did we throws-like X::Syntax::Variable::ConflictingTypes?
# X::Undeclared precedes the name and doesn't expect anything else
# did we throws-like X::Syntax::Extension::SpecialForm?
# did we throws-like X::Syntax::Extension::SpecialForm?
# did we throws-like X::Syntax::Extension::SpecialForm?
# did we throws-like X::Syntax::Extension::SpecialForm?
# did we throws-like X::Syntax::Extension::SpecialForm?
# did we throws-like X::Redeclaration?
# did we throws-like X::Undeclared::Symbols?
# did we throws-like X::Comp::BeginTime?
# did we throws-like X::Syntax::Missing?
# did we throws-like X::Redeclaration?
# did we throws-like X::Redeclaration?
# did we throws-like X::Redeclaration?
# did we throws-like X::Redeclaration?
# did we throws-like X::Redeclaration?
# did we throws-like X::Str::Numeric?
# did we throws-like X::TooLateForREPR?
# did we throws-like X::ControlFlow::Return?
# did we throws-like X::ControlFlow::Return?
# did we throws-like X::ControlFlow::Return?
# did we throws-like X::ControlFlow::Return?
# did we throws-like X::Syntax::Malformed?
# did we throws-like X::NotParametric?
# did we throws-like X::NotParametric?
# did we throws-like X::NotParametric?
# did we throws-like X::NotParametric?
# did we throws-like X::NotParametric?
# did we throws-like X::NotParametric?
# did we throws-like Exception?
# did we throws-like Exception?
# did we throws-like Exception?
# did we throws-like Exception?
# did we throws-like Exception?
# did we throws-like Exception?
# did we throws-like X::InvalidType?
# did we throws-like X::InvalidType?
# did we throws-like X::InvalidType?
# did we throws-like X::Syntax::Malformed?
# did we throws-like X::Multi::NoMatch?
# did we throws-like Exception?
# did we throws-like X::Syntax::Adverb?
# did we throws-like X::Parameter::InvalidType?
# did we throws-like X::TypeCheck::Assignment?
# did we throws-like X::TypeCheck::Binding?
# did we throws-like X::Parameter::Default::TypeCheck?
# did we throws-like X::Undeclared::Symbols?
# did we throws-like X::Undeclared::Symbols?
# did we throws-like X::Bind?
 389    0    1    0  390
     1 todo   : parsing regression RT \#124679
S32-hash/adverbs.rakudo.moar.......................# did we throws-like X::Adverb?
# did we throws-like X::Adverb?
# did we throws-like X::Adverb?
# did we throws-like X::Adverb?
Use of uninitialized value %a of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value %a of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value %a of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value %a of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
# did we throws-like X::Adverb?
# did we throws-like X::Adverb?
Use of uninitialized value %a of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value %a of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value %a of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value %a of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value %a of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value %a of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value %a of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
# did we throws-like X::Adverb?
# did we throws-like X::Adverb?
# did we throws-like X::Adverb?
# did we throws-like X::Adverb?
# did we throws-like X::Adverb?
# did we throws-like X::Adverb?
# did we throws-like X::Adverb?
# did we throws-like X::Adverb?
Use of uninitialized value %a of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value %a of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value %a of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value %a of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value %a of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value %a of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value %a of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value %a of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value %a of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value %a of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value %a of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value %a of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value %a of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value %a of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
# did we throws-like X::Adverb?
# did we throws-like X::Adverb?
Use of uninitialized value %a of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value %a of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value %a of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value %a of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value %a of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value %a of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value %a of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value %a of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value %a of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value %a of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value %a of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value %a of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value %a of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value %a of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
# did we throws-like X::Adverb?
# did we throws-like X::Adverb?
Use of uninitialized value %a of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value %a of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value %a of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value %a of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value %a of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value %a of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value %a of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value %a of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value %a of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value %a of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value %a of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value %a of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value %a of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value %a of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
# did we throws-like X::Adverb?
# did we throws-like X::Adverb?
Use of uninitialized value %a of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value %a of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value %a of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value %a of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value %a of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value %a of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value %a of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
# did we throws-like X::Adverb?
# did we throws-like X::Adverb?
Use of uninitialized value %a of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value %a of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value %a of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value %a of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 137
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 137
Use of uninitialized value %a of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 137
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 137
Use of uninitialized value %a of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 137
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 137
Use of uninitialized value %a of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 137
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 137
# did we throws-like X::Adverb?
# did we throws-like X::Adverb?
# did we throws-like X::Adverb?
# did we throws-like X::Adverb?
# did we throws-like X::Adverb?
# did we throws-like X::Adverb?
# did we throws-like X::Adverb?
# did we throws-like X::Adverb?
# did we throws-like X::Adverb?
# did we throws-like X::Adverb?
# did we throws-like X::Adverb?
Use of uninitialized value %i of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %i of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %i of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value %i of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
# did we throws-like X::Adverb?
# did we throws-like X::Adverb?
Use of uninitialized value %i of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %i of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %i of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %i of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %i of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %i of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value %i of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
# did we throws-like X::Adverb?
# did we throws-like X::Adverb?
# did we throws-like X::Adverb?
# did we throws-like X::Adverb?
# did we throws-like X::Adverb?
# did we throws-like X::Adverb?
# did we throws-like X::Adverb?
# did we throws-like X::Adverb?
Use of uninitialized value %i of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %i of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %i of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %i of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %i of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %i of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %i of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %i of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %i of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %i of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %i of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %i of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %i of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %i of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
# did we throws-like X::Adverb?
# did we throws-like X::Adverb?
Use of uninitialized value %i of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %i of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %i of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %i of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %i of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %i of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %i of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %i of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %i of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %i of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %i of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %i of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %i of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %i of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
# did we throws-like X::Adverb?
# did we throws-like X::Adverb?
Use of uninitialized value %i of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %i of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %i of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %i of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %i of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %i of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %i of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %i of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %i of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %i of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %i of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %i of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %i of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %i of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
# did we throws-like X::Adverb?
# did we throws-like X::Adverb?
Use of uninitialized value %i of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %i of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %i of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %i of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %i of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in method Str at ././CORE.setting.moarvm line 1
Use of uninitialized value %i of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in method Str at ././CORE.setting.moarvm line 1
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in method Str at ././CORE.setting.moarvm line 1
Use of uninitialized value %i of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in method Str at ././CORE.setting.moarvm line 1
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in method Str at ././CORE.setting.moarvm line 1
# did we throws-like X::Adverb?
# did we throws-like X::Adverb?
Use of uninitialized value %i of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in method Str at ././CORE.setting.moarvm line 1
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in method Str at ././CORE.setting.moarvm line 1
Use of uninitialized value %i of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in method Str at ././CORE.setting.moarvm line 1
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in method Str at ././CORE.setting.moarvm line 1
Use of uninitialized value %i of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in method Str at ././CORE.setting.moarvm line 1
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in method Str at ././CORE.setting.moarvm line 1
Use of uninitialized value %i of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in method Str at ././CORE.setting.moarvm line 1
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %i of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %i of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in method Str at ././CORE.setting.moarvm line 1
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in method Str at ././CORE.setting.moarvm line 1
Use of uninitialized value %i of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in method Str at ././CORE.setting.moarvm line 1
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in method Str at ././CORE.setting.moarvm line 1
# did we throws-like X::Adverb?
# did we throws-like X::Adverb?
# did we throws-like X::Adverb?
# did we throws-like X::Adverb?
# did we throws-like X::Adverb?
# did we throws-like X::Adverb?
# did we throws-like X::Adverb?
# did we throws-like X::Adverb?
# did we throws-like X::Adverb?
# did we throws-like X::Adverb?
# did we throws-like X::Adverb?
Use of uninitialized value %c of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in method Str at ././CORE.setting.moarvm line 1
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in method Str at ././CORE.setting.moarvm line 1
Use of uninitialized value %c of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in method Str at ././CORE.setting.moarvm line 1
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in method Str at ././CORE.setting.moarvm line 1
Use of uninitialized value %c of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value %c of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
# did we throws-like X::Adverb?
# did we throws-like X::Adverb?
Use of uninitialized value %c of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in method Str at ././CORE.setting.moarvm line 1
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in method Str at ././CORE.setting.moarvm line 1
Use of uninitialized value %c of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in method Str at ././CORE.setting.moarvm line 1
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in method Str at ././CORE.setting.moarvm line 1
Use of uninitialized value %c of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in method Str at ././CORE.setting.moarvm line 1
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in method Str at ././CORE.setting.moarvm line 1
Use of uninitialized value %c of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in method Str at ././CORE.setting.moarvm line 1
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in method Str at ././CORE.setting.moarvm line 1
Use of uninitialized value %c of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in method Str at ././CORE.setting.moarvm line 1
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in method Str at ././CORE.setting.moarvm line 1
Use of uninitialized value %c of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value %c of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
# did we throws-like X::Adverb?
# did we throws-like X::Adverb?
# did we throws-like X::Adverb?
# did we throws-like X::Adverb?
# did we throws-like X::Adverb?
# did we throws-like X::Adverb?
# did we throws-like X::Adverb?
# did we throws-like X::Adverb?
Use of uninitialized value %c of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in method Str at ././CORE.setting.moarvm line 1
Use of uninitialized value %c of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in method Str at ././CORE.setting.moarvm line 1
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %c of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %c of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %c of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %c of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %c of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %c of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %c of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %c of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %c of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %c of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %c of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %c of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
# did we throws-like X::Adverb?
# did we throws-like X::Adverb?
Use of uninitialized value %c of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %c of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %c of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %c of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %c of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %c of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %c of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %c of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %c of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %c of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %c of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %c of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %c of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %c of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
# did we throws-like X::Adverb?
# did we throws-like X::Adverb?
Use of uninitialized value %c of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %c of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %c of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %c of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %c of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %c of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %c of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %c of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %c of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %c of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %c of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %c of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %c of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %c of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
# did we throws-like X::Adverb?
# did we throws-like X::Adverb?
Use of uninitialized value %c of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %c of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %c of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %c of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %c of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %c of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %c of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
# did we throws-like X::Adverb?
# did we throws-like X::Adverb?
Use of uninitialized value %c of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %c of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %c of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %c of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %c of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %c of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %c of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
# did we throws-like X::Adverb?
# did we throws-like X::Adverb?
# did we throws-like X::Adverb?
# did we throws-like X::Adverb?
# did we throws-like X::Adverb?
# did we throws-like X::Adverb?
# did we throws-like X::Adverb?
# did we throws-like X::Adverb?
# did we throws-like X::Adverb?
# did we throws-like X::Adverb?
# did we throws-like X::Adverb?
Use of uninitialized value %j of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %j of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %j of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value %j of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
# did we throws-like X::Adverb?
# did we throws-like X::Adverb?
Use of uninitialized value %j of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %j of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %j of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %j of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %j of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %j of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value %j of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
# did we throws-like X::Adverb?
# did we throws-like X::Adverb?
# did we throws-like X::Adverb?
# did we throws-like X::Adverb?
# did we throws-like X::Adverb?
# did we throws-like X::Adverb?
# did we throws-like X::Adverb?
# did we throws-like X::Adverb?
Use of uninitialized value %j of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %j of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %j of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %j of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %j of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %j of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %j of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %j of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %j of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %j of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %j of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %j of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %j of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %j of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
# did we throws-like X::Adverb?
# did we throws-like X::Adverb?
Use of uninitialized value %j of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %j of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %j of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %j of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %j of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %j of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %j of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %j of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %j of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %j of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %j of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %j of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %j of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %j of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
# did we throws-like X::Adverb?
# did we throws-like X::Adverb?
Use of uninitialized value %j of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %j of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %j of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %j of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %j of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %j of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %j of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %j of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %j of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %j of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %j of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %j of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %j of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %j of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
# did we throws-like X::Adverb?
# did we throws-like X::Adverb?
Use of uninitialized value %j of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %j of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %j of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %j of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %j of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %j of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %j of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
# did we throws-like X::Adverb?
# did we throws-like X::Adverb?
Use of uninitialized value %j of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %j of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %j of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %j of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %j of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %j of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value %j of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
Use of uninitialized value $T of type Int in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 135
# did we throws-like X::Adverb?
# did we throws-like X::Adverb?
# did we throws-like X::Adverb?
# did we throws-like X::Adverb?
# did we throws-like X::Adverb?
# did we throws-like X::Adverb?
# did we throws-like X::Adverb?
1076    0    0   52 1128
    52 skipped: does not die reliably, not reproducable alas
S32-hash/antipairs.t...............................   5    0    0    0    5
S32-hash/delete-adverb.t........................... 131    0    0    0  131
S32-hash/delete.t..................................# Can't :delete a scalar
   8    0    0    0    8
S32-hash/exists-adverb.t...........................Use of Nil in string context  in block  at t/spec/S32-hash/exists-adverb.t line 50
Use of Nil in string context  in block  at t/spec/S32-hash/exists-adverb.t line 55
  47    0    0    0   47
S32-hash/exists.rakudo.moar........................  14    0    0    1   15
     1 skipped: unspecced
S32-hash/invert.t..................................   5    0    0    0    5
S32-hash/keys_values.t.............................  14    0    0    0   14
S32-hash/kv.t......................................  27    0    0    0   27
S32-hash/pairs.t...................................Use of uninitialized value %rt117935 of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
  25    0    0    0   25
S32-hash/perl.t....................................  12    0    0    0   12
S32-hash/push.t....................................  10    0    0    0   10
S32-hash/slice.rakudo.moar.........................  19    0   10    0   29
     6 todo   : binding on hash elements unimplemented
     2 todo   : binding on hash elements unimplemented RT \#124779
     2 todo   : binding on hash elements unimplemented RT \#124780
S32-io/IO-Socket-Async-UDP.t.......................   2    0    0    0    2
S32-io/IO-Socket-Async.t...........................   6    0    0    0    6
S32-io/IO-Socket-INET.t............................   0    0    0   50   50
    50 skipped: Operating system not yet supported
S32-io/chdir.rakudo.moar...........................   8    0    0    2   10
     2 skipped: spec non-conformance due to missing sink context
S32-io/copy.t......................................# .IO.copy normal file with :createonly
# .copy() normal file with :createonly
  41    0    0    0   41
S32-io/dir.rakudo.moar.............................   9    0    3    1   13
     1 skipped: entries are still IO::Path RT #124785
     1 todo   : $*CWD misses slash at end still RT \#124787
     1 todo   : directories are not marked with trailing / yet RT \#124784
     1 todo   : dirname is not yet absolute RT \#124786
S32-io/file-tests.t................................# did we throws-like X::IO::DoesNotExist?
# did we throws-like X::IO::DoesNotExist?
  34    0    0    0   34
S32-io/io-handle.t.................................   3    0    0    0    3
S32-io/io-path-cygwin.rakudo.moar..................Use of uninitialized value $CWD of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block <unit> at t/spec/S32-io/io-path-cygwin.rakudo.moar line 9
# no path not allowed
# empty not allowed
  50    0    1    0   51
     1 todo   : resolve NYI, needs nqp::readlink RT \#124781
S32-io/io-path-unix.rakudo.moar....................Use of uninitialized value $CWD of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block <unit> at t/spec/S32-io/io-path-unix.rakudo.moar line 9
# no path not allowed
# empty not allowed
  35    0    1    0   36
     1 todo   : resolve NYI, needs nqp::readlink RT \#124782
S32-io/io-path-win.rakudo.moar.....................Use of uninitialized value $CWD of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block <unit> at t/spec/S32-io/io-path-win.rakudo.moar line 8
# no path not allowed
# empty not allowed
  49    0    1    0   50
     1 todo   : resolve NYI, needs nqp::readlink RT \#124783
S32-io/io-path.t...................................  17    0    0    0   17
S32-io/io-spec-cygwin.t............................ 100    0    0    2  102
     2 skipped: cygwin on-platform tests
S32-io/io-spec-unix.t..............................Use of uninitialized value $patharg of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block <unit> at t/spec/S32-io/io-spec-unix.t line 47
 130    0    0    0  130
S32-io/io-spec-win.t...............................# Warning expected here:
Use of uninitialized value $patharg of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block <unit> at t/spec/S32-io/io-spec-win.t line 52
# split tests
# join tests
 206    0    0    3  209
     3 skipped: Win32ish on-platform tests
S32-io/move.t......................................WARNINGS for /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S32-io/move.t:
Useless use of constant string "move() missing file" in sink context (line 65)
# .IO.move non-existent file
# .IO.move createonly fail
# did we throws-like X::IO::Move?
# move createonly fail
  29    0    0    0   29
S32-io/native-descriptor.t.........................   4    0    0    0    4
S32-io/note.t......................................   6    0    0    0    6
S32-io/other.t.....................................  60    0    0    0   60
S32-io/pipe.t......................................# Child succeeds but does not print anything
# Child succeeds and prints something
# Child succeeds and prints something
# Child fails and prints nothing
# Child fails and prints nothing
# Child fails and prints nothing
# Child fails and prints nothing
# Child fails and prints something
# Child fails and prints something
  14    0    0    0   14
S32-io/rename.t....................................WARNINGS for /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S32-io/rename.t:
Useless use of constant string ".IO.rename missing file" in sink context (line 65)
# .IO.rename non-existent file
# .IO.rename createonly fail
# did we throws-like X::IO::Rename?
# rename createonly fail
  29    0    0    0   29
S32-io/slurp.t.....................................  17    0    0    0   17
S32-io/socket-recv-vs-read.t.......................  11    0    0    0   11
S32-io/spurt.t.....................................  35    0    0    0   35
S32-list/categorize.t..............................  28    0    0    0   28
S32-list/classify.rakudo.moar......................  36    0    1    3   40
     3 skipped: Cannot use bind operator with this LHS RT #124751
     1 todo   : Not sure how this should be fixed
S32-list/combinations.t............................   8    0    0    0    8
S32-list/create.t..................................   6    0    0    0    6
S32-list/end.t.....................................# ... end() dies without an argument
  14    0    0    0   14
S32-list/first-end-k.rakudo.moar...................# did we throws-like X::Match::Bool?
Use of uninitialized value of type Any in numeric context  in block  at t/spec/S32-list/first-end-k.rakudo.moar line 77
# did we throws-like X::Match::Bool?
Use of uninitialized value of type Any in numeric context  in block  at t/spec/S32-list/first-end-k.rakudo.moar line 78
  24    0    0    2   26
     2 skipped: adverbial block RT #124754
S32-list/first-end-p.t.............................# did we throws-like X::Match::Bool?
Use of uninitialized value of type Any in numeric context  in block  at t/spec/S32-list/first-end-p.t line 75
# did we throws-like X::Match::Bool?
Use of uninitialized value of type Any in numeric context  in block  at t/spec/S32-list/first-end-p.t line 76
  24    0    0    0   24
S32-list/first-end-v.t.............................# did we throws-like X::Match::Bool?
Use of uninitialized value of type Any in numeric context  in block  at t/spec/S32-list/first-end-v.t line 75
# did we throws-like X::Match::Bool?
Use of uninitialized value of type Any in numeric context  in block  at t/spec/S32-list/first-end-v.t line 76
# did we throws-like Exception?
  24    0    0    0   24
S32-list/first-end.t...............................# did we throws-like X::Match::Bool?
Use of uninitialized value of type Any in numeric context  in block  at t/spec/S32-list/first-end.t line 75
# did we throws-like X::Match::Bool?
Use of uninitialized value of type Any in numeric context  in block  at t/spec/S32-list/first-end.t line 76
  24    0    0    0   24
S32-list/first-k.rakudo.moar.......................# did we throws-like X::Match::Bool?
Use of uninitialized value of type Any in numeric context  in block  at t/spec/S32-list/first-k.rakudo.moar line 77
# did we throws-like X::Match::Bool?
Use of uninitialized value of type Any in numeric context  in block  at t/spec/S32-list/first-k.rakudo.moar line 78
  23    0    0    2   25
     2 skipped: adverbial block RT #124758
S32-list/first-p.t.................................# did we throws-like X::Match::Bool?
Use of uninitialized value of type Any in numeric context  in block  at t/spec/S32-list/first-p.t line 71
# did we throws-like X::Match::Bool?
Use of uninitialized value of type Any in numeric context  in block  at t/spec/S32-list/first-p.t line 72
  24    0    0    0   24
S32-list/first-v.t.................................# did we throws-like X::Match::Bool?
Use of uninitialized value of type Any in numeric context  in block  at t/spec/S32-list/first-v.t line 71
# did we throws-like X::Match::Bool?
Use of uninitialized value of type Any in numeric context  in block  at t/spec/S32-list/first-v.t line 72
# did we throws-like Exception?
  24    0    0    0   24
S32-list/first.rakudo.moar.........................# did we throws-like X::Match::Bool?
Use of uninitialized value of type Any in numeric context  in block  at t/spec/S32-list/first.rakudo.moar line 84
# did we throws-like X::Match::Bool?
Use of uninitialized value of type Any in numeric context  in block  at t/spec/S32-list/first.rakudo.moar line 85
  26    0    0    2   28
     2 skipped: adverbial block RT #124765
S32-list/grep-k.rakudo.moar........................# did we throws-like X::Match::Bool?
Use of uninitialized value of type Any in numeric context  in block  at t/spec/S32-list/grep-k.rakudo.moar line 106
# did we throws-like X::Match::Bool?
Use of uninitialized value of type Any in numeric context  in block  at t/spec/S32-list/grep-k.rakudo.moar line 107
  22    0    6   12   40
     6 skipped: adverbial block RT #124759
     6 skipped: adverbial block RT #124760
     6 todo   : closure as non-final argument RT \#124761
S32-list/grep-kv.t.................................# did we throws-like X::Match::Bool?
Use of uninitialized value of type Any in numeric context  in block  at t/spec/S32-list/grep-kv.t line 63
# did we throws-like X::Match::Bool?
Use of uninitialized value of type Any in numeric context  in block  at t/spec/S32-list/grep-kv.t line 64
  17    0    0    0   17
S32-list/grep-p.t..................................# did we throws-like X::Match::Bool?
Use of uninitialized value of type Any in numeric context  in block  at t/spec/S32-list/grep-p.t line 64
# did we throws-like X::Match::Bool?
Use of uninitialized value of type Any in numeric context  in block  at t/spec/S32-list/grep-p.t line 65
  17    0    0    0   17
S32-list/grep-v.t..................................# did we throws-like X::Match::Bool?
Use of uninitialized value of type Any in numeric context  in block  at t/spec/S32-list/grep-v.t line 64
# did we throws-like X::Match::Bool?
Use of uninitialized value of type Any in numeric context  in block  at t/spec/S32-list/grep-v.t line 65
# did we throws-like Exception?
  17    0    0    0   17
S32-list/grep.rakudo.moar..........................# did we throws-like X::Match::Bool?
Use of uninitialized value of type Any in numeric context  in block  at t/spec/S32-list/grep.rakudo.moar line 121
# did we throws-like X::Match::Bool?
Use of uninitialized value of type Any in numeric context  in block  at t/spec/S32-list/grep.rakudo.moar line 122
  25    0    0   12   37
     6 skipped: adverbial block RT #124755
     6 skipped: adverbial block RT #124756
S32-list/head.t....................................  24    0    0    0   24
S32-list/join.t....................................Use of uninitialized value <element> of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block <unit> at t/spec/S32-list/join.t line 101
Use of uninitialized value <element> of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block <unit> at t/spec/S32-list/join.t line 101
Use of uninitialized value <element> of type Mu in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block <unit> at t/spec/S32-list/join.t line 106
Use of uninitialized value <element> of type Mu in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block <unit> at t/spec/S32-list/join.t line 106
  38    0    0    0   38
S32-list/map.rakudo.moar...........................WARNINGS for /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S32-list/map.rakudo.moar:
Useless use of $_ in sink context (line 225)
  52    0    0    6   58
     1 skipped: Too few positionals passed; expected 3 arguments but got 1; RT #125146
     1 skipped: Too few positionals passed; expected 5 arguments but got 4; RT #125146
     2 skipped: adverbial block RT #124752
     2 skipped: closure as non-final argument RT #124753
S32-list/map_function_return_values.t..............   2    0    0    0    2
S32-list/minmax.rakudo.moar........................  99    0    0    2  101
     2 skipped: post-GLR
S32-list/permutations.t............................   2    0    0    0    2
S32-list/pick.t....................................  57    0    0    0   57
S32-list/produce.t.................................Use of uninitialized value % of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at t/spec/S32-list/produce.t line 65
  25    0    0    0   25
S32-list/reduce.t..................................Use of uninitialized value % of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at t/spec/S32-list/reduce.t line 53
  15    0    0    0   15
S32-list/repeated.t................................  34    0    0    0   34
S32-list/reverse.rakudo.moar.......................  18    0    1    0   19
     1 todo   : RT \#77914
S32-list/roll.t....................................  49    0    0    0   49
S32-list/rotor.t...................................# rotor(3, :partial) (range)
# rotor(2	1) (range)
# rotor(3	-1) (range)
# rotor(2, 3) (range)
# rotor(1	1, 3) (range)
# rotor(1	1, 3, :partial) (range)
# rotor(1	1, 3	-1, :partial) (range)
   9    0    0    0    9
S32-list/seq.rakudo.moar...........................Use of uninitialized value @n of type Mu in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value <element> of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value @n of type Mu in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value @n of type Mu in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value @n of type Mu in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value @n of type Mu in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
  25    0    1    0   26
     1 todo   : Cannot assign immutable
S32-list/sort.t....................................Use of uninitialized value $b of type Code in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at t/spec/S32-list/sort.t line 187
# sort does not accept 0-arity sub
# sort does not accept &rand
  30    0    0    0   30
S32-list/squish.t..................................Use of uninitialized value of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
Use of uninitialized value of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 136
  40    0    0    0   40
S32-list/tail.t....................................# Range.tail on lazy list does not work
# Range.tail(5) on lazy list does not work
  24    0    0    0   24
S32-list/unique.t..................................  34    0    0    0   34
S32-num/abs.t......................................  49    0    0    0   49
S32-num/base.t.....................................  44    0    0    0   44
S32-num/complex.t..................................# > comparison of complex numbers dies
# Cannot arithmetically compare Complex numbers
# Num(Complex) pays attention to $*TOLERANCE
 512    0    0    0  512
S32-num/cool-num.rakudo.moar.......................  39    0    0    4   43
     4 skipped: angle conversion RT #124816
S32-num/exp.t......................................  72    0    0    0   72
S32-num/expmod.t................................... 117    0    0    0  117
S32-num/fatrat.rakudo.moar......................... 279    0    1    2  282
     2 skipped: FatRat arith + type objects RT #124814
     1 todo   : unknown RT \#124815
S32-num/int.rakudo.moar............................# conversion from string to number fails because of trailing characters (1)
# conversion from string to number fails because of trailing characters (2)
 104    0    3    0  107
     3 todo   : Inf and NaN NYI for Int RT \#124818
S32-num/is-prime.t.................................  39    0    0    0   39
S32-num/log.rakudo.moar............................  28    0    1    0   29
     1 todo   : HugeInt.log RT \#124821
S32-num/narrow.t...................................  17    0    0    0   17
S32-num/pi.t.......................................# pi() is not a sub
# tau() is not a sub
   8    0    0    0    8
S32-num/polar.t....................................  48    0    0    0   48
S32-num/polymod.t..................................   4    0    0    0    4
S32-num/power.rakudo.moar..........................  63    0   11    2   76
     2 skipped: big exponents RT #124798: passes on OSX, fails on Linux
     8 todo   : big exponents RT \#124798
     1 todo   : i RT \#124810
     2 todo   : wrong results for "NaN" used with "**" RT \#124800
S32-num/rand.rakudo.moar...........................# did we throws-like X::Obsolete?
# did we throws-like X::Obsolete?
 112    0    0    1  113
     1 skipped: Test is too slow; srand call incorrect RT #124812
S32-num/rat.rakudo.moar............................ 829    0    0    1  830
     1 skipped: RT #74648
S32-num/real-bridge.t.............................. 200    0    0    0  200
S32-num/roots.t....................................  55    0    0    0   55
S32-num/rounders.t................................. 134    0    0    0  134
S32-num/rshift_pos_amount.t........................ 189    0    0    0  189
S32-num/sign.t.....................................# did we throws-like Exception?
# did we throws-like X::Numeric::Real?
  35    0    0    0   35
S32-num/sqrt.t.....................................  18    0    0    0   18
S32-num/stringify.rakudo.moar......................Use of uninitialized value of type Complex in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at t/spec/S32-num/stringify.rakudo.moar line 37
Use of uninitialized value of type Complex in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at t/spec/S32-num/stringify.rakudo.moar line 38
Use of uninitialized value of type Rat in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at t/spec/S32-num/stringify.rakudo.moar line 77
Use of uninitialized value of type Rat in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in block  at t/spec/S32-num/stringify.rakudo.moar line 78
 108    0    0    4  112
     4 skipped: big stuff RT #124796
S32-num/unpolar.t.................................. 199    0    0    0  199
S32-scalar/defined.t...............................  56    0    0    0   56
S32-scalar/perl.rakudo.moar........................   5    0    2    0    7
     2 todo   : cannot roundtrip constrained scalars yet
S32-scalar/undef.rakudo.moar.......................Use of uninitialized value of type Any in numeric context  in block <unit> at t/spec/S32-scalar/undef.rakudo.moar line 300
Use of uninitialized value of type Any in numeric context  in block <unit> at t/spec/S32-scalar/undef.rakudo.moar line 301
Use of uninitialized value of type Any in numeric context  in block <unit> at t/spec/S32-scalar/undef.rakudo.moar line 302
Use of uninitialized value of type Any in numeric context  in block <unit> at t/spec/S32-scalar/undef.rakudo.moar line 303
Use of uninitialized value of type Any in numeric context  in block <unit> at t/spec/S32-scalar/undef.rakudo.moar line 305
Use of uninitialized value of type Any in numeric context  in block <unit> at t/spec/S32-scalar/undef.rakudo.moar line 305
Use of Nil in string context  in block  at t/spec/S32-scalar/undef.rakudo.moar line 308
  73    0    2   16   91
    10 skipped: Cannot use bind operator with this left-hand side RT #124566
     6 skipped: access to &your_sub RT #124565
     1 todo   : definedness of array RT \#124563
     1 todo   : definedness of hash RT \#124564
S32-str/append.t...................................   7    0    0    0    7
S32-str/bool.t.....................................  12    0    0    0   12
S32-str/capitalize.t...............................  17    0    0    0   17
S32-str/chomp.t....................................  39    0    0    0   39
S32-str/chop.t.....................................# did we throws-like Exception?
# did we throws-like Exception?
# did we throws-like Exception?
# did we throws-like Exception?
  32    0    0    0   32
S32-str/comb.rakudo.moar...........................# comb with "foobarbaz", size 10
# comb with "foobarbaz", size 9
# comb with "foobarbaz", size 8
# comb with "foobarbaz", size 3
# comb with "foobarbaz", size 2
# comb with "foobarbaz", size 1
# comb with "foobarbaz", size 0
# comb with "foobarbaz", size -1
# comb with "foobarbaz", size 10, limit *
# comb with "foobarbaz", size 9, limit *
# comb with "foobarbaz", size 8, limit *
# comb with "foobarbaz", size 3, limit *
# comb with "foobarbaz", size 2, limit *
# comb with "foobarbaz", size 1, limit *
# comb with "foobarbaz", size 0, limit *
# comb with "foobarbaz", size -1, limit *
# comb with "foobarbaz", size 10, limit Inf
# comb with "foobarbaz", size 9, limit Inf
# comb with "foobarbaz", size 8, limit Inf
# comb with "foobarbaz", size 3, limit Inf
# comb with "foobarbaz", size 2, limit Inf
# comb with "foobarbaz", size 1, limit Inf
# comb with "foobarbaz", size 0, limit Inf
# comb with "foobarbaz", size -1, limit Inf
# comb with "foobarbaz", size 10, limit 20
# comb with "foobarbaz", size 9, limit 20
# comb with "foobarbaz", size 8, limit 20
# comb with "foobarbaz", size 3, limit 20
# comb with "foobarbaz", size 2, limit 20
# comb with "foobarbaz", size 1, limit 20
# comb with "foobarbaz", size 0, limit 20
# comb with "foobarbaz", size -1, limit 20
  77    0    0    1   78
     1 skipped: cannot call match, no signature matches RT #124738
S32-str/contains.t.................................  20    0    0    0   20
S32-str/encode.rakudo.moar.........................# did we throws-like Exception?
# did we throws-like Exception?
    
# Failed test '.message matches rx:s:i/line 1 col\w* 2|term/'
# at gen/moar/m-CORE.setting line 4009
    # Expected: rx:s:i/line 1 col\w* 2|term/
    # Got:      Malformed UTF-16; odd number of bytes
    # Looks like you failed 1 test of 3
    
# Failed test '.message matches rx:s:i/line 1 col\w* 2/'
# at gen/moar/m-CORE.setting line 4009
    # Expected: rx:s:i/line 1 col\w* 2/
    # Got:      Malformed UTF-16; unexpected low surrogate
    # Looks like you failed 1 test of 3
# Non-ascii character
# Non-latin-1 character
# Non-windows-1252 character
# Non-utf-8 character
# Non-utf-16 character
  34    0    2    1   37
     1 skipped: We do not handle NDF yet RT #124687
     1 todo   : RT\#107204 should say line and column
     1 todo   : RT\#107204 should say line and column or mention term(ination)
S32-str/ends-with.t................................   8    0    0    0    8
S32-str/fc.t.......................................  12    0    0    0   12
S32-str/flip.t.....................................  13    0    0    0   13
S32-str/indent.t...................................Asked to remove 4 spaces, but the shortest indent is 3 spaces  in block <unit> at t/spec/S32-str/indent.t line 61
  62    0    0    0   62
S32-str/index.t....................................# index with negative start position fails (2)
# sub does 1e+34 fails
Use of uninitialized value $desc of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in sub proclaim at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 513
# method does 1e+34 fails
Use of uninitialized value $desc of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in sub proclaim at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 513
# sub does 1e+35 fails
Use of uninitialized value $desc of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in sub proclaim at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 513
# method does 1e+35 fails
Use of uninitialized value $desc of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in sub proclaim at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 513
  46    0    0    0   46
S32-str/indices.t..................................  24    0    0    0   24
S32-str/lc.t.......................................  18    0    0    0   18
S32-str/length.t...................................  29    0    0    0   29
S32-str/lines.t....................................  47    0    0    0   47
S32-str/numeric.rakudo.moar........................ 163    0    5    0  168
     5 todo   : Unsure of what val() should accept
S32-str/ords.t.....................................   8    0    0    0    8
S32-str/pack.t.....................................  14    0    0    0   14
S32-str/pos.t......................................   2    0    0    0    2
S32-str/rindex.t...................................# rindex with negative start position fails (2)
# sub does 1e+34 fails
Use of uninitialized value $desc of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in sub proclaim at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 513
# method does 1e+34 fails
Use of uninitialized value $desc of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in sub proclaim at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 513
# sub does 1e+35 fails
Use of uninitialized value $desc of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in sub proclaim at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 513
# method does 1e+35 fails
Use of uninitialized value $desc of type Any in string context
Any of .^name, .perl, .gist, or .say can stringify undefined things, if needed.  in sub proclaim at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/lib/Test.pm6 line 513
  45    0    0    0   45
S32-str/samecase.t.................................   8    0    0    0    8
S32-str/samemark.t.................................   8    0    0    0    8
S32-str/split-simple.t.............................# split(/regex/, Str)
# Str.split(Any) (with Str semantics
# Str.split(/regex/) (with * limit)
# split(/regex/, Str) (with * limit)
# Str.split(Any) (with Str semantics (with * limit)
# Int.split(Int)
# split(Int, Int)
# Non-matching regex returns whole string
# Non-matching string returns whole string
# trailing matches leave an empty string
# Negative limit returns empty List
# Zero limit returns empty List
# Limit of 1 returns a 1 element List (with identical string)
# Split on an Integer with limit parameter works
# Limit of 3 returns 3 element List including empty Strings
# Limit larger than number of split values doesn't return extranuous elements
# split into characters respects limit (1)
# split into characters respects limit (2)
# split with zero-width assertions
  29    0    0    0   29
S32-str/split.rakudo.moar..........................# tested "abcd" with "any character"
# tested "aaaa" with "only chars matching \"a\""
# tested "aaaa" with "only chars matching /a/"
# tested "aaaa" with "only chars matching rx:Perl5/a/"
# tested "foo bar baz" with " "
# tested "foo bar baz" with / " " /
# tested "foo bar baz" with / \s /
# tested "foo bar baz" with / \s+ /
# tested "foo bar baz" with rx:Perl5/ /
# tested "foo bar baz" with rx:Perl5/\s/
# tested "foo bar baz" with rx:Perl5/\s+/
# tested "thisisit" with "s"
# tested "thisisit" with /s/
# tested "|foo|bar|baz|zoo" with "|"
# tested "|foo|bar|baz|zoo" with / \| /
# tested "foo|bar|baz|zoo|" with "|"
# tested "foo|bar|baz|zoo|" with / \| /
# tested "foo|bar|baz|zoo|" with rx:Perl5/\|/
# tested "comma, separated, values" with ", "
# tested "comma, separated, values" with / ", " /
# tested "comma, separated, values" with / "," \s /
# tested "comma, separated, values" with / "," \s+ /
# tested "comma, separated, values" with rx:Perl5/, /
# tested "comma, separated, values" with rx:Perl5/,\s/
# tested "comma, separated, values" with rx:Perl5/,\s+/
# tested "" with "a"
# tested "" with /a/
# tested "" with "ab"
# tested "" with /ab/
# tested "" with $("a", "b")
# tested "" with /a|b/
# tested "" with /\s/
# tested "" with rx:Perl5/\s/
# tested "" with "empty string"
# tested "" with "empty string"
# tested "zzzzz" with "no match"
# tested "hello world" with $("a", "e", "i", "o", "u")
# tested "hello world" with /<[aeiou]>/
# tested "hello world" with rx:Perl5/[aeiou]/
# tested "hello-world" with /<.ws>/
# tested "hello-world" with /<.wb>/
# tested "-a-b-c-" with /<.ws>/
# tested "-a-b-c-" with /<.wb>/
# clashing named parameters
  56    0    0    1   57
     1 skipped: No such method null for invocant of type Cursor RT #124685
S32-str/sprintf-b.rakudo.moar......................  68    0   90    7  165
     1 skipped: "%+ #10b" dies with "unsupported use of %+ variable;" RT #124727
     1 skipped: "%+ 010b" dies with "unsupported use of %+ variable;" RT #124718
     1 skipped: "%+ 10b" dies with "Unsupported use of %+ variable;" RT #124710
     1 skipped: "%- #10b" dies with "unsupported use of %- variable;" RT #124725
     1 skipped: "%- +10b" dies with "unsupported use of %- variable;" RT #124722
     1 skipped: "%- 10b" dies with "Unsupported use of %- variable;" RT #124707
     1 skipped: "%- 10b" dies with "unsupported use of %- variable;" RT #124715
     2 todo   : "%b" with flag "hash" and negative argument not correct RT \#124698
     2 todo   : "%b" with flag "plus" not correct RT \#124696
     1 todo   : "%b" with flag "space" not correct RT \#124697
     5 todo   : "%b" with flags "hash" and "plus" not correct RT \#124711
     3 todo   : "%b" with flags "hash" and "space" not correct RT \#124712
     2 todo   : "%b" with flags "minus" and "hash" and negative argument not correct RT \#124708
     2 todo   : "%b" with flags "minus" and "plus" and positiv argument not correct RT \#124705
     2 todo   : "%b" with flags "minus" and "space" and positiv argument not correct RT \#124706
     4 todo   : "%b" with flags "minus", "plus" and "hash" not correct RT \#124723
     2 todo   : "%b" with flags "minus", "plus" and "space" and positive argument not correct RT \#124721
     4 todo   : "%b" with flags "minus", "plus", "space" and "hash" not correct RT \#124732
     4 todo   : "%b" with flags "minus", "space" and "hash" not correct RT \#124724
     2 todo   : "%b" with flags "plus" and "space" and positive argument not correct RT \#124709
     4 todo   : "%b" with flags "plus", "space" and "hash" not correct RT \#124726
     1 todo   : "%b" with flags "zero" and "hash" not correct RT \#124703
     3 todo   : "%b" with flags "zero" and "hash" not correct RT \#124704
     3 todo   : "%b" with flags "zero" and "plus" not correct RT \#124699
     1 todo   : "%b" with flags "zero" and "plus" not correct RT \#124700
     3 todo   : "%b" with flags "zero" and "space" not correct RT \#124701
     1 todo   : "%b" with flags "zero" and "space" not correct RT \#124702
     2 todo   : "%b" with flags "zero", "minus" and "hash" not correct RT \#124716
     2 todo   : "%b" with flags "zero", "minus" and "plus" not correct RT \#124713
     2 todo   : "%b" with flags "zero", "minus" and "space" not correct RT \#124714
     4 todo   : "%b" with flags "zero", "minus", "plus" and "hash" not correct RT \#124729
     2 todo   : "%b" with flags "zero", "minus", "plus" and "space" not correct RT \#124728
     4 todo   : "%b" with flags "zero", "minus", "plus", "space" and "hash" not correct RT \#124733
     4 todo   : "%b" with flags "zero", "minus", "space" and "hash" not correct RT \#124730
     4 todo   : "%b" with flags "zero", "plus" and "hash" not correct RT \#124719
     3 todo   : "%b" with flags "zero", "plus" and "space" not correct RT \#124717
     4 todo   : "%b" with flags "zero", "plus", "space" and "hash" not correct RT \#124731
     4 todo   : "%b" with flags "zero", "space" and "hash" not correct RT \#124720
     1 todo   : "%b" with precision and negative argument not correct RT \#124734
     1 todo   : "%b" with precision and negative argument not correct RT \#124735
     1 todo   : "%b" with precision and negative argument not correct RT \#124736
     1 todo   : RT \#123979
S32-str/sprintf.t..................................# adequate error when sprintf %d directive doesn't find a corresponding argument
 157    0    0    0  157
S32-str/starts-with.t..............................   8    0    0    0    8
S32-str/substr-eq.t................................  12    0    0    0   12
S32-str/substr-rw.rakudo.moar......................  31    0    8    0   39
     8 todo   : NYI
S32-str/substr.rakudo.moar.........................  55    0    1    0   56
     1 todo   : RT \#123602
S32-str/tc.t.......................................   9    0    0    0    9
S32-str/tclc.t.....................................   6    0    0    0    6
S32-str/trim.t.....................................  36    0    0    0   36
S32-str/uc.t.......................................  19    0    0    0   19
S32-str/unpack.t...................................  24    0    0    0   24
S32-str/utf8-c8.t..................................  31    0    0    0   31
S32-str/words.t....................................  16    0    0    0   16
S32-temporal/Date.t................................  88    0    0    0   88
S32-temporal/DateTime-Instant-Duration.t...........WARNINGS for /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/S32-temporal/DateTime-Instant-Duration.t:
Useless use of "+" in expression "days(1) + 1" in sink context (line 66)
Useless use of constant string "Instant subtraction (June 30 leap second)" in sink context (lines 66, 66)
  55    0    0    0   55
S32-temporal/DateTime.t............................# did we throws-like X::OutOfRange?
 247    0    0    0  247
S32-temporal/calendar.t............................ 130    0    0    0  130
S32-temporal/local.rakudo.moar.....................  16    0    9    0   25
     9 todo   : RT \#122702
S32-trig/atan2.t................................... 115    0    0    0  115
S32-trig/cos.t..................................... 154    0    0    0  154
S32-trig/cosec.t................................... 114    0    0    0  114
S32-trig/cosech.t.................................. 146    0    0    0  146
S32-trig/cosh.t.................................... 138    0    0    0  138
S32-trig/cotan.t................................... 114    0    0    0  114
S32-trig/cotanh.t.................................. 146    0    0    0  146
S32-trig/e.t.......................................# e(), dies as a sub
   5    0    0    0    5
S32-trig/pi.t......................................   3    0    0    0    3
S32-trig/sec.t..................................... 114    0    0    0  114
S32-trig/sech.t.................................... 154    0    0    0  154
S32-trig/simple.t..................................  12    0    0    0   12
S32-trig/sin.t..................................... 154    0    0    0  154
S32-trig/sinh.t.................................... 138    0    0    0  138
S32-trig/tan.t..................................... 138    0    0    0  138
S32-trig/tanh.t.................................... 154    0    0    0  154
                                                   pass fail todo skip plan
integration/99problems-01-to-10.t..................  22    0    0    0   22
integration/99problems-11-to-20.t..................  25    0    0    0   25
integration/99problems-21-to-30.t..................  15    0    0    0   15
integration/99problems-31-to-40.t..................  66    0    0    1   67
     1 skipped: No Benchmark module yet
integration/99problems-41-to-50.t..................  13    0    0    0   13
integration/99problems-51-to-60.t..................  35    0    0    2   37
     1 skipped: Test(s) not yet written: (**) Construct height-balanced binary trees with a given number of nodes
     1 skipped: Test(s) not yet written: (**) Generate-and-test paradigm
integration/99problems-61-to-70.t..................   9    0    0    6   15
     1 skipped: Test(s) not yet written: (**) A string representation of binary trees
     1 skipped: Test(s) not yet written: (**) Construct a complete binary tree
     1 skipped: Test(s) not yet written: (**) Dotstring representation of binary trees
     1 skipped: Test(s) not yet written: (**) Preorder and inorder sequences of binary trees
     1 skipped: Test(s) not yet written: (**) Tree construction from a node string
     1 skipped: Test(s) not yet written: (***) Layout a binary tree (3)
integration/advent2009-day01.t.....................   2    0    0    0    2
integration/advent2009-day02.t.....................  10    0    0    0   10
integration/advent2009-day03.t.....................   6    0    0    0    6
integration/advent2009-day04.t.....................# did we throws-like X::TypeCheck::Argument?
   6    0    0    0    6
integration/advent2009-day05.t.....................  17    0    0    0   17
integration/advent2009-day06.t.....................# Non-dwimmy hyperoperator on arrays of different size fails
  15    0    0    0   15
integration/advent2009-day07.t.....................  14    0    0    0   14
integration/advent2009-day08.t.....................   8    0    0    0    8
integration/advent2009-day09.t.....................# wrong number of parameters, no exception object
# Can't modify parameters within by default, no exception object.
# Autoflattening doesnt exist, no exception object
  17    0    0    0   17
integration/advent2009-day10.t.....................   5    0    0    0    5
integration/advent2009-day11.t.....................   6    0    0    0    6
integration/advent2009-day12.t.....................   9    0    0    0    9
integration/advent2009-day13.t.....................  16    0    0    0   16
integration/advent2009-day14.t.....................  21    0    0    0   21
integration/advent2009-day15.t.....................   4    0    0    0    4
integration/advent2009-day16.t.....................  11    0    0    0   11
integration/advent2009-day17.t.....................  62    0    0    0   62
integration/advent2009-day18.t.....................   7    0    0    0    7
integration/advent2009-day19.t.....................   6    0    0    0    6
integration/advent2009-day20.t.....................  21    0    0    0   21
integration/advent2009-day21.t.....................   2    0    0    0    2
integration/advent2009-day22.t.....................   4    0    0    0    4
integration/advent2009-day23.t.....................  10    0    0    0   10
integration/advent2009-day24.t.....................   4    0    0    0    4
integration/advent2010-day03.t.....................  12    0    0    0   12
integration/advent2010-day04.t.....................  11    0    0    0   11
integration/advent2010-day06.t.....................  12    0    0    0   12
integration/advent2010-day07.t.....................# did we throws-like X::Undeclared?
   8    0    0    0    8
integration/advent2010-day08.t.....................   8    0    0    0    8
integration/advent2010-day10.rakudo.moar...........   2    0    2    0    4
     2 todo   : RT \#121843
integration/advent2010-day11.t.....................   2    0    0    0    2
integration/advent2010-day12.t.....................  13    0    0    0   13
integration/advent2010-day14.t.....................   5    0    0    0    5
integration/advent2010-day16.t.....................  13    0    0    0   13
integration/advent2010-day19.rakudo.moar...........   5    0    1    0    6
     1 todo   : RT \#121940 - should be 'True'
integration/advent2010-day21.t.....................   4    0    0    0    4
integration/advent2010-day22.t.....................   3    0    0    0    3
integration/advent2010-day23.t.....................   8    0    0    0    8
integration/advent2011-day03.t.....................   2    0    0    0    2
integration/advent2011-day04.t.....................   2    0    0    0    2
integration/advent2011-day05.t.....................   5    0    0    0    5
integration/advent2011-day07.t.....................   3    0    0    0    3
integration/advent2011-day10.t.....................   5    0    0    0    5
integration/advent2011-day11.t.....................# order total with typo
# private method sanity
# private method sanity
# inheritance private method, (untrusting)
   9    0    0    0    9
integration/advent2011-day14.t.....................   8    0    0    0    8
integration/advent2011-day15.t.....................   9    0    0    0    9
integration/advent2011-day16.t.....................  12    0    0    0   12
integration/advent2011-day20.t.....................  16    0    0    0   16
integration/advent2011-day22.t.....................   2    0    0    0    2
integration/advent2011-day23.t.....................  55    0    0    0   55
integration/advent2011-day24.t.....................# ambiguous multi - dies
   8    0    0    0    8
integration/advent2012-day02.t.....................   4    0    0    0    4
integration/advent2012-day03.t.....................   2    0    0    0    2
integration/advent2012-day04.rakudo.moar...........   7    0    1    0    8
     1 todo   : failing during 2015.09 release...
integration/advent2012-day06.t.....................   2    0    0    0    2
integration/advent2012-day09.t.....................   8    0    0    0    8
integration/advent2012-day10.t.....................  26    0    0    0   26
integration/advent2012-day12.t.....................   5    0    0    0    5
integration/advent2012-day13.t.....................# baggy assign (dies)
  42    0    0    0   42
integration/advent2012-day14.t.....................   6    0    0    0    6
integration/advent2012-day15.rakudo.moar...........  10    0    1    0   11
     1 todo   : RT \#121722
integration/advent2012-day16.t.....................  11    0    0    0   11
integration/advent2012-day19.t.....................  10    0    0    0   10
integration/advent2012-day20.t.....................   2    0    0    0    2
integration/advent2012-day21.t.....................# gerdr: 0.5131132 seconds
# recursive-ternary: 0.5961424 seconds
# kaz: 0.6517078 seconds
# loop: 0.68305388 seconds
# hand-memoization: 0.947936 seconds
# sequence-ternary: 1.2336620 seconds
# recursive-ternary-hand-cached: 2.00215760 seconds
# sequence: 2.6793327 seconds
   9    0    0    0    9
integration/advent2012-day22.t.....................   6    0    0    0    6
integration/advent2012-day23.t.....................Weird node visited: QAST::BVal
Weird node visited: QAST::BVal
Weird node visited: QAST::BVal
Weird node visited: QAST::BVal
   2    0    0    0    2
integration/advent2012-day24.t.....................   1    0    0    0    1
integration/advent2013-day02.t.....................# Cannot access attribute on type object
  12    0    0    0   12
integration/advent2013-day04.t.....................# Runaway multiline is an error, no exception object yet
   7    0    0    0    7
integration/advent2013-day06.t.....................   1    0    0    0    1
integration/advent2013-day07.t.....................   6    0    0    0    6
integration/advent2013-day08.t.....................  11    0    0    0   11
integration/advent2013-day09.t.....................# did we throws-like Exception?
  21    0    0    0   21
integration/advent2013-day10.rakudo.moar...........# Square parens not ok
# missing required adverb - dies
  43    0    1    0   44
     1 todo   : adverb stacking
integration/advent2013-day12.t.....................  32    0    0    0   32
integration/advent2013-day14.t.....................  10    0    0    0   10
integration/advent2013-day15.t.....................  30    0    0    0   30
integration/advent2013-day18.t.....................  10    0    0    0   10
integration/advent2013-day19.t.....................   4    0    0    0    4
integration/advent2013-day20.t.....................# did we throws-like X::Parameter::Default::TypeCheck?
# did we throws-like X::TypeCheck::Assignment?
  22    0    0    0   22
integration/advent2013-day21.t.....................# did we throws-like X::TypeCheck::Argument?
# did we throws-like X::TypeCheck::Argument?
# did we throws-like X::TypeCheck::Argument?
# readonly trait, does not have a type object yet
  24    0    0    0   24
integration/advent2013-day22.t.....................   9    0    0    0    9
integration/advent2013-day23.t.....................   9    0    0    0    9
integration/advent2014-day05.rakudo.moar...........   6    0    0    1    7
     1 skipped: sometimes hangs, sometimes segfaults
integration/advent2014-day13.t.....................  13    0    0    0   13
integration/advent2014-day16.t.....................  21    0    0    0   21
integration/code-blocks-as-sub-args.t..............# pointy block is not a sub (with optional last arg)
   4    0    0    0    4
integration/error-reporting.rakudo.moar............# Error message: Constraint type check failed for parameter '$x'
  21    0    1    0   22
     1 todo   : nigh
integration/lazy-bentley-generator.t...............   1    0    0    0    1
integration/lexical-array-in-inner-block.t.........   2    0    0    0    2
integration/lexicals-and-attributes.t..............   8    0    0    0    8
integration/man-or-boy.t...........................  10    0    0    0   10
integration/method-calls-and-instantiation.t.......   2    0    0    0    2
integration/no-indirect-new.t......................# what looks like a constructor call is really a coersion to A, and should therefore be disallowed
   2    0    0    0    2
integration/packages.t.............................   3    0    0    0    3
integration/pair-in-array.t........................   3    0    0    0    3
integration/passing-pair-class-to-sub.t............   2    0    0    0    2
integration/precompiled.rakudo.moar................WARNINGS for /tmp/p6testmod0DF65B91/p6testmod084F0231.pm6:
Useless use of constant integer 42 in sink context (line 1)
WARNINGS for /tmp/p6testmod0DF65B91/p6testmod96055F2F.pm6:
Useless use of constant integer 42 in sink context (line 1)
    
# Failed test 'precompiled EVAL in BEGIN (Compiled)'
# at /home/coke/sandbox/perl6-roast-data/rakudo.moar-jit/t/spec/packages/Test/Compile.pm line 228
    # Missing or wrong version of dependency 'cuid_9_1452691176.87918' (from '/tmp/p6testmod0DF65B91/p6testmod1E041346.pm6')
    # Looks like you failed 1 test of 2
   6    0    1    0    7
     1 todo   : RT \#124324 Missing or wrong version of dependency
integration/real-strings.t.........................# variables returned from split and passed to pointy block are still ro
  20    0    0    0   20
integration/role-composition-vs-attribute.rakudo...# unknown attribute dies at compile time
   6    0    0    4   10
     2 skipped: alas, no visibility of native private attributes yet
     2 skipped: alas, no visibility of private attributes in other role
integration/rule-in-class-Str.t....................   3    0    0    0    3
integration/say-crash.t............................   4    0    0    0    4
integration/substr-after-match-in-gather-in-for.t..   1    0    0    0    1
integration/topic_in_double_loop.t.................   5    0    0    0    5
integration/variables-in-do.t......................   3    0    0    0    3
integration/weird-errors.rakudo.moar...............# time() with arguments dies
# weird string that once parsed in rakudo
    
# Failed test 'code dies'
# at t/spec/integration/weird-errors.rakudo.moar line 159
    # Looks like you failed 1 test of 2
  19    0    1    0   20
     1 todo   : Feels like a bogus test in light of recent changes
                                                   pass fail todo skip plan
rosettacode/greatest_element_of_a_list.t...........   1    0    0    0    1
rosettacode/sierpinski_triangle.t..................   1    0    0    0    1
----------------
"Synopsis", "pass","fail","todo","skip","plan","spec"
"S01",           0,     0,     0,    75,    75,    86
"S02",        6914,     0,    95,   342,  7351,  7350
"S03",        5832,     0,   101,    88,  6021,  6043
"S04",        1453,     0,    35,    32,  1520,  1552
"S05",        5830,     0,    82,    94,  6006,  6176
"S06",        2141,     1,    48,    80,  2270,  2316
"S07",          38,     0,     4,     0,    42,   138
"S09",        2303,     0,    10,    37,  2350,  2350
"S10",         128,     0,     2,     2,   132,   189
"S11",         147,     0,     6,    11,   164,   183
"S12",        1631,     0,    22,   132,  1785,  1840
"S13",          62,     0,     0,     0,    62,    72
"S14",         391,     0,     5,     5,   401,   414
"S15",       79040,     0,     3,    18, 79061, 79081
"S16",         699,     0,     3,   159,   861,   917
"S17",         889,    31,     2,    28,   950,   951
"S19",          14,     0,     0,     0,    14,    18
"S22",          19,     0,     0,     0,    19,    19
"S24",          18,     0,     0,     0,    18,    89
"S26",        1909,     0,     8,    72,  1989,  1989
"S28",           8,     0,     0,     0,     8,     8
"S29",         364,     0,     3,     2,   369,   369
"S32",       12766,     0,   177,   229, 13172, 11404
"int",        1279,     0,     9,    14,  1302,  1288
"ros",           2,     0,     0,     0,     2,     2
"total",    123877,    32,   615,  1420,125944,124844
----------------
Failure summary:
S06-advanced/wrap.rakudo.moar 59 - {nextsame}() dies properly
S17-lowlevel/lock.t aborted 9 test(s)
S17-promise/start.t aborted 22 test(s)
