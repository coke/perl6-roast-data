#!/home/coke/perl5/perlbrew/perls/perl-5.18.2/bin/perl

use Modern::Perl;
use Text::CSV;

my %impls = (
    "rakudo.jvm" => {
        dir => "rakudo.jvm"
    },
    "rakudo.moar" => {
        dir => "rakudo.moar"
    },
    "rakudo.moar-jit" => {
        dir => "rakudo.moar-jit"
    },
    "rakudo.parrot" => {
        dir => "rakudo.parrot"
    },
);

my %line;
my %pass;

my $csv = Text::CSV->new() ;

my $best = "";
my $max = 0;
foreach my $type (keys %impls) {

    my $output = `grep '"total"' log/${type}_summary.out`;
    $output =~ s/total/$type/;
    chomp $output;
    $csv->parse($output);
    @{$line{$type}} = $csv->fields();
    $pass{$type} = 0+(split(',', $output))[1];
    if ($pass{$type} > $max) {
        $best = $type;
        $max = $pass{$type};
    }
}

my $date=`date +'%Y-%m-%d'`;
chomp $date;

foreach my $type (sort keys %impls) {
    my $impl_version=`(cd $impls{$type}{dir} && git rev-parse --short HEAD)`;
    chomp $impl_version;

    my $roast_version=`(cd $impls{$type}{dir}/t/spec && git rev-parse --short HEAD)`;
    chomp $roast_version;

    my $impl = shift @{$line{$type}};
    my @vals = map { s/^\s+//; $_ } @{$line{$type}};

    my $per = "";
    if ($max != 0) {
        $per = sprintf "%05.2f%%", $pass{$type}/$max*100;
    }

    splice @vals, 0, 0, $date, $per, $roast_version;
    print join(",", $impl, @vals, $impl_version), ",\n";
}
